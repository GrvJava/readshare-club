{"message":"Loading init options","level":"info","timestamp":"2019-12-16T15:49:18+05:30"}
{"message":"Populating INIT_OPTS","level":"info","timestamp":"2019-12-16T15:49:18+05:30"}
{"message":"Creating controller","level":"info","timestamp":"2019-12-16T15:49:18+05:30"}
{"message":"Loading express routes","level":"info","timestamp":"2019-12-16T15:49:18+05:30"}
{"message":"Initiating controller","level":"info","timestamp":"2019-12-16T15:49:18+05:30"}
{"message":"Initializing controller","level":"info","timestamp":"2019-12-16T15:49:18+05:30"}
{"message":"Starting the controller object with: { LOGGER: \n   DerivedLogger {\n     _readableState: \n      ReadableState {\n        objectMode: true,\n        highWaterMark: 16,\n        buffer: BufferList { head: null, tail: null, length: 0 },\n        length: 0,\n        pipes: [Array],\n        pipesCount: 2,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: false,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        paused: false,\n        emitClose: true,\n        destroyed: false,\n        defaultEncoding: 'utf8',\n        awaitDrain: 0,\n        readingMore: true,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     domain: null,\n     _events: { prefinish: [Function: prefinish], end: [Array], data: [Array] },\n     _eventsCount: 3,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: true,\n        highWaterMark: 16,\n        finalCalled: false,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        destroyed: false,\n        decodeStrings: true,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: false,\n        bufferProcessing: false,\n        onwrite: [Function],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 6,\n        prefinished: false,\n        errorEmitted: false,\n        emitClose: true,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     _transformState: \n      { afterTransform: [Function: bound afterTransform],\n        needTransform: true,\n        transforming: false,\n        writecb: null,\n        writechunk: null,\n        writeencoding: 'utf8' },\n     silent: undefined,\n     format: Format { options: {} },\n     defaultMeta: { timestamp: '2019-12-16T15:49:18+05:30' },\n     levels: \n      { error: 0,\n        warn: 1,\n        info: 2,\n        http: 3,\n        verbose: 4,\n        debug: 5,\n        silly: 6 },\n     level: 'info',\n     exceptions: ExceptionHandler { logger: [Circular], handlers: Map {} },\n     rejections: RejectionHandler { logger: [Circular], handlers: Map {} },\n     profilers: {},\n     exitOnError: true },\n  PROGRAM_OPTS: \n   Command {\n     commands: [],\n     options: [ [Object], [Object], [Object] ],\n     _execs: Set {},\n     _allowUnknownOption: false,\n     _args: [],\n     _name: 'app',\n     _helpFlags: '-h, --help',\n     _helpDescription: 'output usage information',\n     _helpShortFlag: '-h',\n     _helpLongFlag: '--help',\n     Command: { [Function: Command] super_: [Object] },\n     Option: [Function: Option],\n     CommanderError: [Function: CommanderError],\n     _events: \n      { 'option:verbose': [Function],\n        'option:digitalmarketplace': [Function],\n        'option:rsa': [Function] },\n     _eventsCount: 3,\n     rawArgs: \n      [ '/usr/local/bin/node',\n        '/home/gauravkumar/grv_java/readshare-club/app.js' ],\n     args: [] } }","level":"info","timestamp":"2019-12-16T15:49:18+05:30"}
{"message":"Init all dependencies","level":"info","timestamp":"2019-12-16T15:49:18+05:30"}
{"message":"creating the web server","level":"info","timestamp":"2019-12-16T15:49:18+05:30"}
{"message":"read share service listening on port - 3000","level":"info","timestamp":"2019-12-16T15:49:18+05:30"}
{"message":"Loading init options","level":"info","timestamp":"2019-12-16T15:51:59+05:30"}
{"message":"Populating INIT_OPTS","level":"info","timestamp":"2019-12-16T15:51:59+05:30"}
{"message":"Creating controller","level":"info","timestamp":"2019-12-16T15:51:59+05:30"}
{"message":"Loading express routes","level":"info","timestamp":"2019-12-16T15:51:59+05:30"}
{"message":"Initiating controller","level":"info","timestamp":"2019-12-16T15:51:59+05:30"}
{"message":"Initializing controller","level":"info","timestamp":"2019-12-16T15:51:59+05:30"}
{"message":"Starting the controller object with: { LOGGER: \n   DerivedLogger {\n     _readableState: \n      ReadableState {\n        objectMode: true,\n        highWaterMark: 16,\n        buffer: BufferList { head: null, tail: null, length: 0 },\n        length: 0,\n        pipes: [Array],\n        pipesCount: 2,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: false,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        paused: false,\n        emitClose: true,\n        destroyed: false,\n        defaultEncoding: 'utf8',\n        awaitDrain: 0,\n        readingMore: true,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     domain: null,\n     _events: { prefinish: [Function: prefinish], end: [Array], data: [Array] },\n     _eventsCount: 3,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: true,\n        highWaterMark: 16,\n        finalCalled: false,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        destroyed: false,\n        decodeStrings: true,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: false,\n        bufferProcessing: false,\n        onwrite: [Function],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 6,\n        prefinished: false,\n        errorEmitted: false,\n        emitClose: true,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     _transformState: \n      { afterTransform: [Function: bound afterTransform],\n        needTransform: true,\n        transforming: false,\n        writecb: null,\n        writechunk: null,\n        writeencoding: 'utf8' },\n     silent: undefined,\n     format: Format { options: {} },\n     defaultMeta: { timestamp: '2019-12-16T15:51:59+05:30' },\n     levels: \n      { error: 0,\n        warn: 1,\n        info: 2,\n        http: 3,\n        verbose: 4,\n        debug: 5,\n        silly: 6 },\n     level: 'info',\n     exceptions: ExceptionHandler { logger: [Circular], handlers: Map {} },\n     rejections: RejectionHandler { logger: [Circular], handlers: Map {} },\n     profilers: {},\n     exitOnError: true },\n  PROGRAM_OPTS: \n   Command {\n     commands: [],\n     options: [ [Object], [Object], [Object] ],\n     _execs: Set {},\n     _allowUnknownOption: false,\n     _args: [],\n     _name: 'app',\n     _helpFlags: '-h, --help',\n     _helpDescription: 'output usage information',\n     _helpShortFlag: '-h',\n     _helpLongFlag: '--help',\n     Command: { [Function: Command] super_: [Object] },\n     Option: [Function: Option],\n     CommanderError: [Function: CommanderError],\n     _events: \n      { 'option:verbose': [Function],\n        'option:digitalmarketplace': [Function],\n        'option:rsa': [Function] },\n     _eventsCount: 3,\n     rawArgs: \n      [ '/usr/local/bin/node',\n        '/home/gauravkumar/grv_java/readshare-club/app.js' ],\n     args: [] } }","level":"info","timestamp":"2019-12-16T15:51:59+05:30"}
{"message":"Init all dependencies","level":"info","timestamp":"2019-12-16T15:51:59+05:30"}
{"message":"creating the web server","level":"info","timestamp":"2019-12-16T15:51:59+05:30"}
{"message":"read share service listening on port - 3000","level":"info","timestamp":"2019-12-16T15:51:59+05:30"}
{"message":"Loading init options","level":"info","timestamp":"2019-12-16T15:53:19+05:30"}
{"message":"Populating INIT_OPTS","level":"info","timestamp":"2019-12-16T15:53:19+05:30"}
{"message":"Creating controller","level":"info","timestamp":"2019-12-16T15:53:19+05:30"}
{"message":"Loading express routes","level":"info","timestamp":"2019-12-16T15:53:19+05:30"}
{"message":"Initiating controller","level":"info","timestamp":"2019-12-16T15:53:19+05:30"}
{"message":"Initializing controller","level":"info","timestamp":"2019-12-16T15:53:19+05:30"}
{"message":"Starting the controller object with: { LOGGER: \n   DerivedLogger {\n     _readableState: \n      ReadableState {\n        objectMode: true,\n        highWaterMark: 16,\n        buffer: BufferList { head: null, tail: null, length: 0 },\n        length: 0,\n        pipes: [Array],\n        pipesCount: 2,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: false,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        paused: false,\n        emitClose: true,\n        destroyed: false,\n        defaultEncoding: 'utf8',\n        awaitDrain: 0,\n        readingMore: true,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     domain: null,\n     _events: { prefinish: [Function: prefinish], end: [Array], data: [Array] },\n     _eventsCount: 3,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: true,\n        highWaterMark: 16,\n        finalCalled: false,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        destroyed: false,\n        decodeStrings: true,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: false,\n        bufferProcessing: false,\n        onwrite: [Function],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 6,\n        prefinished: false,\n        errorEmitted: false,\n        emitClose: true,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     _transformState: \n      { afterTransform: [Function: bound afterTransform],\n        needTransform: true,\n        transforming: false,\n        writecb: null,\n        writechunk: null,\n        writeencoding: 'utf8' },\n     silent: undefined,\n     format: Format { options: {} },\n     defaultMeta: { timestamp: '2019-12-16T15:53:19+05:30' },\n     levels: \n      { error: 0,\n        warn: 1,\n        info: 2,\n        http: 3,\n        verbose: 4,\n        debug: 5,\n        silly: 6 },\n     level: 'info',\n     exceptions: ExceptionHandler { logger: [Circular], handlers: Map {} },\n     rejections: RejectionHandler { logger: [Circular], handlers: Map {} },\n     profilers: {},\n     exitOnError: true },\n  PROGRAM_OPTS: \n   Command {\n     commands: [],\n     options: [ [Object], [Object], [Object] ],\n     _execs: Set {},\n     _allowUnknownOption: false,\n     _args: [],\n     _name: 'app',\n     _helpFlags: '-h, --help',\n     _helpDescription: 'output usage information',\n     _helpShortFlag: '-h',\n     _helpLongFlag: '--help',\n     Command: { [Function: Command] super_: [Object] },\n     Option: [Function: Option],\n     CommanderError: [Function: CommanderError],\n     _events: \n      { 'option:verbose': [Function],\n        'option:digitalmarketplace': [Function],\n        'option:rsa': [Function] },\n     _eventsCount: 3,\n     rawArgs: \n      [ '/usr/local/bin/node',\n        '/home/gauravkumar/grv_java/readshare-club/app.js' ],\n     args: [] } }","level":"info","timestamp":"2019-12-16T15:53:19+05:30"}
{"message":"Init all dependencies","level":"info","timestamp":"2019-12-16T15:53:19+05:30"}
{"message":"creating the web server","level":"info","timestamp":"2019-12-16T15:53:19+05:30"}
{"message":"read share service listening on port - 3000","level":"info","timestamp":"2019-12-16T15:53:19+05:30"}
{"message":"Loading init options","level":"info","timestamp":"2019-12-16T17:13:11+05:30"}
{"message":"Populating INIT_OPTS","level":"info","timestamp":"2019-12-16T17:13:11+05:30"}
{"message":"Creating controller","level":"info","timestamp":"2019-12-16T17:13:11+05:30"}
{"message":"Loading express routes","level":"info","timestamp":"2019-12-16T17:13:11+05:30"}
{"message":"Initiating controller","level":"info","timestamp":"2019-12-16T17:13:11+05:30"}
{"message":"Initializing controller","level":"info","timestamp":"2019-12-16T17:13:11+05:30"}
{"message":"Starting the controller object with: { LOGGER: \n   DerivedLogger {\n     _readableState: \n      ReadableState {\n        objectMode: true,\n        highWaterMark: 16,\n        buffer: BufferList { head: null, tail: null, length: 0 },\n        length: 0,\n        pipes: [Array],\n        pipesCount: 2,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: false,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        paused: false,\n        emitClose: true,\n        destroyed: false,\n        defaultEncoding: 'utf8',\n        awaitDrain: 0,\n        readingMore: true,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     domain: null,\n     _events: { prefinish: [Function: prefinish], end: [Array], data: [Array] },\n     _eventsCount: 3,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: true,\n        highWaterMark: 16,\n        finalCalled: false,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        destroyed: false,\n        decodeStrings: true,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: false,\n        bufferProcessing: false,\n        onwrite: [Function],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 6,\n        prefinished: false,\n        errorEmitted: false,\n        emitClose: true,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     _transformState: \n      { afterTransform: [Function: bound afterTransform],\n        needTransform: true,\n        transforming: false,\n        writecb: null,\n        writechunk: null,\n        writeencoding: 'utf8' },\n     silent: undefined,\n     format: Format { options: {} },\n     defaultMeta: { timestamp: '2019-12-16T17:13:11+05:30' },\n     levels: \n      { error: 0,\n        warn: 1,\n        info: 2,\n        http: 3,\n        verbose: 4,\n        debug: 5,\n        silly: 6 },\n     level: 'info',\n     exceptions: ExceptionHandler { logger: [Circular], handlers: Map {} },\n     rejections: RejectionHandler { logger: [Circular], handlers: Map {} },\n     profilers: {},\n     exitOnError: true },\n  PROGRAM_OPTS: \n   Command {\n     commands: [],\n     options: [ [Object], [Object], [Object] ],\n     _execs: Set {},\n     _allowUnknownOption: false,\n     _args: [],\n     _name: 'app',\n     _helpFlags: '-h, --help',\n     _helpDescription: 'output usage information',\n     _helpShortFlag: '-h',\n     _helpLongFlag: '--help',\n     Command: { [Function: Command] super_: [Object] },\n     Option: [Function: Option],\n     CommanderError: [Function: CommanderError],\n     _events: \n      { 'option:verbose': [Function],\n        'option:digitalmarketplace': [Function],\n        'option:rsa': [Function] },\n     _eventsCount: 3,\n     rawArgs: \n      [ '/usr/local/bin/node',\n        '/home/gauravkumar/grv_java/readshare-club/app.js' ],\n     args: [] } }","level":"info","timestamp":"2019-12-16T17:13:11+05:30"}
{"message":"Mysql connection created successfully!","level":"info","timestamp":"2019-12-16T17:13:11+05:30"}
{"message":"Set mysql in controller object","level":"info","timestamp":"2019-12-16T17:13:11+05:30"}
{"message":"Init all dependencies","level":"info","timestamp":"2019-12-16T17:13:11+05:30"}
{"message":"creating the web server","level":"info","timestamp":"2019-12-16T17:13:11+05:30"}
{"message":"read share service listening on port - 3000","level":"info","timestamp":"2019-12-16T17:13:11+05:30"}
{"message":"Loading init options","level":"info","timestamp":"2019-12-17T10:56:07+05:30"}
{"message":"Populating INIT_OPTS","level":"info","timestamp":"2019-12-17T10:56:07+05:30"}
{"message":"Creating controller","level":"info","timestamp":"2019-12-17T10:56:07+05:30"}
{"message":"Loading express routes","level":"info","timestamp":"2019-12-17T10:56:07+05:30"}
{"message":"Initiating controller","level":"info","timestamp":"2019-12-17T10:56:07+05:30"}
{"message":"Initializing controller","level":"info","timestamp":"2019-12-17T10:56:07+05:30"}
{"message":"Starting the controller object with: { LOGGER: \n   DerivedLogger {\n     _readableState: \n      ReadableState {\n        objectMode: true,\n        highWaterMark: 16,\n        buffer: BufferList { head: null, tail: null, length: 0 },\n        length: 0,\n        pipes: [Array],\n        pipesCount: 2,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: false,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        paused: false,\n        emitClose: true,\n        destroyed: false,\n        defaultEncoding: 'utf8',\n        awaitDrain: 0,\n        readingMore: true,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     domain: null,\n     _events: { prefinish: [Function: prefinish], end: [Array], data: [Array] },\n     _eventsCount: 3,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: true,\n        highWaterMark: 16,\n        finalCalled: false,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        destroyed: false,\n        decodeStrings: true,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: false,\n        bufferProcessing: false,\n        onwrite: [Function],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 6,\n        prefinished: false,\n        errorEmitted: false,\n        emitClose: true,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     _transformState: \n      { afterTransform: [Function: bound afterTransform],\n        needTransform: true,\n        transforming: false,\n        writecb: null,\n        writechunk: null,\n        writeencoding: 'utf8' },\n     silent: undefined,\n     format: Format { options: {} },\n     defaultMeta: { timestamp: '2019-12-17T10:56:07+05:30' },\n     levels: \n      { error: 0,\n        warn: 1,\n        info: 2,\n        http: 3,\n        verbose: 4,\n        debug: 5,\n        silly: 6 },\n     level: 'info',\n     exceptions: ExceptionHandler { logger: [Circular], handlers: Map {} },\n     rejections: RejectionHandler { logger: [Circular], handlers: Map {} },\n     profilers: {},\n     exitOnError: true },\n  PROGRAM_OPTS: \n   Command {\n     commands: [],\n     options: [ [Object], [Object], [Object] ],\n     _execs: Set {},\n     _allowUnknownOption: false,\n     _args: [],\n     _name: 'app',\n     _helpFlags: '-h, --help',\n     _helpDescription: 'output usage information',\n     _helpShortFlag: '-h',\n     _helpLongFlag: '--help',\n     Command: { [Function: Command] super_: [Object] },\n     Option: [Function: Option],\n     CommanderError: [Function: CommanderError],\n     _events: \n      { 'option:verbose': [Function],\n        'option:digitalmarketplace': [Function],\n        'option:rsa': [Function] },\n     _eventsCount: 3,\n     rawArgs: \n      [ '/usr/local/bin/node',\n        '/home/gauravkumar/grv_java/readshare-club/app.js' ],\n     args: [] } }","level":"info","timestamp":"2019-12-17T10:56:07+05:30"}
{"message":"Mysql connection created successfully!","level":"info","timestamp":"2019-12-17T10:56:07+05:30"}
{"message":"Set mysql in controller object","level":"info","timestamp":"2019-12-17T10:56:07+05:30"}
{"message":"Initiating test controller","level":"info","timestamp":"2019-12-17T10:56:07+05:30"}
{"message":"Init all dependencies","level":"info","timestamp":"2019-12-17T10:56:07+05:30"}
{"message":"creating the web server","level":"info","timestamp":"2019-12-17T10:56:07+05:30"}
{"message":"read share service listening on port - 3000","level":"info","timestamp":"2019-12-17T10:56:07+05:30"}
{"message":"Loading init options","level":"info","timestamp":"2019-12-17T11:01:15+05:30"}
{"message":"Populating INIT_OPTS","level":"info","timestamp":"2019-12-17T11:01:15+05:30"}
{"message":"Creating controller","level":"info","timestamp":"2019-12-17T11:01:15+05:30"}
{"message":"Loading express routes","level":"info","timestamp":"2019-12-17T11:01:15+05:30"}
{"message":"Initiating controller","level":"info","timestamp":"2019-12-17T11:01:15+05:30"}
{"message":"Initializing controller","level":"info","timestamp":"2019-12-17T11:01:15+05:30"}
{"message":"Starting the controller object with: { LOGGER: \n   DerivedLogger {\n     _readableState: \n      ReadableState {\n        objectMode: true,\n        highWaterMark: 16,\n        buffer: BufferList { head: null, tail: null, length: 0 },\n        length: 0,\n        pipes: [Array],\n        pipesCount: 2,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: false,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        paused: false,\n        emitClose: true,\n        destroyed: false,\n        defaultEncoding: 'utf8',\n        awaitDrain: 0,\n        readingMore: true,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     domain: null,\n     _events: { prefinish: [Function: prefinish], end: [Array], data: [Array] },\n     _eventsCount: 3,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: true,\n        highWaterMark: 16,\n        finalCalled: false,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        destroyed: false,\n        decodeStrings: true,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: false,\n        bufferProcessing: false,\n        onwrite: [Function],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 6,\n        prefinished: false,\n        errorEmitted: false,\n        emitClose: true,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     _transformState: \n      { afterTransform: [Function: bound afterTransform],\n        needTransform: true,\n        transforming: false,\n        writecb: null,\n        writechunk: null,\n        writeencoding: 'utf8' },\n     silent: undefined,\n     format: Format { options: {} },\n     defaultMeta: { timestamp: '2019-12-17T11:01:15+05:30' },\n     levels: \n      { error: 0,\n        warn: 1,\n        info: 2,\n        http: 3,\n        verbose: 4,\n        debug: 5,\n        silly: 6 },\n     level: 'info',\n     exceptions: ExceptionHandler { logger: [Circular], handlers: Map {} },\n     rejections: RejectionHandler { logger: [Circular], handlers: Map {} },\n     profilers: {},\n     exitOnError: true },\n  PROGRAM_OPTS: \n   Command {\n     commands: [],\n     options: [ [Object], [Object], [Object] ],\n     _execs: Set {},\n     _allowUnknownOption: false,\n     _args: [],\n     _name: 'app',\n     _helpFlags: '-h, --help',\n     _helpDescription: 'output usage information',\n     _helpShortFlag: '-h',\n     _helpLongFlag: '--help',\n     Command: { [Function: Command] super_: [Object] },\n     Option: [Function: Option],\n     CommanderError: [Function: CommanderError],\n     _events: \n      { 'option:verbose': [Function],\n        'option:digitalmarketplace': [Function],\n        'option:rsa': [Function] },\n     _eventsCount: 3,\n     rawArgs: \n      [ '/usr/local/bin/node',\n        '/home/gauravkumar/grv_java/readshare-club/app.js' ],\n     args: [] } }","level":"info","timestamp":"2019-12-17T11:01:15+05:30"}
{"message":"Mysql connection created successfully!","level":"info","timestamp":"2019-12-17T11:01:15+05:30"}
{"message":"Set mysql in controller object","level":"info","timestamp":"2019-12-17T11:01:15+05:30"}
{"message":"Initiating test controller","level":"info","timestamp":"2019-12-17T11:01:15+05:30"}
{"message":"Init all dependencies","level":"info","timestamp":"2019-12-17T11:01:15+05:30"}
{"message":"creating the web server","level":"info","timestamp":"2019-12-17T11:01:15+05:30"}
{"message":{"DB_INSTANCE":{"domain":null,"_events":{},"_eventsCount":0,"config":{"host":"localhost","port":3306,"user":"root","password":"password","database":"readshare","connectTimeout":10000,"insecureAuth":false,"supportBigNumbers":false,"bigNumberStrings":false,"dateStrings":false,"trace":true,"stringifyObjects":false,"timezone":"local","flags":"","ssl":false,"multipleStatements":false,"typeCast":true,"maxPacketSize":0,"charsetNumber":33,"clientFlags":455631,"protocol41":true},"_socket":{"connecting":false,"_hadError":false,"_handle":{"reading":true,"owner":"[Circular]","onconnection":null,"writeQueueSize":0},"_parent":null,"_host":"localhost","_readableState":{"objectMode":false,"highWaterMark":16384,"buffer":{"head":null,"tail":null,"length":0},"length":0,"pipes":null,"pipesCount":0,"flowing":true,"ended":false,"endEmitted":false,"reading":true,"sync":false,"needReadable":true,"emittedReadable":false,"readableListening":false,"resumeScheduled":false,"destroyed":false,"defaultEncoding":"utf8","awaitDrain":0,"readingMore":true,"decoder":null,"encoding":null},"readable":true,"domain":null,"_events":{"end":[null,null]},"_eventsCount":6,"_writableState":{"objectMode":false,"highWaterMark":16384,"finalCalled":false,"needDrain":false,"ending":false,"ended":false,"finished":false,"destroyed":false,"decodeStrings":false,"defaultEncoding":"utf8","length":0,"writing":false,"corked":0,"sync":false,"bufferProcessing":false,"writecb":null,"writelen":0,"bufferedRequest":null,"lastBufferedRequest":null,"pendingcb":0,"prefinished":false,"errorEmitted":false,"bufferedRequestCount":0,"corkedRequestsFree":{"next":null,"entry":null}},"writable":true,"allowHalfOpen":false,"_bytesDispatched":72,"_sockname":null,"_pendingData":null,"_pendingEncoding":"","server":null,"_server":null,"_idleTimeout":-1,"_idleNext":null,"_idlePrev":null,"_idleStart":276,"_destroyed":false,"_consuming":true},"_protocol":{"domain":null,"_events":{"end":[null,null]},"_eventsCount":7,"readable":true,"writable":true,"_config":{"host":"localhost","port":3306,"user":"root","password":"password","database":"readshare","connectTimeout":10000,"insecureAuth":false,"supportBigNumbers":false,"bigNumberStrings":false,"dateStrings":false,"trace":true,"stringifyObjects":false,"timezone":"local","flags":"","ssl":false,"multipleStatements":false,"typeCast":true,"maxPacketSize":0,"charsetNumber":33,"clientFlags":455631,"protocol41":true},"_connection":"[Circular]","_callback":null,"_fatalError":null,"_quitSequence":null,"_handshake":true,"_handshaked":true,"_ended":false,"_destroyed":false,"_queue":[],"_handshakeInitializationPacket":{"protocolVersion":10,"serverVersion":"5.7.28-0ubuntu0.18.04.4","threadId":27,"scrambleBuff1":{"type":"Buffer","data":[7,104,99,51,52,79,61,52]},"filler1":{"type":"Buffer","data":[0]},"serverCapabilities1":65535,"serverLanguage":8,"serverStatus":2,"serverCapabilities2":49663,"scrambleLength":21,"filler2":{"type":"Buffer","data":[0,0,0,0,0,0,0,0,0,0]},"scrambleBuff2":{"type":"Buffer","data":[30,83,57,67,110,95,52,91,118,116,41,73]},"filler3":{"type":"Buffer","data":[0]},"pluginData":"mysql_native_password","protocol41":true},"_parser":{"_supportBigNumbers":false,"_buffer":{"type":"Buffer","data":[7,0,0,2,0,0,0,2,0,0,0]},"_nextBuffers":{"bufs":[],"size":0},"_longPacketBuffers":{"bufs":[],"size":0},"_offset":11,"_packetEnd":null,"_packetHeader":null,"_packetOffset":null,"_nextPacketNumber":3,"_encoding":"utf-8","_paused":false}},"_connectCalled":true,"state":"authenticated","threadId":27},"dm":{"DB_INSTANCE":{"domain":null,"_events":{},"_eventsCount":0,"config":{"host":"localhost","port":3306,"user":"root","password":"password","database":"readshare","connectTimeout":10000,"insecureAuth":false,"supportBigNumbers":false,"bigNumberStrings":false,"dateStrings":false,"trace":true,"stringifyObjects":false,"timezone":"local","flags":"","ssl":false,"multipleStatements":false,"typeCast":true,"maxPacketSize":0,"charsetNumber":33,"clientFlags":455631,"protocol41":true},"_socket":{"connecting":false,"_hadError":false,"_handle":{"reading":true,"owner":"[Circular]","onconnection":null,"writeQueueSize":0},"_parent":null,"_host":"localhost","_readableState":{"objectMode":false,"highWaterMark":16384,"buffer":{"head":null,"tail":null,"length":0},"length":0,"pipes":null,"pipesCount":0,"flowing":true,"ended":false,"endEmitted":false,"reading":true,"sync":false,"needReadable":true,"emittedReadable":false,"readableListening":false,"resumeScheduled":false,"destroyed":false,"defaultEncoding":"utf8","awaitDrain":0,"readingMore":true,"decoder":null,"encoding":null},"readable":true,"domain":null,"_events":{"end":[null,null]},"_eventsCount":6,"_writableState":{"objectMode":false,"highWaterMark":16384,"finalCalled":false,"needDrain":false,"ending":false,"ended":false,"finished":false,"destroyed":false,"decodeStrings":false,"defaultEncoding":"utf8","length":0,"writing":false,"corked":0,"sync":false,"bufferProcessing":false,"writecb":null,"writelen":0,"bufferedRequest":null,"lastBufferedRequest":null,"pendingcb":0,"prefinished":false,"errorEmitted":false,"bufferedRequestCount":0,"corkedRequestsFree":{"next":null,"entry":null}},"writable":true,"allowHalfOpen":false,"_bytesDispatched":72,"_sockname":null,"_pendingData":null,"_pendingEncoding":"","server":null,"_server":null,"_idleTimeout":-1,"_idleNext":null,"_idlePrev":null,"_idleStart":276,"_destroyed":false,"_consuming":true},"_protocol":{"domain":null,"_events":{"end":[null,null]},"_eventsCount":7,"readable":true,"writable":true,"_config":{"host":"localhost","port":3306,"user":"root","password":"password","database":"readshare","connectTimeout":10000,"insecureAuth":false,"supportBigNumbers":false,"bigNumberStrings":false,"dateStrings":false,"trace":true,"stringifyObjects":false,"timezone":"local","flags":"","ssl":false,"multipleStatements":false,"typeCast":true,"maxPacketSize":0,"charsetNumber":33,"clientFlags":455631,"protocol41":true},"_connection":"[Circular]","_callback":null,"_fatalError":null,"_quitSequence":null,"_handshake":true,"_handshaked":true,"_ended":false,"_destroyed":false,"_queue":[],"_handshakeInitializationPacket":{"protocolVersion":10,"serverVersion":"5.7.28-0ubuntu0.18.04.4","threadId":27,"scrambleBuff1":{"type":"Buffer","data":[7,104,99,51,52,79,61,52]},"filler1":{"type":"Buffer","data":[0]},"serverCapabilities1":65535,"serverLanguage":8,"serverStatus":2,"serverCapabilities2":49663,"scrambleLength":21,"filler2":{"type":"Buffer","data":[0,0,0,0,0,0,0,0,0,0]},"scrambleBuff2":{"type":"Buffer","data":[30,83,57,67,110,95,52,91,118,116,41,73]},"filler3":{"type":"Buffer","data":[0]},"pluginData":"mysql_native_password","protocol41":true},"_parser":{"_supportBigNumbers":false,"_buffer":{"type":"Buffer","data":[7,0,0,2,0,0,0,2,0,0,0]},"_nextBuffers":{"bufs":[],"size":0},"_longPacketBuffers":{"bufs":[],"size":0},"_offset":11,"_packetEnd":null,"_packetHeader":null,"_packetOffset":null,"_nextPacketNumber":3,"_encoding":"utf-8","_paused":false}},"_connectCalled":true,"state":"authenticated","threadId":27},"TEST_CONTROLLER":"[Circular]"},"Logger":{"_readableState":{"objectMode":true,"highWaterMark":16,"buffer":{"head":null,"tail":null,"length":0},"length":0,"pipes":[{"_writableState":{"objectMode":true,"highWaterMark":16,"finalCalled":false,"needDrain":false,"ending":false,"ended":false,"finished":false,"destroyed":false,"decodeStrings":true,"defaultEncoding":"utf8","length":0,"writing":false,"corked":0,"sync":false,"bufferProcessing":false,"writecb":null,"writelen":0,"bufferedRequest":null,"lastBufferedRequest":null,"pendingcb":4,"prefinished":false,"errorEmitted":false,"bufferedRequestCount":0,"corkedRequestsFree":{"next":null,"entry":null}},"writable":true,"domain":null,"_events":{"unpipe":[null,null],"error":[null,null]},"_eventsCount":6,"level":"error","name":"file","_stream":{"_readableState":{"objectMode":false,"highWaterMark":16384,"buffer":{"head":null,"tail":null,"length":0},"length":0,"pipes":{"_writableState":{"objectMode":false,"highWaterMark":16384,"finalCalled":false,"needDrain":false,"ending":false,"ended":false,"finished":false,"destroyed":false,"decodeStrings":true,"defaultEncoding":"utf8","length":0,"writing":false,"corked":0,"sync":true,"bufferProcessing":false,"writecb":null,"writelen":0,"bufferedRequest":null,"lastBufferedRequest":null,"pendingcb":0,"prefinished":false,"errorEmitted":false,"bufferedRequestCount":0,"corkedRequestsFree":{"next":null,"entry":null}},"writable":true,"domain":null,"_events":{"finish":[null,null],"error":[null,null],"close":[null,null]},"_eventsCount":6,"path":"error.log","fd":12,"flags":"a","mode":438,"autoClose":true,"bytesWritten":0},"pipesCount":1,"flowing":true,"ended":false,"endEmitted":false,"reading":true,"sync":false,"needReadable":true,"emittedReadable":false,"readableListening":false,"resumeScheduled":false,"paused":false,"emitClose":true,"destroyed":false,"defaultEncoding":"utf8","awaitDrain":0,"readingMore":false,"decoder":null,"encoding":null},"readable":true,"domain":null,"_events":{},"_eventsCount":3,"_maxListeners":30,"_writableState":{"objectMode":false,"highWaterMark":16384,"finalCalled":false,"needDrain":false,"ending":false,"ended":false,"finished":false,"destroyed":false,"decodeStrings":true,"defaultEncoding":"utf8","length":0,"writing":false,"corked":0,"sync":true,"bufferProcessing":false,"writecb":null,"writelen":0,"bufferedRequest":null,"lastBufferedRequest":null,"pendingcb":0,"prefinished":false,"errorEmitted":false,"emitClose":true,"bufferedRequestCount":0,"corkedRequestsFree":{"next":null,"entry":null}},"writable":true,"allowHalfOpen":true,"_transformState":{"needTransform":true,"transforming":false,"writecb":null,"writechunk":null,"writeencoding":null}},"filename":"error.log","_basename":"error.log","dirname":".","options":{"flags":"a"},"maxsize":null,"rotationFormat":false,"zippedArchive":false,"maxFiles":null,"eol":"\n","tailable":false,"_size":0,"_pendingSize":0,"_created":0,"_drain":false,"_opening":false,"_ending":false,"levels":{"error":0,"warn":1,"info":2,"http":3,"verbose":4,"debug":5,"silly":6},"parent":"[Circular]","_dest":{"_writableState":{"objectMode":false,"highWaterMark":16384,"finalCalled":false,"needDrain":false,"ending":false,"ended":false,"finished":false,"destroyed":false,"decodeStrings":true,"defaultEncoding":"utf8","length":0,"writing":false,"corked":0,"sync":true,"bufferProcessing":false,"writecb":null,"writelen":0,"bufferedRequest":null,"lastBufferedRequest":null,"pendingcb":0,"prefinished":false,"errorEmitted":false,"bufferedRequestCount":0,"corkedRequestsFree":{"next":null,"entry":null}},"writable":true,"domain":null,"_events":{"finish":[null,null],"error":[null,null],"close":[null,null]},"_eventsCount":6,"path":"error.log","fd":12,"flags":"a","mode":438,"autoClose":true,"bytesWritten":0},"_rotate":false},{"_writableState":{"objectMode":true,"highWaterMark":16,"finalCalled":false,"needDrain":false,"ending":false,"ended":false,"finished":false,"destroyed":false,"decodeStrings":true,"defaultEncoding":"utf8","length":0,"writing":false,"corked":0,"sync":false,"bufferProcessing":false,"writecb":null,"writelen":0,"bufferedRequest":null,"lastBufferedRequest":null,"pendingcb":4,"prefinished":false,"errorEmitted":false,"bufferedRequestCount":0,"corkedRequestsFree":{"next":null,"entry":null}},"writable":true,"domain":null,"_events":{"unpipe":[null,null],"error":[null,null]},"_eventsCount":6,"name":"file","_stream":{"_readableState":{"objectMode":false,"highWaterMark":16384,"buffer":{"head":null,"tail":null,"length":0},"length":0,"pipes":{"_writableState":{"objectMode":false,"highWaterMark":16384,"finalCalled":false,"needDrain":false,"ending":false,"ended":false,"finished":false,"destroyed":false,"decodeStrings":true,"defaultEncoding":"utf8","length":488,"writing":true,"corked":0,"sync":false,"bufferProcessing":false,"writelen":108,"bufferedRequest":{"chunk":{"type":"Buffer","data":[123,34,109,101,115,115,97,103,101,34,58,34,83,101,116,32,109,121,115,113,108,32,105,110,32,99,111,110,116,114,111,108,108,101,114,32,111,98,106,101,99,116,34,44,34,108,101,118,101,108,34,58,34,105,110,102,111,34,44,34,116,105,109,101,115,116,97,109,112,34,58,34,50,48,49,57,45,49,50,45,49,55,84,49,49,58,48,49,58,49,53,43,48,53,58,51,48,34,125,10]},"encoding":"buffer","isBuf":true,"next":{"chunk":{"type":"Buffer","data":[123,34,109,101,115,115,97,103,101,34,58,34,73,110,105,116,105,97,116,105,110,103,32,116,101,115,116,32,99,111,110,116,114,111,108,108,101,114,34,44,34,108,101,118,101,108,34,58,34,105,110,102,111,34,44,34,116,105,109,101,115,116,97,109,112,34,58,34,50,48,49,57,45,49,50,45,49,55,84,49,49,58,48,49,58,49,53,43,48,53,58,51,48,34,125,10]},"encoding":"buffer","isBuf":true,"next":{"chunk":{"type":"Buffer","data":[123,34,109,101,115,115,97,103,101,34,58,34,73,110,105,116,32,97,108,108,32,100,101,112,101,110,100,101,110,99,105,101,115,34,44,34,108,101,118,101,108,34,58,34,105,110,102,111,34,44,34,116,105,109,101,115,116,97,109,112,34,58,34,50,48,49,57,45,49,50,45,49,55,84,49,49,58,48,49,58,49,53,43,48,53,58,51,48,34,125,10]},"encoding":"buffer","isBuf":true,"next":{"chunk":{"type":"Buffer","data":[123,34,109,101,115,115,97,103,101,34,58,34,99,114,101,97,116,105,110,103,32,116,104,101,32,119,101,98,32,115,101,114,118,101,114,34,44,34,108,101,118,101,108,34,58,34,105,110,102,111,34,44,34,116,105,109,101,115,116,97,109,112,34,58,34,50,48,49,57,45,49,50,45,49,55,84,49,49,58,48,49,58,49,53,43,48,53,58,51,48,34,125,10]},"encoding":"buffer","isBuf":true,"next":null}}}},"lastBufferedRequest":{"chunk":{"type":"Buffer","data":[123,34,109,101,115,115,97,103,101,34,58,34,99,114,101,97,116,105,110,103,32,116,104,101,32,119,101,98,32,115,101,114,118,101,114,34,44,34,108,101,118,101,108,34,58,34,105,110,102,111,34,44,34,116,105,109,101,115,116,97,109,112,34,58,34,50,48,49,57,45,49,50,45,49,55,84,49,49,58,48,49,58,49,53,43,48,53,58,51,48,34,125,10]},"encoding":"buffer","isBuf":true,"next":null},"pendingcb":5,"prefinished":false,"errorEmitted":false,"bufferedRequestCount":4,"corkedRequestsFree":{"next":{"next":null,"entry":null},"entry":null}},"writable":true,"domain":null,"_events":{"finish":[null,null],"error":[null,null],"close":[null,null]},"_eventsCount":6,"path":"combined.log","fd":13,"flags":"a","mode":438,"autoClose":true,"bytesWritten":3881},"pipesCount":1,"flowing":true,"ended":false,"endEmitted":false,"reading":false,"sync":false,"needReadable":true,"emittedReadable":false,"readableListening":false,"resumeScheduled":false,"paused":false,"emitClose":true,"destroyed":false,"defaultEncoding":"utf8","awaitDrain":0,"readingMore":true,"decoder":null,"encoding":null},"readable":true,"domain":null,"_events":{},"_eventsCount":3,"_maxListeners":30,"_writableState":{"objectMode":false,"highWaterMark":16384,"finalCalled":false,"needDrain":false,"ending":false,"ended":false,"finished":false,"destroyed":false,"decodeStrings":true,"defaultEncoding":"utf8","length":0,"writing":false,"corked":0,"sync":false,"bufferProcessing":false,"writecb":null,"writelen":0,"bufferedRequest":null,"lastBufferedRequest":null,"pendingcb":4,"prefinished":false,"errorEmitted":false,"emitClose":true,"bufferedRequestCount":0,"corkedRequestsFree":{"next":null,"entry":null}},"writable":true,"allowHalfOpen":true,"_transformState":{"needTransform":true,"transforming":false,"writecb":null,"writechunk":null,"writeencoding":"buffer"}},"filename":"combined.log","_basename":"combined.log","dirname":".","options":{"flags":"a"},"maxsize":null,"rotationFormat":false,"zippedArchive":false,"maxFiles":null,"eol":"\n","tailable":false,"_size":21510,"_pendingSize":380,"_created":0,"_drain":false,"_opening":false,"_ending":false,"levels":{"error":0,"warn":1,"info":2,"http":3,"verbose":4,"debug":5,"silly":6},"parent":"[Circular]","_dest":{"_writableState":{"objectMode":false,"highWaterMark":16384,"finalCalled":false,"needDrain":false,"ending":false,"ended":false,"finished":false,"destroyed":false,"decodeStrings":true,"defaultEncoding":"utf8","length":488,"writing":true,"corked":0,"sync":false,"bufferProcessing":false,"writelen":108,"bufferedRequest":{"chunk":{"type":"Buffer","data":[123,34,109,101,115,115,97,103,101,34,58,34,83,101,116,32,109,121,115,113,108,32,105,110,32,99,111,110,116,114,111,108,108,101,114,32,111,98,106,101,99,116,34,44,34,108,101,118,101,108,34,58,34,105,110,102,111,34,44,34,116,105,109,101,115,116,97,109,112,34,58,34,50,48,49,57,45,49,50,45,49,55,84,49,49,58,48,49,58,49,53,43,48,53,58,51,48,34,125,10]},"encoding":"buffer","isBuf":true,"next":{"chunk":{"type":"Buffer","data":[123,34,109,101,115,115,97,103,101,34,58,34,73,110,105,116,105,97,116,105,110,103,32,116,101,115,116,32,99,111,110,116,114,111,108,108,101,114,34,44,34,108,101,118,101,108,34,58,34,105,110,102,111,34,44,34,116,105,109,101,115,116,97,109,112,34,58,34,50,48,49,57,45,49,50,45,49,55,84,49,49,58,48,49,58,49,53,43,48,53,58,51,48,34,125,10]},"encoding":"buffer","isBuf":true,"next":{"chunk":{"type":"Buffer","data":[123,34,109,101,115,115,97,103,101,34,58,34,73,110,105,116,32,97,108,108,32,100,101,112,101,110,100,101,110,99,105,101,115,34,44,34,108,101,118,101,108,34,58,34,105,110,102,111,34,44,34,116,105,109,101,115,116,97,109,112,34,58,34,50,48,49,57,45,49,50,45,49,55,84,49,49,58,48,49,58,49,53,43,48,53,58,51,48,34,125,10]},"encoding":"buffer","isBuf":true,"next":{"chunk":{"type":"Buffer","data":[123,34,109,101,115,115,97,103,101,34,58,34,99,114,101,97,116,105,110,103,32,116,104,101,32,119,101,98,32,115,101,114,118,101,114,34,44,34,108,101,118,101,108,34,58,34,105,110,102,111,34,44,34,116,105,109,101,115,116,97,109,112,34,58,34,50,48,49,57,45,49,50,45,49,55,84,49,49,58,48,49,58,49,53,43,48,53,58,51,48,34,125,10]},"encoding":"buffer","isBuf":true,"next":null}}}},"lastBufferedRequest":{"chunk":{"type":"Buffer","data":[123,34,109,101,115,115,97,103,101,34,58,34,99,114,101,97,116,105,110,103,32,116,104,101,32,119,101,98,32,115,101,114,118,101,114,34,44,34,108,101,118,101,108,34,58,34,105,110,102,111,34,44,34,116,105,109,101,115,116,97,109,112,34,58,34,50,48,49,57,45,49,50,45,49,55,84,49,49,58,48,49,58,49,53,43,48,53,58,51,48,34,125,10]},"encoding":"buffer","isBuf":true,"next":null},"pendingcb":5,"prefinished":false,"errorEmitted":false,"bufferedRequestCount":4,"corkedRequestsFree":{"next":{"next":null,"entry":null},"entry":null}},"writable":true,"domain":null,"_events":{"finish":[null,null],"error":[null,null],"close":[null,null]},"_eventsCount":6,"path":"combined.log","fd":13,"flags":"a","mode":438,"autoClose":true,"bytesWritten":3881},"_rotate":false}],"pipesCount":2,"flowing":true,"ended":false,"endEmitted":false,"reading":false,"sync":false,"needReadable":true,"emittedReadable":false,"readableListening":false,"resumeScheduled":false,"paused":false,"emitClose":true,"destroyed":false,"defaultEncoding":"utf8","awaitDrain":0,"readingMore":true,"decoder":null,"encoding":null},"readable":true,"domain":null,"_events":{"end":[null,null],"data":[null,null]},"_eventsCount":3,"_writableState":{"objectMode":true,"highWaterMark":16,"finalCalled":false,"needDrain":false,"ending":false,"ended":false,"finished":false,"destroyed":false,"decodeStrings":true,"defaultEncoding":"utf8","length":1,"writing":true,"corked":0,"sync":true,"bufferProcessing":false,"writelen":1,"bufferedRequest":null,"lastBufferedRequest":null,"pendingcb":5,"prefinished":false,"errorEmitted":false,"emitClose":true,"bufferedRequestCount":0,"corkedRequestsFree":{"next":null,"entry":null}},"writable":true,"allowHalfOpen":true,"_transformState":{"needTransform":true,"transforming":true,"writechunk":"[Circular]","writeencoding":"utf8"},"format":{"options":{}},"defaultMeta":{"timestamp":"2019-12-17T11:01:15+05:30"},"levels":{"error":0,"warn":1,"info":2,"http":3,"verbose":4,"debug":5,"silly":6},"level":"info","exceptions":{"logger":"[Circular]","handlers":{}},"rejections":{"logger":"[Circular]","handlers":{}},"profilers":{},"exitOnError":true}},"level":"info","timestamp":"2019-12-17T11:01:15+05:30"}
{"message":"read share service listening on port - 3000","level":"info","timestamp":"2019-12-17T11:01:15+05:30"}
{"message":"Loading init options","level":"info","timestamp":"2019-12-17T11:02:51+05:30"}
{"message":"Populating INIT_OPTS","level":"info","timestamp":"2019-12-17T11:02:51+05:30"}
{"message":"Creating controller","level":"info","timestamp":"2019-12-17T11:02:51+05:30"}
{"message":"Loading express routes","level":"info","timestamp":"2019-12-17T11:02:51+05:30"}
{"message":"Initiating controller","level":"info","timestamp":"2019-12-17T11:02:51+05:30"}
{"message":"Initializing controller","level":"info","timestamp":"2019-12-17T11:02:51+05:30"}
{"message":"Starting the controller object with: { LOGGER: \n   DerivedLogger {\n     _readableState: \n      ReadableState {\n        objectMode: true,\n        highWaterMark: 16,\n        buffer: BufferList { head: null, tail: null, length: 0 },\n        length: 0,\n        pipes: [Array],\n        pipesCount: 2,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: false,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        paused: false,\n        emitClose: true,\n        destroyed: false,\n        defaultEncoding: 'utf8',\n        awaitDrain: 0,\n        readingMore: true,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     domain: null,\n     _events: { prefinish: [Function: prefinish], end: [Array], data: [Array] },\n     _eventsCount: 3,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: true,\n        highWaterMark: 16,\n        finalCalled: false,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        destroyed: false,\n        decodeStrings: true,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: false,\n        bufferProcessing: false,\n        onwrite: [Function],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 6,\n        prefinished: false,\n        errorEmitted: false,\n        emitClose: true,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     _transformState: \n      { afterTransform: [Function: bound afterTransform],\n        needTransform: true,\n        transforming: false,\n        writecb: null,\n        writechunk: null,\n        writeencoding: 'utf8' },\n     silent: undefined,\n     format: Format { options: {} },\n     defaultMeta: { timestamp: '2019-12-17T11:02:51+05:30' },\n     levels: \n      { error: 0,\n        warn: 1,\n        info: 2,\n        http: 3,\n        verbose: 4,\n        debug: 5,\n        silly: 6 },\n     level: 'info',\n     exceptions: ExceptionHandler { logger: [Circular], handlers: Map {} },\n     rejections: RejectionHandler { logger: [Circular], handlers: Map {} },\n     profilers: {},\n     exitOnError: true },\n  PROGRAM_OPTS: \n   Command {\n     commands: [],\n     options: [ [Object], [Object], [Object] ],\n     _execs: Set {},\n     _allowUnknownOption: false,\n     _args: [],\n     _name: 'app',\n     _helpFlags: '-h, --help',\n     _helpDescription: 'output usage information',\n     _helpShortFlag: '-h',\n     _helpLongFlag: '--help',\n     Command: { [Function: Command] super_: [Object] },\n     Option: [Function: Option],\n     CommanderError: [Function: CommanderError],\n     _events: \n      { 'option:verbose': [Function],\n        'option:digitalmarketplace': [Function],\n        'option:rsa': [Function] },\n     _eventsCount: 3,\n     rawArgs: \n      [ '/usr/local/bin/node',\n        '/home/gauravkumar/grv_java/readshare-club/app.js' ],\n     args: [] } }","level":"info","timestamp":"2019-12-17T11:02:51+05:30"}
{"message":"Mysql connection created successfully!","level":"info","timestamp":"2019-12-17T11:02:51+05:30"}
{"message":"Set mysql in controller object","level":"info","timestamp":"2019-12-17T11:02:51+05:30"}
{"message":"Initiating test controller","level":"info","timestamp":"2019-12-17T11:02:51+05:30"}
{"message":"Init all dependencies","level":"info","timestamp":"2019-12-17T11:02:51+05:30"}
{"message":"creating the web server","level":"info","timestamp":"2019-12-17T11:02:51+05:30"}
{"message":"read share service listening on port - 3000","level":"info","timestamp":"2019-12-17T11:02:51+05:30"}
{"message":"Loading init options","level":"info","timestamp":"2019-12-17T11:04:07+05:30"}
{"message":"Populating INIT_OPTS","level":"info","timestamp":"2019-12-17T11:04:07+05:30"}
{"message":"Creating controller","level":"info","timestamp":"2019-12-17T11:04:07+05:30"}
{"message":"Loading express routes","level":"info","timestamp":"2019-12-17T11:04:07+05:30"}
{"message":"Initiating controller","level":"info","timestamp":"2019-12-17T11:04:07+05:30"}
{"message":"Initializing controller","level":"info","timestamp":"2019-12-17T11:04:07+05:30"}
{"message":"Starting the controller object with: { LOGGER: \n   DerivedLogger {\n     _readableState: \n      ReadableState {\n        objectMode: true,\n        highWaterMark: 16,\n        buffer: BufferList { head: null, tail: null, length: 0 },\n        length: 0,\n        pipes: [Array],\n        pipesCount: 2,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: false,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        paused: false,\n        emitClose: true,\n        destroyed: false,\n        defaultEncoding: 'utf8',\n        awaitDrain: 0,\n        readingMore: true,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     domain: null,\n     _events: { prefinish: [Function: prefinish], end: [Array], data: [Array] },\n     _eventsCount: 3,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: true,\n        highWaterMark: 16,\n        finalCalled: false,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        destroyed: false,\n        decodeStrings: true,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: false,\n        bufferProcessing: false,\n        onwrite: [Function],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 6,\n        prefinished: false,\n        errorEmitted: false,\n        emitClose: true,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     _transformState: \n      { afterTransform: [Function: bound afterTransform],\n        needTransform: true,\n        transforming: false,\n        writecb: null,\n        writechunk: null,\n        writeencoding: 'utf8' },\n     silent: undefined,\n     format: Format { options: {} },\n     defaultMeta: { timestamp: '2019-12-17T11:04:07+05:30' },\n     levels: \n      { error: 0,\n        warn: 1,\n        info: 2,\n        http: 3,\n        verbose: 4,\n        debug: 5,\n        silly: 6 },\n     level: 'info',\n     exceptions: ExceptionHandler { logger: [Circular], handlers: Map {} },\n     rejections: RejectionHandler { logger: [Circular], handlers: Map {} },\n     profilers: {},\n     exitOnError: true },\n  PROGRAM_OPTS: \n   Command {\n     commands: [],\n     options: [ [Object], [Object], [Object] ],\n     _execs: Set {},\n     _allowUnknownOption: false,\n     _args: [],\n     _name: 'app',\n     _helpFlags: '-h, --help',\n     _helpDescription: 'output usage information',\n     _helpShortFlag: '-h',\n     _helpLongFlag: '--help',\n     Command: { [Function: Command] super_: [Object] },\n     Option: [Function: Option],\n     CommanderError: [Function: CommanderError],\n     _events: \n      { 'option:verbose': [Function],\n        'option:digitalmarketplace': [Function],\n        'option:rsa': [Function] },\n     _eventsCount: 3,\n     rawArgs: \n      [ '/usr/local/bin/node',\n        '/home/gauravkumar/grv_java/readshare-club/app.js' ],\n     args: [] } }","level":"info","timestamp":"2019-12-17T11:04:07+05:30"}
{"message":"Mysql connection created successfully!","level":"info","timestamp":"2019-12-17T11:04:07+05:30"}
{"message":"Set mysql in controller object","level":"info","timestamp":"2019-12-17T11:04:07+05:30"}
{"message":"Initiating test controller","level":"info","timestamp":"2019-12-17T11:04:07+05:30"}
{"message":"Init all dependencies","level":"info","timestamp":"2019-12-17T11:04:07+05:30"}
{"message":"creating the web server","level":"info","timestamp":"2019-12-17T11:04:07+05:30"}
{"message":"read share service listening on port - 3000","level":"info","timestamp":"2019-12-17T11:04:07+05:30"}
{"message":"Loading init options","level":"info","timestamp":"2019-12-17T11:05:26+05:30"}
{"message":"Populating INIT_OPTS","level":"info","timestamp":"2019-12-17T11:05:26+05:30"}
{"message":"Creating controller","level":"info","timestamp":"2019-12-17T11:05:26+05:30"}
{"message":"Loading express routes","level":"info","timestamp":"2019-12-17T11:05:26+05:30"}
{"message":"Initiating controller","level":"info","timestamp":"2019-12-17T11:05:26+05:30"}
{"message":"Initializing controller","level":"info","timestamp":"2019-12-17T11:05:26+05:30"}
{"message":"Starting the controller object with: { LOGGER: \n   DerivedLogger {\n     _readableState: \n      ReadableState {\n        objectMode: true,\n        highWaterMark: 16,\n        buffer: BufferList { head: null, tail: null, length: 0 },\n        length: 0,\n        pipes: [Array],\n        pipesCount: 2,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: false,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        paused: false,\n        emitClose: true,\n        destroyed: false,\n        defaultEncoding: 'utf8',\n        awaitDrain: 0,\n        readingMore: true,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     domain: null,\n     _events: { prefinish: [Function: prefinish], end: [Array], data: [Array] },\n     _eventsCount: 3,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: true,\n        highWaterMark: 16,\n        finalCalled: false,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        destroyed: false,\n        decodeStrings: true,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: false,\n        bufferProcessing: false,\n        onwrite: [Function],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 6,\n        prefinished: false,\n        errorEmitted: false,\n        emitClose: true,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     _transformState: \n      { afterTransform: [Function: bound afterTransform],\n        needTransform: true,\n        transforming: false,\n        writecb: null,\n        writechunk: null,\n        writeencoding: 'utf8' },\n     silent: undefined,\n     format: Format { options: {} },\n     defaultMeta: { timestamp: '2019-12-17T11:05:26+05:30' },\n     levels: \n      { error: 0,\n        warn: 1,\n        info: 2,\n        http: 3,\n        verbose: 4,\n        debug: 5,\n        silly: 6 },\n     level: 'info',\n     exceptions: ExceptionHandler { logger: [Circular], handlers: Map {} },\n     rejections: RejectionHandler { logger: [Circular], handlers: Map {} },\n     profilers: {},\n     exitOnError: true },\n  PROGRAM_OPTS: \n   Command {\n     commands: [],\n     options: [ [Object], [Object], [Object] ],\n     _execs: Set {},\n     _allowUnknownOption: false,\n     _args: [],\n     _name: 'app',\n     _helpFlags: '-h, --help',\n     _helpDescription: 'output usage information',\n     _helpShortFlag: '-h',\n     _helpLongFlag: '--help',\n     Command: { [Function: Command] super_: [Object] },\n     Option: [Function: Option],\n     CommanderError: [Function: CommanderError],\n     _events: \n      { 'option:verbose': [Function],\n        'option:digitalmarketplace': [Function],\n        'option:rsa': [Function] },\n     _eventsCount: 3,\n     rawArgs: \n      [ '/usr/local/bin/node',\n        '/home/gauravkumar/grv_java/readshare-club/app.js' ],\n     args: [] } }","level":"info","timestamp":"2019-12-17T11:05:26+05:30"}
{"message":"Mysql connection created successfully!","level":"info","timestamp":"2019-12-17T11:05:26+05:30"}
{"message":"Set mysql in controller object","level":"info","timestamp":"2019-12-17T11:05:26+05:30"}
{"message":"Initiating test controller","level":"info","timestamp":"2019-12-17T11:05:26+05:30"}
{"message":"Init all dependencies","level":"info","timestamp":"2019-12-17T11:05:26+05:30"}
{"message":"creating the web server","level":"info","timestamp":"2019-12-17T11:05:26+05:30"}
{"message":"read share service listening on port - 3000","level":"info","timestamp":"2019-12-17T11:05:26+05:30"}
{"message":"Loading init options","level":"info","timestamp":"2019-12-17T11:25:22+05:30"}
{"message":"Populating INIT_OPTS","level":"info","timestamp":"2019-12-17T11:25:22+05:30"}
{"message":"Creating controller","level":"info","timestamp":"2019-12-17T11:25:22+05:30"}
{"message":"Loading express routes","level":"info","timestamp":"2019-12-17T11:25:22+05:30"}
{"message":"Initiating controller","level":"info","timestamp":"2019-12-17T11:25:22+05:30"}
{"message":"Initializing controller","level":"info","timestamp":"2019-12-17T11:25:22+05:30"}
{"message":"Starting the controller object with: { LOGGER: \n   DerivedLogger {\n     _readableState: \n      ReadableState {\n        objectMode: true,\n        highWaterMark: 16,\n        buffer: BufferList { head: null, tail: null, length: 0 },\n        length: 0,\n        pipes: [Array],\n        pipesCount: 2,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: false,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        paused: false,\n        emitClose: true,\n        destroyed: false,\n        defaultEncoding: 'utf8',\n        awaitDrain: 0,\n        readingMore: true,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     domain: null,\n     _events: { prefinish: [Function: prefinish], end: [Array], data: [Array] },\n     _eventsCount: 3,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: true,\n        highWaterMark: 16,\n        finalCalled: false,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        destroyed: false,\n        decodeStrings: true,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: false,\n        bufferProcessing: false,\n        onwrite: [Function],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 6,\n        prefinished: false,\n        errorEmitted: false,\n        emitClose: true,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     _transformState: \n      { afterTransform: [Function: bound afterTransform],\n        needTransform: true,\n        transforming: false,\n        writecb: null,\n        writechunk: null,\n        writeencoding: 'utf8' },\n     silent: undefined,\n     format: Format { options: {} },\n     defaultMeta: { timestamp: '2019-12-17T11:25:22+05:30' },\n     levels: \n      { error: 0,\n        warn: 1,\n        info: 2,\n        http: 3,\n        verbose: 4,\n        debug: 5,\n        silly: 6 },\n     level: 'info',\n     exceptions: ExceptionHandler { logger: [Circular], handlers: Map {} },\n     rejections: RejectionHandler { logger: [Circular], handlers: Map {} },\n     profilers: {},\n     exitOnError: true },\n  PROGRAM_OPTS: \n   Command {\n     commands: [],\n     options: [ [Object], [Object], [Object] ],\n     _execs: Set {},\n     _allowUnknownOption: false,\n     _args: [],\n     _name: 'app',\n     _helpFlags: '-h, --help',\n     _helpDescription: 'output usage information',\n     _helpShortFlag: '-h',\n     _helpLongFlag: '--help',\n     Command: { [Function: Command] super_: [Object] },\n     Option: [Function: Option],\n     CommanderError: [Function: CommanderError],\n     _events: \n      { 'option:verbose': [Function],\n        'option:digitalmarketplace': [Function],\n        'option:rsa': [Function] },\n     _eventsCount: 3,\n     rawArgs: \n      [ '/usr/local/bin/node',\n        '/home/gauravkumar/grv_java/readshare-club/app.js' ],\n     args: [] } }","level":"info","timestamp":"2019-12-17T11:25:22+05:30"}
{"message":"Mysql connection created successfully!","level":"info","timestamp":"2019-12-17T11:25:22+05:30"}
{"message":"Set mysql in controller object","level":"info","timestamp":"2019-12-17T11:25:22+05:30"}
{"message":"Initiating test controller","level":"info","timestamp":"2019-12-17T11:25:22+05:30"}
{"message":"Init all dependencies","level":"info","timestamp":"2019-12-17T11:25:22+05:30"}
{"level":"info","timestamp":"2019-12-17T11:25:22+05:30"}
{"message":"creating the web server","level":"info","timestamp":"2019-12-17T11:25:22+05:30"}
{"message":"read share service listening on port - 3000","level":"info","timestamp":"2019-12-17T11:25:22+05:30"}
{"message":"Loading init options","level":"info","timestamp":"2019-12-17T11:26:17+05:30"}
{"message":"Populating INIT_OPTS","level":"info","timestamp":"2019-12-17T11:26:17+05:30"}
{"message":"Creating controller","level":"info","timestamp":"2019-12-17T11:26:17+05:30"}
{"message":"Loading express routes","level":"info","timestamp":"2019-12-17T11:26:17+05:30"}
{"message":"Initiating controller","level":"info","timestamp":"2019-12-17T11:26:17+05:30"}
{"message":"Initializing controller","level":"info","timestamp":"2019-12-17T11:26:17+05:30"}
{"message":"Starting the controller object with: { LOGGER: \n   DerivedLogger {\n     _readableState: \n      ReadableState {\n        objectMode: true,\n        highWaterMark: 16,\n        buffer: BufferList { head: null, tail: null, length: 0 },\n        length: 0,\n        pipes: [Array],\n        pipesCount: 2,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: false,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        paused: false,\n        emitClose: true,\n        destroyed: false,\n        defaultEncoding: 'utf8',\n        awaitDrain: 0,\n        readingMore: true,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     domain: null,\n     _events: { prefinish: [Function: prefinish], end: [Array], data: [Array] },\n     _eventsCount: 3,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: true,\n        highWaterMark: 16,\n        finalCalled: false,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        destroyed: false,\n        decodeStrings: true,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: false,\n        bufferProcessing: false,\n        onwrite: [Function],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 6,\n        prefinished: false,\n        errorEmitted: false,\n        emitClose: true,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     _transformState: \n      { afterTransform: [Function: bound afterTransform],\n        needTransform: true,\n        transforming: false,\n        writecb: null,\n        writechunk: null,\n        writeencoding: 'utf8' },\n     silent: undefined,\n     format: Format { options: {} },\n     defaultMeta: { timestamp: '2019-12-17T11:26:17+05:30' },\n     levels: \n      { error: 0,\n        warn: 1,\n        info: 2,\n        http: 3,\n        verbose: 4,\n        debug: 5,\n        silly: 6 },\n     level: 'info',\n     exceptions: ExceptionHandler { logger: [Circular], handlers: Map {} },\n     rejections: RejectionHandler { logger: [Circular], handlers: Map {} },\n     profilers: {},\n     exitOnError: true },\n  PROGRAM_OPTS: \n   Command {\n     commands: [],\n     options: [ [Object], [Object], [Object] ],\n     _execs: Set {},\n     _allowUnknownOption: false,\n     _args: [],\n     _name: 'app',\n     _helpFlags: '-h, --help',\n     _helpDescription: 'output usage information',\n     _helpShortFlag: '-h',\n     _helpLongFlag: '--help',\n     Command: { [Function: Command] super_: [Object] },\n     Option: [Function: Option],\n     CommanderError: [Function: CommanderError],\n     _events: \n      { 'option:verbose': [Function],\n        'option:digitalmarketplace': [Function],\n        'option:rsa': [Function] },\n     _eventsCount: 3,\n     rawArgs: \n      [ '/usr/local/bin/node',\n        '/home/gauravkumar/grv_java/readshare-club/app.js' ],\n     args: [] } }","level":"info","timestamp":"2019-12-17T11:26:17+05:30"}
{"message":"Mysql connection created successfully!","level":"info","timestamp":"2019-12-17T11:26:17+05:30"}
{"message":"Set mysql in controller object","level":"info","timestamp":"2019-12-17T11:26:17+05:30"}
{"message":"Initiating test controller","level":"info","timestamp":"2019-12-17T11:26:17+05:30"}
{"message":"Init all dependencies","level":"info","timestamp":"2019-12-17T11:26:17+05:30"}
{"message":{"DB_INSTANCE":{"domain":null,"_events":{},"_eventsCount":0,"config":{"host":"localhost","port":3306,"user":"root","password":"password","database":"readshare","connectTimeout":10000,"insecureAuth":false,"supportBigNumbers":false,"bigNumberStrings":false,"dateStrings":false,"trace":true,"stringifyObjects":false,"timezone":"local","flags":"","ssl":false,"multipleStatements":false,"typeCast":true,"maxPacketSize":0,"charsetNumber":33,"clientFlags":455631,"protocol41":true},"_socket":{"connecting":false,"_hadError":false,"_handle":{"reading":true,"owner":"[Circular]","onconnection":null,"writeQueueSize":0},"_parent":null,"_host":"localhost","_readableState":{"objectMode":false,"highWaterMark":16384,"buffer":{"head":null,"tail":null,"length":0},"length":0,"pipes":null,"pipesCount":0,"flowing":true,"ended":false,"endEmitted":false,"reading":true,"sync":false,"needReadable":true,"emittedReadable":false,"readableListening":false,"resumeScheduled":false,"destroyed":false,"defaultEncoding":"utf8","awaitDrain":0,"readingMore":true,"decoder":null,"encoding":null},"readable":true,"domain":null,"_events":{"end":[null,null]},"_eventsCount":6,"_writableState":{"objectMode":false,"highWaterMark":16384,"finalCalled":false,"needDrain":false,"ending":false,"ended":false,"finished":false,"destroyed":false,"decodeStrings":false,"defaultEncoding":"utf8","length":0,"writing":false,"corked":0,"sync":false,"bufferProcessing":false,"writecb":null,"writelen":0,"bufferedRequest":null,"lastBufferedRequest":null,"pendingcb":0,"prefinished":false,"errorEmitted":false,"bufferedRequestCount":0,"corkedRequestsFree":{"next":null,"entry":null}},"writable":true,"allowHalfOpen":false,"_bytesDispatched":72,"_sockname":null,"_pendingData":null,"_pendingEncoding":"","server":null,"_server":null,"_idleTimeout":-1,"_idleNext":null,"_idlePrev":null,"_idleStart":244,"_destroyed":false,"_consuming":true},"_protocol":{"domain":null,"_events":{"end":[null,null]},"_eventsCount":7,"readable":true,"writable":true,"_config":{"host":"localhost","port":3306,"user":"root","password":"password","database":"readshare","connectTimeout":10000,"insecureAuth":false,"supportBigNumbers":false,"bigNumberStrings":false,"dateStrings":false,"trace":true,"stringifyObjects":false,"timezone":"local","flags":"","ssl":false,"multipleStatements":false,"typeCast":true,"maxPacketSize":0,"charsetNumber":33,"clientFlags":455631,"protocol41":true},"_connection":"[Circular]","_callback":null,"_fatalError":null,"_quitSequence":null,"_handshake":true,"_handshaked":true,"_ended":false,"_destroyed":false,"_queue":[],"_handshakeInitializationPacket":{"protocolVersion":10,"serverVersion":"5.7.28-0ubuntu0.18.04.4","threadId":32,"scrambleBuff1":{"type":"Buffer","data":[13,65,108,114,88,4,100,117]},"filler1":{"type":"Buffer","data":[0]},"serverCapabilities1":65535,"serverLanguage":8,"serverStatus":2,"serverCapabilities2":49663,"scrambleLength":21,"filler2":{"type":"Buffer","data":[0,0,0,0,0,0,0,0,0,0]},"scrambleBuff2":{"type":"Buffer","data":[45,114,1,91,27,27,52,64,104,64,35,109]},"filler3":{"type":"Buffer","data":[0]},"pluginData":"mysql_native_password","protocol41":true},"_parser":{"_supportBigNumbers":false,"_buffer":{"type":"Buffer","data":[7,0,0,2,0,0,0,2,0,0,0]},"_nextBuffers":{"bufs":[],"size":0},"_longPacketBuffers":{"bufs":[],"size":0},"_offset":11,"_packetEnd":null,"_packetHeader":null,"_packetOffset":null,"_nextPacketNumber":3,"_encoding":"utf-8","_paused":false}},"_connectCalled":true,"state":"authenticated","threadId":32},"Logger":{"_readableState":{"objectMode":true,"highWaterMark":16,"buffer":{"head":null,"tail":null,"length":0},"length":0,"pipes":[{"_writableState":{"objectMode":true,"highWaterMark":16,"finalCalled":false,"needDrain":false,"ending":false,"ended":false,"finished":false,"destroyed":false,"decodeStrings":true,"defaultEncoding":"utf8","length":0,"writing":false,"corked":0,"sync":false,"bufferProcessing":false,"writecb":null,"writelen":0,"bufferedRequest":null,"lastBufferedRequest":null,"pendingcb":3,"prefinished":false,"errorEmitted":false,"bufferedRequestCount":0,"corkedRequestsFree":{"next":null,"entry":null}},"writable":true,"domain":null,"_events":{"unpipe":[null,null],"error":[null,null]},"_eventsCount":6,"level":"error","name":"file","_stream":{"_readableState":{"objectMode":false,"highWaterMark":16384,"buffer":{"head":null,"tail":null,"length":0},"length":0,"pipes":{"_writableState":{"objectMode":false,"highWaterMark":16384,"finalCalled":false,"needDrain":false,"ending":false,"ended":false,"finished":false,"destroyed":false,"decodeStrings":true,"defaultEncoding":"utf8","length":0,"writing":false,"corked":0,"sync":true,"bufferProcessing":false,"writecb":null,"writelen":0,"bufferedRequest":null,"lastBufferedRequest":null,"pendingcb":0,"prefinished":false,"errorEmitted":false,"bufferedRequestCount":0,"corkedRequestsFree":{"next":null,"entry":null}},"writable":true,"domain":null,"_events":{"finish":[null,null],"error":[null,null],"close":[null,null]},"_eventsCount":6,"path":"error.log","fd":12,"flags":"a","mode":438,"autoClose":true,"bytesWritten":0},"pipesCount":1,"flowing":true,"ended":false,"endEmitted":false,"reading":true,"sync":false,"needReadable":true,"emittedReadable":false,"readableListening":false,"resumeScheduled":false,"paused":false,"emitClose":true,"destroyed":false,"defaultEncoding":"utf8","awaitDrain":0,"readingMore":false,"decoder":null,"encoding":null},"readable":true,"domain":null,"_events":{},"_eventsCount":3,"_maxListeners":30,"_writableState":{"objectMode":false,"highWaterMark":16384,"finalCalled":false,"needDrain":false,"ending":false,"ended":false,"finished":false,"destroyed":false,"decodeStrings":true,"defaultEncoding":"utf8","length":0,"writing":false,"corked":0,"sync":true,"bufferProcessing":false,"writecb":null,"writelen":0,"bufferedRequest":null,"lastBufferedRequest":null,"pendingcb":0,"prefinished":false,"errorEmitted":false,"emitClose":true,"bufferedRequestCount":0,"corkedRequestsFree":{"next":null,"entry":null}},"writable":true,"allowHalfOpen":true,"_transformState":{"needTransform":true,"transforming":false,"writecb":null,"writechunk":null,"writeencoding":null}},"filename":"error.log","_basename":"error.log","dirname":".","options":{"flags":"a"},"maxsize":null,"rotationFormat":false,"zippedArchive":false,"maxFiles":null,"eol":"\n","tailable":false,"_size":0,"_pendingSize":0,"_created":0,"_drain":false,"_opening":false,"_ending":false,"levels":{"error":0,"warn":1,"info":2,"http":3,"verbose":4,"debug":5,"silly":6},"parent":"[Circular]","_dest":{"_writableState":{"objectMode":false,"highWaterMark":16384,"finalCalled":false,"needDrain":false,"ending":false,"ended":false,"finished":false,"destroyed":false,"decodeStrings":true,"defaultEncoding":"utf8","length":0,"writing":false,"corked":0,"sync":true,"bufferProcessing":false,"writecb":null,"writelen":0,"bufferedRequest":null,"lastBufferedRequest":null,"pendingcb":0,"prefinished":false,"errorEmitted":false,"bufferedRequestCount":0,"corkedRequestsFree":{"next":null,"entry":null}},"writable":true,"domain":null,"_events":{"finish":[null,null],"error":[null,null],"close":[null,null]},"_eventsCount":6,"path":"error.log","fd":12,"flags":"a","mode":438,"autoClose":true,"bytesWritten":0},"_rotate":false},{"_writableState":{"objectMode":true,"highWaterMark":16,"finalCalled":false,"needDrain":false,"ending":false,"ended":false,"finished":false,"destroyed":false,"decodeStrings":true,"defaultEncoding":"utf8","length":0,"writing":false,"corked":0,"sync":false,"bufferProcessing":false,"writecb":null,"writelen":0,"bufferedRequest":null,"lastBufferedRequest":null,"pendingcb":3,"prefinished":false,"errorEmitted":false,"bufferedRequestCount":0,"corkedRequestsFree":{"next":null,"entry":null}},"writable":true,"domain":null,"_events":{"unpipe":[null,null],"error":[null,null]},"_eventsCount":6,"name":"file","_stream":{"_readableState":{"objectMode":false,"highWaterMark":16384,"buffer":{"head":null,"tail":null,"length":0},"length":0,"pipes":{"_writableState":{"objectMode":false,"highWaterMark":16384,"finalCalled":false,"needDrain":false,"ending":false,"ended":false,"finished":false,"destroyed":false,"decodeStrings":true,"defaultEncoding":"utf8","length":395,"writing":true,"corked":0,"sync":false,"bufferProcessing":false,"writelen":108,"bufferedRequest":{"chunk":{"type":"Buffer","data":[123,34,109,101,115,115,97,103,101,34,58,34,83,101,116,32,109,121,115,113,108,32,105,110,32,99,111,110,116,114,111,108,108,101,114,32,111,98,106,101,99,116,34,44,34,108,101,118,101,108,34,58,34,105,110,102,111,34,44,34,116,105,109,101,115,116,97,109,112,34,58,34,50,48,49,57,45,49,50,45,49,55,84,49,49,58,50,54,58,49,55,43,48,53,58,51,48,34,125,10]},"encoding":"buffer","isBuf":true,"next":{"chunk":{"type":"Buffer","data":[123,34,109,101,115,115,97,103,101,34,58,34,73,110,105,116,105,97,116,105,110,103,32,116,101,115,116,32,99,111,110,116,114,111,108,108,101,114,34,44,34,108,101,118,101,108,34,58,34,105,110,102,111,34,44,34,116,105,109,101,115,116,97,109,112,34,58,34,50,48,49,57,45,49,50,45,49,55,84,49,49,58,50,54,58,49,55,43,48,53,58,51,48,34,125,10]},"encoding":"buffer","isBuf":true,"next":{"chunk":{"type":"Buffer","data":[123,34,109,101,115,115,97,103,101,34,58,34,73,110,105,116,32,97,108,108,32,100,101,112,101,110,100,101,110,99,105,101,115,34,44,34,108,101,118,101,108,34,58,34,105,110,102,111,34,44,34,116,105,109,101,115,116,97,109,112,34,58,34,50,48,49,57,45,49,50,45,49,55,84,49,49,58,50,54,58,49,55,43,48,53,58,51,48,34,125,10]},"encoding":"buffer","isBuf":true,"next":null}}},"lastBufferedRequest":{"chunk":{"type":"Buffer","data":[123,34,109,101,115,115,97,103,101,34,58,34,73,110,105,116,32,97,108,108,32,100,101,112,101,110,100,101,110,99,105,101,115,34,44,34,108,101,118,101,108,34,58,34,105,110,102,111,34,44,34,116,105,109,101,115,116,97,109,112,34,58,34,50,48,49,57,45,49,50,45,49,55,84,49,49,58,50,54,58,49,55,43,48,53,58,51,48,34,125,10]},"encoding":"buffer","isBuf":true,"next":null},"pendingcb":4,"prefinished":false,"errorEmitted":false,"bufferedRequestCount":3,"corkedRequestsFree":{"next":{"next":null,"entry":null},"entry":null}},"writable":true,"domain":null,"_events":{"finish":[null,null],"error":[null,null],"close":[null,null]},"_eventsCount":6,"path":"combined.log","fd":13,"flags":"a","mode":438,"autoClose":true,"bytesWritten":3881},"pipesCount":1,"flowing":true,"ended":false,"endEmitted":false,"reading":false,"sync":false,"needReadable":true,"emittedReadable":false,"readableListening":false,"resumeScheduled":false,"paused":false,"emitClose":true,"destroyed":false,"defaultEncoding":"utf8","awaitDrain":0,"readingMore":true,"decoder":null,"encoding":null},"readable":true,"domain":null,"_events":{},"_eventsCount":3,"_maxListeners":30,"_writableState":{"objectMode":false,"highWaterMark":16384,"finalCalled":false,"needDrain":false,"ending":false,"ended":false,"finished":false,"destroyed":false,"decodeStrings":true,"defaultEncoding":"utf8","length":0,"writing":false,"corked":0,"sync":false,"bufferProcessing":false,"writecb":null,"writelen":0,"bufferedRequest":null,"lastBufferedRequest":null,"pendingcb":3,"prefinished":false,"errorEmitted":false,"emitClose":true,"bufferedRequestCount":0,"corkedRequestsFree":{"next":null,"entry":null}},"writable":true,"allowHalfOpen":true,"_transformState":{"needTransform":true,"transforming":false,"writecb":null,"writechunk":null,"writeencoding":"buffer"}},"filename":"combined.log","_basename":"combined.log","dirname":".","options":{"flags":"a"},"maxsize":null,"rotationFormat":false,"zippedArchive":false,"maxFiles":null,"eol":"\n","tailable":false,"_size":63909,"_pendingSize":287,"_created":0,"_drain":false,"_opening":false,"_ending":false,"levels":{"error":0,"warn":1,"info":2,"http":3,"verbose":4,"debug":5,"silly":6},"parent":"[Circular]","_dest":{"_writableState":{"objectMode":false,"highWaterMark":16384,"finalCalled":false,"needDrain":false,"ending":false,"ended":false,"finished":false,"destroyed":false,"decodeStrings":true,"defaultEncoding":"utf8","length":395,"writing":true,"corked":0,"sync":false,"bufferProcessing":false,"writelen":108,"bufferedRequest":{"chunk":{"type":"Buffer","data":[123,34,109,101,115,115,97,103,101,34,58,34,83,101,116,32,109,121,115,113,108,32,105,110,32,99,111,110,116,114,111,108,108,101,114,32,111,98,106,101,99,116,34,44,34,108,101,118,101,108,34,58,34,105,110,102,111,34,44,34,116,105,109,101,115,116,97,109,112,34,58,34,50,48,49,57,45,49,50,45,49,55,84,49,49,58,50,54,58,49,55,43,48,53,58,51,48,34,125,10]},"encoding":"buffer","isBuf":true,"next":{"chunk":{"type":"Buffer","data":[123,34,109,101,115,115,97,103,101,34,58,34,73,110,105,116,105,97,116,105,110,103,32,116,101,115,116,32,99,111,110,116,114,111,108,108,101,114,34,44,34,108,101,118,101,108,34,58,34,105,110,102,111,34,44,34,116,105,109,101,115,116,97,109,112,34,58,34,50,48,49,57,45,49,50,45,49,55,84,49,49,58,50,54,58,49,55,43,48,53,58,51,48,34,125,10]},"encoding":"buffer","isBuf":true,"next":{"chunk":{"type":"Buffer","data":[123,34,109,101,115,115,97,103,101,34,58,34,73,110,105,116,32,97,108,108,32,100,101,112,101,110,100,101,110,99,105,101,115,34,44,34,108,101,118,101,108,34,58,34,105,110,102,111,34,44,34,116,105,109,101,115,116,97,109,112,34,58,34,50,48,49,57,45,49,50,45,49,55,84,49,49,58,50,54,58,49,55,43,48,53,58,51,48,34,125,10]},"encoding":"buffer","isBuf":true,"next":null}}},"lastBufferedRequest":{"chunk":{"type":"Buffer","data":[123,34,109,101,115,115,97,103,101,34,58,34,73,110,105,116,32,97,108,108,32,100,101,112,101,110,100,101,110,99,105,101,115,34,44,34,108,101,118,101,108,34,58,34,105,110,102,111,34,44,34,116,105,109,101,115,116,97,109,112,34,58,34,50,48,49,57,45,49,50,45,49,55,84,49,49,58,50,54,58,49,55,43,48,53,58,51,48,34,125,10]},"encoding":"buffer","isBuf":true,"next":null},"pendingcb":4,"prefinished":false,"errorEmitted":false,"bufferedRequestCount":3,"corkedRequestsFree":{"next":{"next":null,"entry":null},"entry":null}},"writable":true,"domain":null,"_events":{"finish":[null,null],"error":[null,null],"close":[null,null]},"_eventsCount":6,"path":"combined.log","fd":13,"flags":"a","mode":438,"autoClose":true,"bytesWritten":3881},"_rotate":false}],"pipesCount":2,"flowing":true,"ended":false,"endEmitted":false,"reading":false,"sync":false,"needReadable":true,"emittedReadable":false,"readableListening":false,"resumeScheduled":false,"paused":false,"emitClose":true,"destroyed":false,"defaultEncoding":"utf8","awaitDrain":0,"readingMore":true,"decoder":null,"encoding":null},"readable":true,"domain":null,"_events":{"end":[null,null],"data":[null,null]},"_eventsCount":3,"_writableState":{"objectMode":true,"highWaterMark":16,"finalCalled":false,"needDrain":false,"ending":false,"ended":false,"finished":false,"destroyed":false,"decodeStrings":true,"defaultEncoding":"utf8","length":1,"writing":true,"corked":0,"sync":true,"bufferProcessing":false,"writelen":1,"bufferedRequest":null,"lastBufferedRequest":null,"pendingcb":4,"prefinished":false,"errorEmitted":false,"emitClose":true,"bufferedRequestCount":0,"corkedRequestsFree":{"next":null,"entry":null}},"writable":true,"allowHalfOpen":true,"_transformState":{"needTransform":true,"transforming":true,"writechunk":"[Circular]","writeencoding":"utf8"},"format":{"options":{}},"defaultMeta":{"timestamp":"2019-12-17T11:26:17+05:30"},"levels":{"error":0,"warn":1,"info":2,"http":3,"verbose":4,"debug":5,"silly":6},"level":"info","exceptions":{"logger":"[Circular]","handlers":{}},"rejections":{"logger":"[Circular]","handlers":{}},"profilers":{},"exitOnError":true}},"level":"info","timestamp":"2019-12-17T11:26:17+05:30"}
{"message":"creating the web server","level":"info","timestamp":"2019-12-17T11:26:17+05:30"}
{"message":"read share service listening on port - 3000","level":"info","timestamp":"2019-12-17T11:26:17+05:30"}
{"message":"Loading init options","level":"info","timestamp":"2019-12-17T11:26:38+05:30"}
{"message":"Populating INIT_OPTS","level":"info","timestamp":"2019-12-17T11:26:38+05:30"}
{"message":"Creating controller","level":"info","timestamp":"2019-12-17T11:26:38+05:30"}
{"message":"Loading express routes","level":"info","timestamp":"2019-12-17T11:26:38+05:30"}
{"message":"Initiating controller","level":"info","timestamp":"2019-12-17T11:26:38+05:30"}
{"message":"Initializing controller","level":"info","timestamp":"2019-12-17T11:26:38+05:30"}
{"message":"Starting the controller object with: { LOGGER: \n   DerivedLogger {\n     _readableState: \n      ReadableState {\n        objectMode: true,\n        highWaterMark: 16,\n        buffer: BufferList { head: null, tail: null, length: 0 },\n        length: 0,\n        pipes: [Array],\n        pipesCount: 2,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: false,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        paused: false,\n        emitClose: true,\n        destroyed: false,\n        defaultEncoding: 'utf8',\n        awaitDrain: 0,\n        readingMore: true,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     domain: null,\n     _events: { prefinish: [Function: prefinish], end: [Array], data: [Array] },\n     _eventsCount: 3,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: true,\n        highWaterMark: 16,\n        finalCalled: false,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        destroyed: false,\n        decodeStrings: true,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: false,\n        bufferProcessing: false,\n        onwrite: [Function],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 6,\n        prefinished: false,\n        errorEmitted: false,\n        emitClose: true,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     _transformState: \n      { afterTransform: [Function: bound afterTransform],\n        needTransform: true,\n        transforming: false,\n        writecb: null,\n        writechunk: null,\n        writeencoding: 'utf8' },\n     silent: undefined,\n     format: Format { options: {} },\n     defaultMeta: { timestamp: '2019-12-17T11:26:38+05:30' },\n     levels: \n      { error: 0,\n        warn: 1,\n        info: 2,\n        http: 3,\n        verbose: 4,\n        debug: 5,\n        silly: 6 },\n     level: 'info',\n     exceptions: ExceptionHandler { logger: [Circular], handlers: Map {} },\n     rejections: RejectionHandler { logger: [Circular], handlers: Map {} },\n     profilers: {},\n     exitOnError: true },\n  PROGRAM_OPTS: \n   Command {\n     commands: [],\n     options: [ [Object], [Object], [Object] ],\n     _execs: Set {},\n     _allowUnknownOption: false,\n     _args: [],\n     _name: 'app',\n     _helpFlags: '-h, --help',\n     _helpDescription: 'output usage information',\n     _helpShortFlag: '-h',\n     _helpLongFlag: '--help',\n     Command: { [Function: Command] super_: [Object] },\n     Option: [Function: Option],\n     CommanderError: [Function: CommanderError],\n     _events: \n      { 'option:verbose': [Function],\n        'option:digitalmarketplace': [Function],\n        'option:rsa': [Function] },\n     _eventsCount: 3,\n     rawArgs: \n      [ '/usr/local/bin/node',\n        '/home/gauravkumar/grv_java/readshare-club/app.js' ],\n     args: [] } }","level":"info","timestamp":"2019-12-17T11:26:38+05:30"}
{"message":"Mysql connection created successfully!","level":"info","timestamp":"2019-12-17T11:26:38+05:30"}
{"message":"Set mysql in controller object","level":"info","timestamp":"2019-12-17T11:26:38+05:30"}
{"message":"Initiating test controller","level":"info","timestamp":"2019-12-17T11:26:38+05:30"}
{"message":"Init all dependencies","level":"info","timestamp":"2019-12-17T11:26:38+05:30"}
{"level":"info","timestamp":"2019-12-17T11:26:38+05:30"}
{"message":"creating the web server","level":"info","timestamp":"2019-12-17T11:26:38+05:30"}
{"message":"read share service listening on port - 3000","level":"info","timestamp":"2019-12-17T11:26:38+05:30"}
{"message":"Loading init options","level":"info","timestamp":"2019-12-17T11:30:50+05:30"}
{"message":"Populating INIT_OPTS","level":"info","timestamp":"2019-12-17T11:30:50+05:30"}
{"message":"Creating controller","level":"info","timestamp":"2019-12-17T11:30:50+05:30"}
{"message":"Loading express routes","level":"info","timestamp":"2019-12-17T11:30:50+05:30"}
{"message":"Initiating controller","level":"info","timestamp":"2019-12-17T11:30:50+05:30"}
{"message":"Initializing controller","level":"info","timestamp":"2019-12-17T11:30:50+05:30"}
{"message":"Starting the controller object with: { LOGGER: \n   DerivedLogger {\n     _readableState: \n      ReadableState {\n        objectMode: true,\n        highWaterMark: 16,\n        buffer: BufferList { head: null, tail: null, length: 0 },\n        length: 0,\n        pipes: [Array],\n        pipesCount: 2,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: false,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        paused: false,\n        emitClose: true,\n        destroyed: false,\n        defaultEncoding: 'utf8',\n        awaitDrain: 0,\n        readingMore: true,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     domain: null,\n     _events: { prefinish: [Function: prefinish], end: [Array], data: [Array] },\n     _eventsCount: 3,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: true,\n        highWaterMark: 16,\n        finalCalled: false,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        destroyed: false,\n        decodeStrings: true,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: false,\n        bufferProcessing: false,\n        onwrite: [Function],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 6,\n        prefinished: false,\n        errorEmitted: false,\n        emitClose: true,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     _transformState: \n      { afterTransform: [Function: bound afterTransform],\n        needTransform: true,\n        transforming: false,\n        writecb: null,\n        writechunk: null,\n        writeencoding: 'utf8' },\n     silent: undefined,\n     format: Format { options: {} },\n     defaultMeta: { timestamp: '2019-12-17T11:30:50+05:30' },\n     levels: \n      { error: 0,\n        warn: 1,\n        info: 2,\n        http: 3,\n        verbose: 4,\n        debug: 5,\n        silly: 6 },\n     level: 'info',\n     exceptions: ExceptionHandler { logger: [Circular], handlers: Map {} },\n     rejections: RejectionHandler { logger: [Circular], handlers: Map {} },\n     profilers: {},\n     exitOnError: true },\n  PROGRAM_OPTS: \n   Command {\n     commands: [],\n     options: [ [Object], [Object], [Object] ],\n     _execs: Set {},\n     _allowUnknownOption: false,\n     _args: [],\n     _name: 'app',\n     _helpFlags: '-h, --help',\n     _helpDescription: 'output usage information',\n     _helpShortFlag: '-h',\n     _helpLongFlag: '--help',\n     Command: { [Function: Command] super_: [Object] },\n     Option: [Function: Option],\n     CommanderError: [Function: CommanderError],\n     _events: \n      { 'option:verbose': [Function],\n        'option:digitalmarketplace': [Function],\n        'option:rsa': [Function] },\n     _eventsCount: 3,\n     rawArgs: \n      [ '/usr/local/bin/node',\n        '/home/gauravkumar/grv_java/readshare-club/app.js' ],\n     args: [] } }","level":"info","timestamp":"2019-12-17T11:30:50+05:30"}
{"message":"Mysql connection created successfully!","level":"info","timestamp":"2019-12-17T11:30:50+05:30"}
{"message":"Set mysql in controller object","level":"info","timestamp":"2019-12-17T11:30:50+05:30"}
{"message":"Initiating test controller","level":"info","timestamp":"2019-12-17T11:30:50+05:30"}
{"message":"Init all dependencies","level":"info","timestamp":"2019-12-17T11:30:50+05:30"}
{"message":"creating the web server","level":"info","timestamp":"2019-12-17T11:30:50+05:30"}
{"message":"read share service listening on port - 3000","level":"info","timestamp":"2019-12-17T11:30:50+05:30"}
{"message":"Loading init options","level":"info","timestamp":"2019-12-17T11:31:37+05:30"}
{"message":"Populating INIT_OPTS","level":"info","timestamp":"2019-12-17T11:31:37+05:30"}
{"message":"Creating controller","level":"info","timestamp":"2019-12-17T11:31:37+05:30"}
{"message":"Loading express routes","level":"info","timestamp":"2019-12-17T11:31:37+05:30"}
{"message":"Initiating controller","level":"info","timestamp":"2019-12-17T11:31:37+05:30"}
{"message":"Initializing controller","level":"info","timestamp":"2019-12-17T11:31:37+05:30"}
{"message":"Starting the controller object with: { LOGGER: \n   DerivedLogger {\n     _readableState: \n      ReadableState {\n        objectMode: true,\n        highWaterMark: 16,\n        buffer: BufferList { head: null, tail: null, length: 0 },\n        length: 0,\n        pipes: [Array],\n        pipesCount: 2,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: false,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        paused: false,\n        emitClose: true,\n        destroyed: false,\n        defaultEncoding: 'utf8',\n        awaitDrain: 0,\n        readingMore: true,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     domain: null,\n     _events: { prefinish: [Function: prefinish], end: [Array], data: [Array] },\n     _eventsCount: 3,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: true,\n        highWaterMark: 16,\n        finalCalled: false,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        destroyed: false,\n        decodeStrings: true,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: false,\n        bufferProcessing: false,\n        onwrite: [Function],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 6,\n        prefinished: false,\n        errorEmitted: false,\n        emitClose: true,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     _transformState: \n      { afterTransform: [Function: bound afterTransform],\n        needTransform: true,\n        transforming: false,\n        writecb: null,\n        writechunk: null,\n        writeencoding: 'utf8' },\n     silent: undefined,\n     format: Format { options: {} },\n     defaultMeta: { timestamp: '2019-12-17T11:31:37+05:30' },\n     levels: \n      { error: 0,\n        warn: 1,\n        info: 2,\n        http: 3,\n        verbose: 4,\n        debug: 5,\n        silly: 6 },\n     level: 'info',\n     exceptions: ExceptionHandler { logger: [Circular], handlers: Map {} },\n     rejections: RejectionHandler { logger: [Circular], handlers: Map {} },\n     profilers: {},\n     exitOnError: true },\n  PROGRAM_OPTS: \n   Command {\n     commands: [],\n     options: [ [Object], [Object], [Object] ],\n     _execs: Set {},\n     _allowUnknownOption: false,\n     _args: [],\n     _name: 'app',\n     _helpFlags: '-h, --help',\n     _helpDescription: 'output usage information',\n     _helpShortFlag: '-h',\n     _helpLongFlag: '--help',\n     Command: { [Function: Command] super_: [Object] },\n     Option: [Function: Option],\n     CommanderError: [Function: CommanderError],\n     _events: \n      { 'option:verbose': [Function],\n        'option:digitalmarketplace': [Function],\n        'option:rsa': [Function] },\n     _eventsCount: 3,\n     rawArgs: \n      [ '/usr/local/bin/node',\n        '/home/gauravkumar/grv_java/readshare-club/app.js' ],\n     args: [] } }","level":"info","timestamp":"2019-12-17T11:31:37+05:30"}
{"message":"Mysql connection created successfully!","level":"info","timestamp":"2019-12-17T11:31:37+05:30"}
{"message":"Set mysql in controller object","level":"info","timestamp":"2019-12-17T11:31:37+05:30"}
{"message":"Initiating test controller","level":"info","timestamp":"2019-12-17T11:31:37+05:30"}
{"message":"Init all dependencies","level":"info","timestamp":"2019-12-17T11:31:37+05:30"}
{"message":"creating the web server","level":"info","timestamp":"2019-12-17T11:31:37+05:30"}
{"message":"read share service listening on port - 3000","level":"info","timestamp":"2019-12-17T11:31:37+05:30"}
{"message":"Loading init options","level":"info","timestamp":"2019-12-17T11:32:56+05:30"}
{"message":"Populating INIT_OPTS","level":"info","timestamp":"2019-12-17T11:32:56+05:30"}
{"message":"Creating controller","level":"info","timestamp":"2019-12-17T11:32:56+05:30"}
{"message":"Loading express routes","level":"info","timestamp":"2019-12-17T11:32:56+05:30"}
{"message":"Initiating controller","level":"info","timestamp":"2019-12-17T11:32:56+05:30"}
{"message":"Initializing controller","level":"info","timestamp":"2019-12-17T11:32:56+05:30"}
{"message":"Starting the controller object with: { LOGGER: \n   DerivedLogger {\n     _readableState: \n      ReadableState {\n        objectMode: true,\n        highWaterMark: 16,\n        buffer: BufferList { head: null, tail: null, length: 0 },\n        length: 0,\n        pipes: [Array],\n        pipesCount: 2,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: false,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        paused: false,\n        emitClose: true,\n        destroyed: false,\n        defaultEncoding: 'utf8',\n        awaitDrain: 0,\n        readingMore: true,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     domain: null,\n     _events: { prefinish: [Function: prefinish], end: [Array], data: [Array] },\n     _eventsCount: 3,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: true,\n        highWaterMark: 16,\n        finalCalled: false,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        destroyed: false,\n        decodeStrings: true,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: false,\n        bufferProcessing: false,\n        onwrite: [Function],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 6,\n        prefinished: false,\n        errorEmitted: false,\n        emitClose: true,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     _transformState: \n      { afterTransform: [Function: bound afterTransform],\n        needTransform: true,\n        transforming: false,\n        writecb: null,\n        writechunk: null,\n        writeencoding: 'utf8' },\n     silent: undefined,\n     format: Format { options: {} },\n     defaultMeta: { timestamp: '2019-12-17T11:32:56+05:30' },\n     levels: \n      { error: 0,\n        warn: 1,\n        info: 2,\n        http: 3,\n        verbose: 4,\n        debug: 5,\n        silly: 6 },\n     level: 'info',\n     exceptions: ExceptionHandler { logger: [Circular], handlers: Map {} },\n     rejections: RejectionHandler { logger: [Circular], handlers: Map {} },\n     profilers: {},\n     exitOnError: true },\n  PROGRAM_OPTS: \n   Command {\n     commands: [],\n     options: [ [Object], [Object], [Object] ],\n     _execs: Set {},\n     _allowUnknownOption: false,\n     _args: [],\n     _name: 'app',\n     _helpFlags: '-h, --help',\n     _helpDescription: 'output usage information',\n     _helpShortFlag: '-h',\n     _helpLongFlag: '--help',\n     Command: { [Function: Command] super_: [Object] },\n     Option: [Function: Option],\n     CommanderError: [Function: CommanderError],\n     _events: \n      { 'option:verbose': [Function],\n        'option:digitalmarketplace': [Function],\n        'option:rsa': [Function] },\n     _eventsCount: 3,\n     rawArgs: \n      [ '/usr/local/bin/node',\n        '/home/gauravkumar/grv_java/readshare-club/app.js' ],\n     args: [] } }","level":"info","timestamp":"2019-12-17T11:32:56+05:30"}
{"message":"Mysql connection created successfully!","level":"info","timestamp":"2019-12-17T11:32:56+05:30"}
{"message":"Set mysql in controller object","level":"info","timestamp":"2019-12-17T11:32:56+05:30"}
{"message":"Initiating test controller","level":"info","timestamp":"2019-12-17T11:32:56+05:30"}
{"message":"Init all dependencies","level":"info","timestamp":"2019-12-17T11:32:56+05:30"}
{"message":"creating the web server","level":"info","timestamp":"2019-12-17T11:32:56+05:30"}
{"message":"read share service listening on port - 3000","level":"info","timestamp":"2019-12-17T11:32:56+05:30"}
{"message":"Loading init options","level":"info","timestamp":"2019-12-17T11:34:52+05:30"}
{"message":"Populating INIT_OPTS","level":"info","timestamp":"2019-12-17T11:34:52+05:30"}
{"message":"Creating controller","level":"info","timestamp":"2019-12-17T11:34:52+05:30"}
{"message":"Loading express routes","level":"info","timestamp":"2019-12-17T11:34:52+05:30"}
{"message":"Initiating controller","level":"info","timestamp":"2019-12-17T11:34:52+05:30"}
{"message":"Initializing controller","level":"info","timestamp":"2019-12-17T11:34:52+05:30"}
{"message":"Starting the controller object with: { LOGGER: \n   DerivedLogger {\n     _readableState: \n      ReadableState {\n        objectMode: true,\n        highWaterMark: 16,\n        buffer: BufferList { head: null, tail: null, length: 0 },\n        length: 0,\n        pipes: [Array],\n        pipesCount: 2,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: false,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        paused: false,\n        emitClose: true,\n        destroyed: false,\n        defaultEncoding: 'utf8',\n        awaitDrain: 0,\n        readingMore: true,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     domain: null,\n     _events: { prefinish: [Function: prefinish], end: [Array], data: [Array] },\n     _eventsCount: 3,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: true,\n        highWaterMark: 16,\n        finalCalled: false,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        destroyed: false,\n        decodeStrings: true,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: false,\n        bufferProcessing: false,\n        onwrite: [Function],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 6,\n        prefinished: false,\n        errorEmitted: false,\n        emitClose: true,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     _transformState: \n      { afterTransform: [Function: bound afterTransform],\n        needTransform: true,\n        transforming: false,\n        writecb: null,\n        writechunk: null,\n        writeencoding: 'utf8' },\n     silent: undefined,\n     format: Format { options: {} },\n     defaultMeta: { timestamp: '2019-12-17T11:34:52+05:30' },\n     levels: \n      { error: 0,\n        warn: 1,\n        info: 2,\n        http: 3,\n        verbose: 4,\n        debug: 5,\n        silly: 6 },\n     level: 'info',\n     exceptions: ExceptionHandler { logger: [Circular], handlers: Map {} },\n     rejections: RejectionHandler { logger: [Circular], handlers: Map {} },\n     profilers: {},\n     exitOnError: true },\n  PROGRAM_OPTS: \n   Command {\n     commands: [],\n     options: [ [Object], [Object], [Object] ],\n     _execs: Set {},\n     _allowUnknownOption: false,\n     _args: [],\n     _name: 'app',\n     _helpFlags: '-h, --help',\n     _helpDescription: 'output usage information',\n     _helpShortFlag: '-h',\n     _helpLongFlag: '--help',\n     Command: { [Function: Command] super_: [Object] },\n     Option: [Function: Option],\n     CommanderError: [Function: CommanderError],\n     _events: \n      { 'option:verbose': [Function],\n        'option:digitalmarketplace': [Function],\n        'option:rsa': [Function] },\n     _eventsCount: 3,\n     rawArgs: \n      [ '/usr/local/bin/node',\n        '/home/gauravkumar/grv_java/readshare-club/app.js' ],\n     args: [] } }","level":"info","timestamp":"2019-12-17T11:34:52+05:30"}
{"message":"Mysql connection created successfully!","level":"info","timestamp":"2019-12-17T11:34:52+05:30"}
{"message":"Set mysql in controller object","level":"info","timestamp":"2019-12-17T11:34:52+05:30"}
{"message":"Initiating test controller","level":"info","timestamp":"2019-12-17T11:34:52+05:30"}
{"message":"Init all dependencies","level":"info","timestamp":"2019-12-17T11:34:52+05:30"}
{"message":"creating the web server","level":"info","timestamp":"2019-12-17T11:34:52+05:30"}
{"message":"read share service listening on port - 3000","level":"info","timestamp":"2019-12-17T11:34:52+05:30"}
{"message":"Loading init options","level":"info","timestamp":"2019-12-17T11:38:33+05:30"}
{"message":"Populating INIT_OPTS","level":"info","timestamp":"2019-12-17T11:38:33+05:30"}
{"message":"Creating controller","level":"info","timestamp":"2019-12-17T11:38:33+05:30"}
{"message":"Loading express routes","level":"info","timestamp":"2019-12-17T11:38:33+05:30"}
{"message":"Initiating controller","level":"info","timestamp":"2019-12-17T11:38:33+05:30"}
{"message":"Initializing controller","level":"info","timestamp":"2019-12-17T11:38:33+05:30"}
{"message":"Starting the controller object with: { LOGGER: \n   DerivedLogger {\n     _readableState: \n      ReadableState {\n        objectMode: true,\n        highWaterMark: 16,\n        buffer: BufferList { head: null, tail: null, length: 0 },\n        length: 0,\n        pipes: [Array],\n        pipesCount: 2,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: false,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        paused: false,\n        emitClose: true,\n        destroyed: false,\n        defaultEncoding: 'utf8',\n        awaitDrain: 0,\n        readingMore: true,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     domain: null,\n     _events: { prefinish: [Function: prefinish], end: [Array], data: [Array] },\n     _eventsCount: 3,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: true,\n        highWaterMark: 16,\n        finalCalled: false,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        destroyed: false,\n        decodeStrings: true,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: false,\n        bufferProcessing: false,\n        onwrite: [Function],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 6,\n        prefinished: false,\n        errorEmitted: false,\n        emitClose: true,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     _transformState: \n      { afterTransform: [Function: bound afterTransform],\n        needTransform: true,\n        transforming: false,\n        writecb: null,\n        writechunk: null,\n        writeencoding: 'utf8' },\n     silent: undefined,\n     format: Format { options: {} },\n     defaultMeta: { timestamp: '2019-12-17T11:38:33+05:30' },\n     levels: \n      { error: 0,\n        warn: 1,\n        info: 2,\n        http: 3,\n        verbose: 4,\n        debug: 5,\n        silly: 6 },\n     level: 'info',\n     exceptions: ExceptionHandler { logger: [Circular], handlers: Map {} },\n     rejections: RejectionHandler { logger: [Circular], handlers: Map {} },\n     profilers: {},\n     exitOnError: true },\n  PROGRAM_OPTS: \n   Command {\n     commands: [],\n     options: [ [Object], [Object], [Object] ],\n     _execs: Set {},\n     _allowUnknownOption: false,\n     _args: [],\n     _name: 'app',\n     _helpFlags: '-h, --help',\n     _helpDescription: 'output usage information',\n     _helpShortFlag: '-h',\n     _helpLongFlag: '--help',\n     Command: { [Function: Command] super_: [Object] },\n     Option: [Function: Option],\n     CommanderError: [Function: CommanderError],\n     _events: \n      { 'option:verbose': [Function],\n        'option:digitalmarketplace': [Function],\n        'option:rsa': [Function] },\n     _eventsCount: 3,\n     rawArgs: \n      [ '/usr/local/bin/node',\n        '/home/gauravkumar/grv_java/readshare-club/app.js' ],\n     args: [] } }","level":"info","timestamp":"2019-12-17T11:38:33+05:30"}
{"message":"Mysql connection created successfully!","level":"info","timestamp":"2019-12-17T11:38:33+05:30"}
{"message":"Set mysql in controller object","level":"info","timestamp":"2019-12-17T11:38:33+05:30"}
{"message":"Initiating test controller","level":"info","timestamp":"2019-12-17T11:38:33+05:30"}
{"message":"Init all dependencies","level":"info","timestamp":"2019-12-17T11:38:33+05:30"}
{"message":"creating the web server","level":"info","timestamp":"2019-12-17T11:38:33+05:30"}
{"message":"read share service listening on port - 3000","level":"info","timestamp":"2019-12-17T11:38:33+05:30"}
{"message":"Loading init options","level":"info","timestamp":"2019-12-17T11:51:27+05:30"}
{"message":"Populating INIT_OPTS","level":"info","timestamp":"2019-12-17T11:51:27+05:30"}
{"message":"Creating controller","level":"info","timestamp":"2019-12-17T11:51:27+05:30"}
{"message":"Loading express routes","level":"info","timestamp":"2019-12-17T11:51:27+05:30"}
{"message":"Initiating controller","level":"info","timestamp":"2019-12-17T11:51:27+05:30"}
{"message":"Initializing controller","level":"info","timestamp":"2019-12-17T11:51:27+05:30"}
{"message":"Starting the controller object with: { LOGGER: \n   DerivedLogger {\n     _readableState: \n      ReadableState {\n        objectMode: true,\n        highWaterMark: 16,\n        buffer: BufferList { head: null, tail: null, length: 0 },\n        length: 0,\n        pipes: [Array],\n        pipesCount: 2,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: false,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        paused: false,\n        emitClose: true,\n        destroyed: false,\n        defaultEncoding: 'utf8',\n        awaitDrain: 0,\n        readingMore: true,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     domain: null,\n     _events: { prefinish: [Function: prefinish], end: [Array], data: [Array] },\n     _eventsCount: 3,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: true,\n        highWaterMark: 16,\n        finalCalled: false,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        destroyed: false,\n        decodeStrings: true,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: false,\n        bufferProcessing: false,\n        onwrite: [Function],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 6,\n        prefinished: false,\n        errorEmitted: false,\n        emitClose: true,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     _transformState: \n      { afterTransform: [Function: bound afterTransform],\n        needTransform: true,\n        transforming: false,\n        writecb: null,\n        writechunk: null,\n        writeencoding: 'utf8' },\n     silent: undefined,\n     format: Format { options: {} },\n     defaultMeta: { timestamp: '2019-12-17T11:51:27+05:30' },\n     levels: \n      { error: 0,\n        warn: 1,\n        info: 2,\n        http: 3,\n        verbose: 4,\n        debug: 5,\n        silly: 6 },\n     level: 'info',\n     exceptions: ExceptionHandler { logger: [Circular], handlers: Map {} },\n     rejections: RejectionHandler { logger: [Circular], handlers: Map {} },\n     profilers: {},\n     exitOnError: true },\n  PROGRAM_OPTS: \n   Command {\n     commands: [],\n     options: [ [Object], [Object], [Object] ],\n     _execs: Set {},\n     _allowUnknownOption: false,\n     _args: [],\n     _name: 'app',\n     _helpFlags: '-h, --help',\n     _helpDescription: 'output usage information',\n     _helpShortFlag: '-h',\n     _helpLongFlag: '--help',\n     Command: { [Function: Command] super_: [Object] },\n     Option: [Function: Option],\n     CommanderError: [Function: CommanderError],\n     _events: \n      { 'option:verbose': [Function],\n        'option:digitalmarketplace': [Function],\n        'option:rsa': [Function] },\n     _eventsCount: 3,\n     rawArgs: \n      [ '/usr/local/bin/node',\n        '/home/gauravkumar/grv_java/readshare-club/app.js' ],\n     args: [] } }","level":"info","timestamp":"2019-12-17T11:51:27+05:30"}
{"message":"Mysql connection created successfully!","level":"info","timestamp":"2019-12-17T11:51:27+05:30"}
{"message":"Set mysql in controller object","level":"info","timestamp":"2019-12-17T11:51:27+05:30"}
{"message":"Initiating test controller","level":"info","timestamp":"2019-12-17T11:51:27+05:30"}
{"message":"Init all dependencies","level":"info","timestamp":"2019-12-17T11:51:27+05:30"}
{"message":"creating the web server","level":"info","timestamp":"2019-12-17T11:51:27+05:30"}
{"message":"read share service listening on port - 3000","level":"info","timestamp":"2019-12-17T11:51:27+05:30"}
{"message":"Loading init options","level":"info","timestamp":"2019-12-17T11:52:19+05:30"}
{"message":"Populating INIT_OPTS","level":"info","timestamp":"2019-12-17T11:52:19+05:30"}
{"message":"Creating controller","level":"info","timestamp":"2019-12-17T11:52:19+05:30"}
{"message":"Loading express routes","level":"info","timestamp":"2019-12-17T11:52:19+05:30"}
{"message":"Initiating controller","level":"info","timestamp":"2019-12-17T11:52:19+05:30"}
{"message":"Initializing controller","level":"info","timestamp":"2019-12-17T11:52:19+05:30"}
{"message":"Starting the controller object with: { LOGGER: \n   DerivedLogger {\n     _readableState: \n      ReadableState {\n        objectMode: true,\n        highWaterMark: 16,\n        buffer: BufferList { head: null, tail: null, length: 0 },\n        length: 0,\n        pipes: [Array],\n        pipesCount: 2,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: false,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        paused: false,\n        emitClose: true,\n        destroyed: false,\n        defaultEncoding: 'utf8',\n        awaitDrain: 0,\n        readingMore: true,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     domain: null,\n     _events: { prefinish: [Function: prefinish], end: [Array], data: [Array] },\n     _eventsCount: 3,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: true,\n        highWaterMark: 16,\n        finalCalled: false,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        destroyed: false,\n        decodeStrings: true,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: false,\n        bufferProcessing: false,\n        onwrite: [Function],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 6,\n        prefinished: false,\n        errorEmitted: false,\n        emitClose: true,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     _transformState: \n      { afterTransform: [Function: bound afterTransform],\n        needTransform: true,\n        transforming: false,\n        writecb: null,\n        writechunk: null,\n        writeencoding: 'utf8' },\n     silent: undefined,\n     format: Format { options: {} },\n     defaultMeta: { timestamp: '2019-12-17T11:52:19+05:30' },\n     levels: \n      { error: 0,\n        warn: 1,\n        info: 2,\n        http: 3,\n        verbose: 4,\n        debug: 5,\n        silly: 6 },\n     level: 'info',\n     exceptions: ExceptionHandler { logger: [Circular], handlers: Map {} },\n     rejections: RejectionHandler { logger: [Circular], handlers: Map {} },\n     profilers: {},\n     exitOnError: true },\n  PROGRAM_OPTS: \n   Command {\n     commands: [],\n     options: [ [Object], [Object], [Object] ],\n     _execs: Set {},\n     _allowUnknownOption: false,\n     _args: [],\n     _name: 'app',\n     _helpFlags: '-h, --help',\n     _helpDescription: 'output usage information',\n     _helpShortFlag: '-h',\n     _helpLongFlag: '--help',\n     Command: { [Function: Command] super_: [Object] },\n     Option: [Function: Option],\n     CommanderError: [Function: CommanderError],\n     _events: \n      { 'option:verbose': [Function],\n        'option:digitalmarketplace': [Function],\n        'option:rsa': [Function] },\n     _eventsCount: 3,\n     rawArgs: \n      [ '/usr/local/bin/node',\n        '/home/gauravkumar/grv_java/readshare-club/app.js' ],\n     args: [] } }","level":"info","timestamp":"2019-12-17T11:52:19+05:30"}
{"message":"Mysql connection created successfully!","level":"info","timestamp":"2019-12-17T11:52:19+05:30"}
{"message":"Set mysql in controller object","level":"info","timestamp":"2019-12-17T11:52:19+05:30"}
{"message":"Initiating test controller","level":"info","timestamp":"2019-12-17T11:52:19+05:30"}
{"message":"Init all dependencies","level":"info","timestamp":"2019-12-17T11:52:19+05:30"}
{"message":"creating the web server","level":"info","timestamp":"2019-12-17T11:52:19+05:30"}
{"message":"read share service listening on port - 3000","level":"info","timestamp":"2019-12-17T11:52:19+05:30"}
{"message":"Loading init options","level":"info","timestamp":"2019-12-17T11:53:37+05:30"}
{"message":"Populating INIT_OPTS","level":"info","timestamp":"2019-12-17T11:53:37+05:30"}
{"message":"Creating controller","level":"info","timestamp":"2019-12-17T11:53:37+05:30"}
{"message":"Initiating controller","level":"info","timestamp":"2019-12-17T11:53:37+05:30"}
{"message":"Initializing controller","level":"info","timestamp":"2019-12-17T11:53:37+05:30"}
{"message":"Starting the controller object with: { LOGGER: \n   DerivedLogger {\n     _readableState: \n      ReadableState {\n        objectMode: true,\n        highWaterMark: 16,\n        buffer: BufferList { head: null, tail: null, length: 0 },\n        length: 0,\n        pipes: [Array],\n        pipesCount: 2,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: false,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        paused: false,\n        emitClose: true,\n        destroyed: false,\n        defaultEncoding: 'utf8',\n        awaitDrain: 0,\n        readingMore: true,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     domain: null,\n     _events: { prefinish: [Function: prefinish], end: [Array], data: [Array] },\n     _eventsCount: 3,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: true,\n        highWaterMark: 16,\n        finalCalled: false,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        destroyed: false,\n        decodeStrings: true,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: false,\n        bufferProcessing: false,\n        onwrite: [Function],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 5,\n        prefinished: false,\n        errorEmitted: false,\n        emitClose: true,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     _transformState: \n      { afterTransform: [Function: bound afterTransform],\n        needTransform: true,\n        transforming: false,\n        writecb: null,\n        writechunk: null,\n        writeencoding: 'utf8' },\n     silent: undefined,\n     format: Format { options: {} },\n     defaultMeta: { timestamp: '2019-12-17T11:53:37+05:30' },\n     levels: \n      { error: 0,\n        warn: 1,\n        info: 2,\n        http: 3,\n        verbose: 4,\n        debug: 5,\n        silly: 6 },\n     level: 'info',\n     exceptions: ExceptionHandler { logger: [Circular], handlers: Map {} },\n     rejections: RejectionHandler { logger: [Circular], handlers: Map {} },\n     profilers: {},\n     exitOnError: true },\n  PROGRAM_OPTS: \n   Command {\n     commands: [],\n     options: [ [Object], [Object], [Object] ],\n     _execs: Set {},\n     _allowUnknownOption: false,\n     _args: [],\n     _name: 'app',\n     _helpFlags: '-h, --help',\n     _helpDescription: 'output usage information',\n     _helpShortFlag: '-h',\n     _helpLongFlag: '--help',\n     Command: { [Function: Command] super_: [Object] },\n     Option: [Function: Option],\n     CommanderError: [Function: CommanderError],\n     _events: \n      { 'option:verbose': [Function],\n        'option:digitalmarketplace': [Function],\n        'option:rsa': [Function] },\n     _eventsCount: 3,\n     rawArgs: \n      [ '/usr/local/bin/node',\n        '/home/gauravkumar/grv_java/readshare-club/app.js' ],\n     args: [] } }","level":"info","timestamp":"2019-12-17T11:53:37+05:30"}
{"message":"Mysql connection created successfully!","level":"info","timestamp":"2019-12-17T11:53:37+05:30"}
{"message":"Set mysql in controller object","level":"info","timestamp":"2019-12-17T11:53:37+05:30"}
{"message":"Initiating test controller","level":"info","timestamp":"2019-12-17T11:53:37+05:30"}
{"message":"Init all dependencies","level":"info","timestamp":"2019-12-17T11:53:37+05:30"}
{"message":"creating the web server","level":"info","timestamp":"2019-12-17T11:53:37+05:30"}
{"message":"Loading express routes","level":"info","timestamp":"2019-12-17T11:53:37+05:30"}
{"message":"read share service listening on port - 3000","level":"info","timestamp":"2019-12-17T11:53:37+05:30"}
{"message":"Loading init options","level":"info","timestamp":"2019-12-17T12:00:27+05:30"}
{"message":"Populating INIT_OPTS","level":"info","timestamp":"2019-12-17T12:00:27+05:30"}
{"message":"Creating controller","level":"info","timestamp":"2019-12-17T12:00:27+05:30"}
{"message":"Initiating controller","level":"info","timestamp":"2019-12-17T12:00:27+05:30"}
{"message":"Initializing controller","level":"info","timestamp":"2019-12-17T12:00:27+05:30"}
{"message":"Starting the controller object with: { LOGGER: \n   DerivedLogger {\n     _readableState: \n      ReadableState {\n        objectMode: true,\n        highWaterMark: 16,\n        buffer: BufferList { head: null, tail: null, length: 0 },\n        length: 0,\n        pipes: [Array],\n        pipesCount: 2,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: false,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        paused: false,\n        emitClose: true,\n        destroyed: false,\n        defaultEncoding: 'utf8',\n        awaitDrain: 0,\n        readingMore: true,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     domain: null,\n     _events: { prefinish: [Function: prefinish], end: [Array], data: [Array] },\n     _eventsCount: 3,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: true,\n        highWaterMark: 16,\n        finalCalled: false,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        destroyed: false,\n        decodeStrings: true,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: false,\n        bufferProcessing: false,\n        onwrite: [Function],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 5,\n        prefinished: false,\n        errorEmitted: false,\n        emitClose: true,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     _transformState: \n      { afterTransform: [Function: bound afterTransform],\n        needTransform: true,\n        transforming: false,\n        writecb: null,\n        writechunk: null,\n        writeencoding: 'utf8' },\n     silent: undefined,\n     format: Format { options: {} },\n     defaultMeta: { timestamp: '2019-12-17T12:00:27+05:30' },\n     levels: \n      { error: 0,\n        warn: 1,\n        info: 2,\n        http: 3,\n        verbose: 4,\n        debug: 5,\n        silly: 6 },\n     level: 'info',\n     exceptions: ExceptionHandler { logger: [Circular], handlers: Map {} },\n     rejections: RejectionHandler { logger: [Circular], handlers: Map {} },\n     profilers: {},\n     exitOnError: true },\n  PROGRAM_OPTS: \n   Command {\n     commands: [],\n     options: [ [Object], [Object], [Object] ],\n     _execs: Set {},\n     _allowUnknownOption: false,\n     _args: [],\n     _name: 'app',\n     _helpFlags: '-h, --help',\n     _helpDescription: 'output usage information',\n     _helpShortFlag: '-h',\n     _helpLongFlag: '--help',\n     Command: { [Function: Command] super_: [Object] },\n     Option: [Function: Option],\n     CommanderError: [Function: CommanderError],\n     _events: \n      { 'option:verbose': [Function],\n        'option:digitalmarketplace': [Function],\n        'option:rsa': [Function] },\n     _eventsCount: 3,\n     rawArgs: \n      [ '/usr/local/bin/node',\n        '/home/gauravkumar/grv_java/readshare-club/app.js' ],\n     args: [] } }","level":"info","timestamp":"2019-12-17T12:00:27+05:30"}
{"message":"Mysql connection created successfully!","level":"info","timestamp":"2019-12-17T12:00:27+05:30"}
{"message":"Set mysql in controller object","level":"info","timestamp":"2019-12-17T12:00:27+05:30"}
{"message":"Initiating test controller","level":"info","timestamp":"2019-12-17T12:00:27+05:30"}
{"message":"Init all dependencies","level":"info","timestamp":"2019-12-17T12:00:27+05:30"}
{"message":"creating the web server","level":"info","timestamp":"2019-12-17T12:00:27+05:30"}
{"message":"Loading express routes","level":"info","timestamp":"2019-12-17T12:00:27+05:30"}
{"message":"read share service listening on port - 3000","level":"info","timestamp":"2019-12-17T12:00:27+05:30"}
{"message":"Loading init options","level":"info","timestamp":"2019-12-17T12:01:28+05:30"}
{"message":"Populating INIT_OPTS","level":"info","timestamp":"2019-12-17T12:01:28+05:30"}
{"message":"Creating controller","level":"info","timestamp":"2019-12-17T12:01:28+05:30"}
{"message":"Initiating controller","level":"info","timestamp":"2019-12-17T12:01:28+05:30"}
{"message":"Initializing controller","level":"info","timestamp":"2019-12-17T12:01:28+05:30"}
{"message":"Starting the controller object with: { LOGGER: \n   DerivedLogger {\n     _readableState: \n      ReadableState {\n        objectMode: true,\n        highWaterMark: 16,\n        buffer: BufferList { head: null, tail: null, length: 0 },\n        length: 0,\n        pipes: [Array],\n        pipesCount: 2,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: false,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        paused: false,\n        emitClose: true,\n        destroyed: false,\n        defaultEncoding: 'utf8',\n        awaitDrain: 0,\n        readingMore: true,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     domain: null,\n     _events: { prefinish: [Function: prefinish], end: [Array], data: [Array] },\n     _eventsCount: 3,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: true,\n        highWaterMark: 16,\n        finalCalled: false,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        destroyed: false,\n        decodeStrings: true,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: false,\n        bufferProcessing: false,\n        onwrite: [Function],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 5,\n        prefinished: false,\n        errorEmitted: false,\n        emitClose: true,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     _transformState: \n      { afterTransform: [Function: bound afterTransform],\n        needTransform: true,\n        transforming: false,\n        writecb: null,\n        writechunk: null,\n        writeencoding: 'utf8' },\n     silent: undefined,\n     format: Format { options: {} },\n     defaultMeta: { timestamp: '2019-12-17T12:01:28+05:30' },\n     levels: \n      { error: 0,\n        warn: 1,\n        info: 2,\n        http: 3,\n        verbose: 4,\n        debug: 5,\n        silly: 6 },\n     level: 'info',\n     exceptions: ExceptionHandler { logger: [Circular], handlers: Map {} },\n     rejections: RejectionHandler { logger: [Circular], handlers: Map {} },\n     profilers: {},\n     exitOnError: true },\n  PROGRAM_OPTS: \n   Command {\n     commands: [],\n     options: [ [Object], [Object], [Object] ],\n     _execs: Set {},\n     _allowUnknownOption: false,\n     _args: [],\n     _name: 'app',\n     _helpFlags: '-h, --help',\n     _helpDescription: 'output usage information',\n     _helpShortFlag: '-h',\n     _helpLongFlag: '--help',\n     Command: { [Function: Command] super_: [Object] },\n     Option: [Function: Option],\n     CommanderError: [Function: CommanderError],\n     _events: \n      { 'option:verbose': [Function],\n        'option:digitalmarketplace': [Function],\n        'option:rsa': [Function] },\n     _eventsCount: 3,\n     rawArgs: \n      [ '/usr/local/bin/node',\n        '/home/gauravkumar/grv_java/readshare-club/app.js' ],\n     args: [] } }","level":"info","timestamp":"2019-12-17T12:01:28+05:30"}
{"message":"Mysql connection created successfully!","level":"info","timestamp":"2019-12-17T12:01:28+05:30"}
{"message":"Set mysql in controller object","level":"info","timestamp":"2019-12-17T12:01:28+05:30"}
{"message":"Initiating test controller","level":"info","timestamp":"2019-12-17T12:01:28+05:30"}
{"message":"Init all dependencies","level":"info","timestamp":"2019-12-17T12:01:28+05:30"}
{"message":"creating the web server","level":"info","timestamp":"2019-12-17T12:01:28+05:30"}
{"message":"Loading express routes","level":"info","timestamp":"2019-12-17T12:01:28+05:30"}
{"message":"read share service listening on port - 3000","level":"info","timestamp":"2019-12-17T12:01:28+05:30"}
{"message":"Loading init options","level":"info","timestamp":"2019-12-17T12:03:15+05:30"}
{"message":"Populating INIT_OPTS","level":"info","timestamp":"2019-12-17T12:03:15+05:30"}
{"message":"Creating controller","level":"info","timestamp":"2019-12-17T12:03:15+05:30"}
{"message":"Initiating controller","level":"info","timestamp":"2019-12-17T12:03:15+05:30"}
{"message":"Initializing controller","level":"info","timestamp":"2019-12-17T12:03:15+05:30"}
{"message":"Starting the controller object with: { LOGGER: \n   DerivedLogger {\n     _readableState: \n      ReadableState {\n        objectMode: true,\n        highWaterMark: 16,\n        buffer: BufferList { head: null, tail: null, length: 0 },\n        length: 0,\n        pipes: [Array],\n        pipesCount: 2,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: false,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        paused: false,\n        emitClose: true,\n        destroyed: false,\n        defaultEncoding: 'utf8',\n        awaitDrain: 0,\n        readingMore: true,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     domain: null,\n     _events: { prefinish: [Function: prefinish], end: [Array], data: [Array] },\n     _eventsCount: 3,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: true,\n        highWaterMark: 16,\n        finalCalled: false,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        destroyed: false,\n        decodeStrings: true,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: false,\n        bufferProcessing: false,\n        onwrite: [Function],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 5,\n        prefinished: false,\n        errorEmitted: false,\n        emitClose: true,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     _transformState: \n      { afterTransform: [Function: bound afterTransform],\n        needTransform: true,\n        transforming: false,\n        writecb: null,\n        writechunk: null,\n        writeencoding: 'utf8' },\n     silent: undefined,\n     format: Format { options: {} },\n     defaultMeta: { timestamp: '2019-12-17T12:03:15+05:30' },\n     levels: \n      { error: 0,\n        warn: 1,\n        info: 2,\n        http: 3,\n        verbose: 4,\n        debug: 5,\n        silly: 6 },\n     level: 'info',\n     exceptions: ExceptionHandler { logger: [Circular], handlers: Map {} },\n     rejections: RejectionHandler { logger: [Circular], handlers: Map {} },\n     profilers: {},\n     exitOnError: true },\n  PROGRAM_OPTS: \n   Command {\n     commands: [],\n     options: [ [Object], [Object], [Object] ],\n     _execs: Set {},\n     _allowUnknownOption: false,\n     _args: [],\n     _name: 'app',\n     _helpFlags: '-h, --help',\n     _helpDescription: 'output usage information',\n     _helpShortFlag: '-h',\n     _helpLongFlag: '--help',\n     Command: { [Function: Command] super_: [Object] },\n     Option: [Function: Option],\n     CommanderError: [Function: CommanderError],\n     _events: \n      { 'option:verbose': [Function],\n        'option:digitalmarketplace': [Function],\n        'option:rsa': [Function] },\n     _eventsCount: 3,\n     rawArgs: \n      [ '/usr/local/bin/node',\n        '/home/gauravkumar/grv_java/readshare-club/app.js' ],\n     args: [] } }","level":"info","timestamp":"2019-12-17T12:03:15+05:30"}
{"message":"Mysql connection created successfully!","level":"info","timestamp":"2019-12-17T12:03:15+05:30"}
{"message":"Set mysql in controller object","level":"info","timestamp":"2019-12-17T12:03:15+05:30"}
{"message":"Initiating test controller","level":"info","timestamp":"2019-12-17T12:03:15+05:30"}
{"message":"Init all dependencies","level":"info","timestamp":"2019-12-17T12:03:15+05:30"}
{"message":"creating the web server","level":"info","timestamp":"2019-12-17T12:03:15+05:30"}
{"message":"Loading express routes","level":"info","timestamp":"2019-12-17T12:03:15+05:30"}
{"message":"read share service listening on port - 3000","level":"info","timestamp":"2019-12-17T12:03:15+05:30"}
{"message":"Uncaught Exception: Please take action immediately : { Error: Connection lost: The server closed the connection.\n    at Protocol.end (/home/gauravkumar/grv_java/readshare-club/node_modules/mysql/lib/protocol/Protocol.js:112:13)\n    at Socket.<anonymous> (/home/gauravkumar/grv_java/readshare-club/node_modules/mysql/lib/Connection.js:97:28)\n    at Socket.<anonymous> (/home/gauravkumar/grv_java/readshare-club/node_modules/mysql/lib/Connection.js:525:10)\n    at emitNone (events.js:111:20)\n    at Socket.emit (events.js:208:7)\n    at endReadableNT (_stream_readable.js:1064:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9) fatal: true, code: 'PROTOCOL_CONNECTION_LOST' }","level":"error","timestamp":"2019-12-17T12:03:15+05:30"}
{"message":"Loading init options","level":"info","timestamp":"2019-12-18T17:23:23+05:30"}
{"message":"Populating INIT_OPTS","level":"info","timestamp":"2019-12-18T17:23:23+05:30"}
{"message":"Creating controller","level":"info","timestamp":"2019-12-18T17:23:23+05:30"}
{"message":"Initiating controller","level":"info","timestamp":"2019-12-18T17:23:23+05:30"}
{"message":"Initializing controller","level":"info","timestamp":"2019-12-18T17:23:23+05:30"}
{"message":"Starting the controller object with: { LOGGER: \n   DerivedLogger {\n     _readableState: \n      ReadableState {\n        objectMode: true,\n        highWaterMark: 16,\n        buffer: BufferList { head: null, tail: null, length: 0 },\n        length: 0,\n        pipes: [Array],\n        pipesCount: 2,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: false,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        paused: false,\n        emitClose: true,\n        destroyed: false,\n        defaultEncoding: 'utf8',\n        awaitDrain: 0,\n        readingMore: true,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     domain: null,\n     _events: { prefinish: [Function: prefinish], end: [Array], data: [Array] },\n     _eventsCount: 3,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: true,\n        highWaterMark: 16,\n        finalCalled: false,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        destroyed: false,\n        decodeStrings: true,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: false,\n        bufferProcessing: false,\n        onwrite: [Function],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 5,\n        prefinished: false,\n        errorEmitted: false,\n        emitClose: true,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     _transformState: \n      { afterTransform: [Function: bound afterTransform],\n        needTransform: true,\n        transforming: false,\n        writecb: null,\n        writechunk: null,\n        writeencoding: 'utf8' },\n     silent: undefined,\n     format: Format { options: {} },\n     defaultMeta: { timestamp: '2019-12-18T17:23:23+05:30' },\n     levels: \n      { error: 0,\n        warn: 1,\n        info: 2,\n        http: 3,\n        verbose: 4,\n        debug: 5,\n        silly: 6 },\n     level: 'info',\n     exceptions: ExceptionHandler { logger: [Circular], handlers: Map {} },\n     rejections: RejectionHandler { logger: [Circular], handlers: Map {} },\n     profilers: {},\n     exitOnError: true },\n  PROGRAM_OPTS: \n   Command {\n     commands: [],\n     options: [ [Object], [Object], [Object] ],\n     _execs: Set {},\n     _allowUnknownOption: false,\n     _args: [],\n     _name: 'app',\n     _helpFlags: '-h, --help',\n     _helpDescription: 'output usage information',\n     _helpShortFlag: '-h',\n     _helpLongFlag: '--help',\n     Command: { [Function: Command] super_: [Object] },\n     Option: [Function: Option],\n     CommanderError: [Function: CommanderError],\n     _events: \n      { 'option:verbose': [Function],\n        'option:digitalmarketplace': [Function],\n        'option:rsa': [Function] },\n     _eventsCount: 3,\n     rawArgs: \n      [ '/usr/local/bin/node',\n        '/home/gauravkumar/grv_java/readshare-club/app.js' ],\n     args: [] } }","level":"info","timestamp":"2019-12-18T17:23:23+05:30"}
{"message":"Mysql connection created successfully!","level":"info","timestamp":"2019-12-18T17:23:23+05:30"}
{"message":"Set mysql in controller object","level":"info","timestamp":"2019-12-18T17:23:23+05:30"}
{"message":"Initiating test controller","level":"info","timestamp":"2019-12-18T17:23:23+05:30"}
{"message":"Init all dependencies","level":"info","timestamp":"2019-12-18T17:23:23+05:30"}
{"message":"creating the web server","level":"info","timestamp":"2019-12-18T17:23:23+05:30"}
{"message":"Loading express routes","level":"info","timestamp":"2019-12-18T17:23:23+05:30"}
{"message":"read share service listening on port - 3000","level":"info","timestamp":"2019-12-18T17:23:23+05:30"}
{"message":"Loading init options","level":"info","timestamp":"2019-12-18T17:24:06+05:30"}
{"message":"Populating INIT_OPTS","level":"info","timestamp":"2019-12-18T17:24:06+05:30"}
{"message":"Creating controller","level":"info","timestamp":"2019-12-18T17:24:06+05:30"}
{"message":"Initiating controller","level":"info","timestamp":"2019-12-18T17:24:06+05:30"}
{"message":"Initializing controller","level":"info","timestamp":"2019-12-18T17:24:06+05:30"}
{"message":"Starting the controller object with: { LOGGER: \n   DerivedLogger {\n     _readableState: \n      ReadableState {\n        objectMode: true,\n        highWaterMark: 16,\n        buffer: BufferList { head: null, tail: null, length: 0 },\n        length: 0,\n        pipes: [Array],\n        pipesCount: 2,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: false,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        paused: false,\n        emitClose: true,\n        destroyed: false,\n        defaultEncoding: 'utf8',\n        awaitDrain: 0,\n        readingMore: true,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     domain: null,\n     _events: { prefinish: [Function: prefinish], end: [Array], data: [Array] },\n     _eventsCount: 3,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: true,\n        highWaterMark: 16,\n        finalCalled: false,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        destroyed: false,\n        decodeStrings: true,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: false,\n        bufferProcessing: false,\n        onwrite: [Function],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 5,\n        prefinished: false,\n        errorEmitted: false,\n        emitClose: true,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     _transformState: \n      { afterTransform: [Function: bound afterTransform],\n        needTransform: true,\n        transforming: false,\n        writecb: null,\n        writechunk: null,\n        writeencoding: 'utf8' },\n     silent: undefined,\n     format: Format { options: {} },\n     defaultMeta: { timestamp: '2019-12-18T17:24:06+05:30' },\n     levels: \n      { error: 0,\n        warn: 1,\n        info: 2,\n        http: 3,\n        verbose: 4,\n        debug: 5,\n        silly: 6 },\n     level: 'info',\n     exceptions: ExceptionHandler { logger: [Circular], handlers: Map {} },\n     rejections: RejectionHandler { logger: [Circular], handlers: Map {} },\n     profilers: {},\n     exitOnError: true },\n  PROGRAM_OPTS: \n   Command {\n     commands: [],\n     options: [ [Object], [Object], [Object] ],\n     _execs: Set {},\n     _allowUnknownOption: false,\n     _args: [],\n     _name: 'app',\n     _helpFlags: '-h, --help',\n     _helpDescription: 'output usage information',\n     _helpShortFlag: '-h',\n     _helpLongFlag: '--help',\n     Command: { [Function: Command] super_: [Object] },\n     Option: [Function: Option],\n     CommanderError: [Function: CommanderError],\n     _events: \n      { 'option:verbose': [Function],\n        'option:digitalmarketplace': [Function],\n        'option:rsa': [Function] },\n     _eventsCount: 3,\n     rawArgs: \n      [ '/usr/local/bin/node',\n        '/home/gauravkumar/grv_java/readshare-club/app.js' ],\n     args: [] } }","level":"info","timestamp":"2019-12-18T17:24:06+05:30"}
{"message":"Mysql connection created successfully!","level":"info","timestamp":"2019-12-18T17:24:06+05:30"}
{"message":"Set mysql in controller object","level":"info","timestamp":"2019-12-18T17:24:06+05:30"}
{"message":"Initiating test controller","level":"info","timestamp":"2019-12-18T17:24:06+05:30"}
{"message":"Init all dependencies","level":"info","timestamp":"2019-12-18T17:24:06+05:30"}
{"message":"creating the web server","level":"info","timestamp":"2019-12-18T17:24:06+05:30"}
{"message":"Loading express routes","level":"info","timestamp":"2019-12-18T17:24:06+05:30"}
{"message":"read share service listening on port - 3000","level":"info","timestamp":"2019-12-18T17:24:06+05:30"}
{"message":"Loading init options","level":"info","timestamp":"2019-12-18T17:27:44+05:30"}
{"message":"Populating INIT_OPTS","level":"info","timestamp":"2019-12-18T17:27:44+05:30"}
{"message":"Creating controller","level":"info","timestamp":"2019-12-18T17:27:44+05:30"}
{"message":"Initiating controller","level":"info","timestamp":"2019-12-18T17:27:44+05:30"}
{"message":"Initializing controller","level":"info","timestamp":"2019-12-18T17:27:44+05:30"}
{"message":"Starting the controller object with: { LOGGER: \n   DerivedLogger {\n     _readableState: \n      ReadableState {\n        objectMode: true,\n        highWaterMark: 16,\n        buffer: BufferList { head: null, tail: null, length: 0 },\n        length: 0,\n        pipes: [Array],\n        pipesCount: 2,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: false,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        paused: false,\n        emitClose: true,\n        destroyed: false,\n        defaultEncoding: 'utf8',\n        awaitDrain: 0,\n        readingMore: true,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     domain: null,\n     _events: { prefinish: [Function: prefinish], end: [Array], data: [Array] },\n     _eventsCount: 3,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: true,\n        highWaterMark: 16,\n        finalCalled: false,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        destroyed: false,\n        decodeStrings: true,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: false,\n        bufferProcessing: false,\n        onwrite: [Function],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 5,\n        prefinished: false,\n        errorEmitted: false,\n        emitClose: true,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     _transformState: \n      { afterTransform: [Function: bound afterTransform],\n        needTransform: true,\n        transforming: false,\n        writecb: null,\n        writechunk: null,\n        writeencoding: 'utf8' },\n     silent: undefined,\n     format: Format { options: {} },\n     defaultMeta: { timestamp: '2019-12-18T17:27:44+05:30' },\n     levels: \n      { error: 0,\n        warn: 1,\n        info: 2,\n        http: 3,\n        verbose: 4,\n        debug: 5,\n        silly: 6 },\n     level: 'info',\n     exceptions: ExceptionHandler { logger: [Circular], handlers: Map {} },\n     rejections: RejectionHandler { logger: [Circular], handlers: Map {} },\n     profilers: {},\n     exitOnError: true },\n  PROGRAM_OPTS: \n   Command {\n     commands: [],\n     options: [ [Object], [Object], [Object] ],\n     _execs: Set {},\n     _allowUnknownOption: false,\n     _args: [],\n     _name: 'app',\n     _helpFlags: '-h, --help',\n     _helpDescription: 'output usage information',\n     _helpShortFlag: '-h',\n     _helpLongFlag: '--help',\n     Command: { [Function: Command] super_: [Object] },\n     Option: [Function: Option],\n     CommanderError: [Function: CommanderError],\n     _events: \n      { 'option:verbose': [Function],\n        'option:digitalmarketplace': [Function],\n        'option:rsa': [Function] },\n     _eventsCount: 3,\n     rawArgs: \n      [ '/usr/local/bin/node',\n        '/home/gauravkumar/grv_java/readshare-club/app.js' ],\n     args: [] } }","level":"info","timestamp":"2019-12-18T17:27:44+05:30"}
{"message":"Mysql connection created successfully!","level":"info","timestamp":"2019-12-18T17:27:44+05:30"}
{"message":"Set mysql in controller object","level":"info","timestamp":"2019-12-18T17:27:44+05:30"}
{"message":"Initiating test controller","level":"info","timestamp":"2019-12-18T17:27:44+05:30"}
{"message":"Init all dependencies","level":"info","timestamp":"2019-12-18T17:27:44+05:30"}
{"message":"creating the web server","level":"info","timestamp":"2019-12-18T17:27:44+05:30"}
{"message":"Loading express routes","level":"info","timestamp":"2019-12-18T17:27:44+05:30"}
{"message":"read share service listening on port - 3000","level":"info","timestamp":"2019-12-18T17:27:44+05:30"}
{"message":"Loading init options","level":"info","timestamp":"2019-12-18T17:28:54+05:30"}
{"message":"Populating INIT_OPTS","level":"info","timestamp":"2019-12-18T17:28:54+05:30"}
{"message":"Creating controller","level":"info","timestamp":"2019-12-18T17:28:54+05:30"}
{"message":"Initiating controller","level":"info","timestamp":"2019-12-18T17:28:54+05:30"}
{"message":"Initializing controller","level":"info","timestamp":"2019-12-18T17:28:54+05:30"}
{"message":"Starting the controller object with: { LOGGER: \n   DerivedLogger {\n     _readableState: \n      ReadableState {\n        objectMode: true,\n        highWaterMark: 16,\n        buffer: BufferList { head: null, tail: null, length: 0 },\n        length: 0,\n        pipes: [Array],\n        pipesCount: 2,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: false,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        paused: false,\n        emitClose: true,\n        destroyed: false,\n        defaultEncoding: 'utf8',\n        awaitDrain: 0,\n        readingMore: true,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     domain: null,\n     _events: { prefinish: [Function: prefinish], end: [Array], data: [Array] },\n     _eventsCount: 3,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: true,\n        highWaterMark: 16,\n        finalCalled: false,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        destroyed: false,\n        decodeStrings: true,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: false,\n        bufferProcessing: false,\n        onwrite: [Function],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 5,\n        prefinished: false,\n        errorEmitted: false,\n        emitClose: true,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     _transformState: \n      { afterTransform: [Function: bound afterTransform],\n        needTransform: true,\n        transforming: false,\n        writecb: null,\n        writechunk: null,\n        writeencoding: 'utf8' },\n     silent: undefined,\n     format: Format { options: {} },\n     defaultMeta: { timestamp: '2019-12-18T17:28:54+05:30' },\n     levels: \n      { error: 0,\n        warn: 1,\n        info: 2,\n        http: 3,\n        verbose: 4,\n        debug: 5,\n        silly: 6 },\n     level: 'info',\n     exceptions: ExceptionHandler { logger: [Circular], handlers: Map {} },\n     rejections: RejectionHandler { logger: [Circular], handlers: Map {} },\n     profilers: {},\n     exitOnError: true },\n  PROGRAM_OPTS: \n   Command {\n     commands: [],\n     options: [ [Object], [Object], [Object] ],\n     _execs: Set {},\n     _allowUnknownOption: false,\n     _args: [],\n     _name: 'app',\n     _helpFlags: '-h, --help',\n     _helpDescription: 'output usage information',\n     _helpShortFlag: '-h',\n     _helpLongFlag: '--help',\n     Command: { [Function: Command] super_: [Object] },\n     Option: [Function: Option],\n     CommanderError: [Function: CommanderError],\n     _events: \n      { 'option:verbose': [Function],\n        'option:digitalmarketplace': [Function],\n        'option:rsa': [Function] },\n     _eventsCount: 3,\n     rawArgs: \n      [ '/usr/local/bin/node',\n        '/home/gauravkumar/grv_java/readshare-club/app.js' ],\n     args: [] } }","level":"info","timestamp":"2019-12-18T17:28:54+05:30"}
{"message":"Mysql connection created successfully!","level":"info","timestamp":"2019-12-18T17:28:54+05:30"}
{"message":"Set mysql in controller object","level":"info","timestamp":"2019-12-18T17:28:54+05:30"}
{"message":"Initiating test controller","level":"info","timestamp":"2019-12-18T17:28:54+05:30"}
{"message":"Init all dependencies","level":"info","timestamp":"2019-12-18T17:28:54+05:30"}
{"message":"creating the web server","level":"info","timestamp":"2019-12-18T17:28:54+05:30"}
{"message":"Loading express routes","level":"info","timestamp":"2019-12-18T17:28:54+05:30"}
{"message":"read share service listening on port - 3000","level":"info","timestamp":"2019-12-18T17:28:54+05:30"}
{"message":"Loading init options","level":"info","timestamp":"2019-12-18T17:29:33+05:30"}
{"message":"Populating INIT_OPTS","level":"info","timestamp":"2019-12-18T17:29:33+05:30"}
{"message":"Creating controller","level":"info","timestamp":"2019-12-18T17:29:33+05:30"}
{"message":"Initiating controller","level":"info","timestamp":"2019-12-18T17:29:33+05:30"}
{"message":"Initializing controller","level":"info","timestamp":"2019-12-18T17:29:33+05:30"}
{"message":"Starting the controller object with: { LOGGER: \n   DerivedLogger {\n     _readableState: \n      ReadableState {\n        objectMode: true,\n        highWaterMark: 16,\n        buffer: BufferList { head: null, tail: null, length: 0 },\n        length: 0,\n        pipes: [Array],\n        pipesCount: 2,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: false,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        paused: false,\n        emitClose: true,\n        destroyed: false,\n        defaultEncoding: 'utf8',\n        awaitDrain: 0,\n        readingMore: true,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     domain: null,\n     _events: { prefinish: [Function: prefinish], end: [Array], data: [Array] },\n     _eventsCount: 3,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: true,\n        highWaterMark: 16,\n        finalCalled: false,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        destroyed: false,\n        decodeStrings: true,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: false,\n        bufferProcessing: false,\n        onwrite: [Function],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 5,\n        prefinished: false,\n        errorEmitted: false,\n        emitClose: true,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     _transformState: \n      { afterTransform: [Function: bound afterTransform],\n        needTransform: true,\n        transforming: false,\n        writecb: null,\n        writechunk: null,\n        writeencoding: 'utf8' },\n     silent: undefined,\n     format: Format { options: {} },\n     defaultMeta: { timestamp: '2019-12-18T17:29:33+05:30' },\n     levels: \n      { error: 0,\n        warn: 1,\n        info: 2,\n        http: 3,\n        verbose: 4,\n        debug: 5,\n        silly: 6 },\n     level: 'info',\n     exceptions: ExceptionHandler { logger: [Circular], handlers: Map {} },\n     rejections: RejectionHandler { logger: [Circular], handlers: Map {} },\n     profilers: {},\n     exitOnError: true },\n  PROGRAM_OPTS: \n   Command {\n     commands: [],\n     options: [ [Object], [Object], [Object] ],\n     _execs: Set {},\n     _allowUnknownOption: false,\n     _args: [],\n     _name: 'app',\n     _helpFlags: '-h, --help',\n     _helpDescription: 'output usage information',\n     _helpShortFlag: '-h',\n     _helpLongFlag: '--help',\n     Command: { [Function: Command] super_: [Object] },\n     Option: [Function: Option],\n     CommanderError: [Function: CommanderError],\n     _events: \n      { 'option:verbose': [Function],\n        'option:digitalmarketplace': [Function],\n        'option:rsa': [Function] },\n     _eventsCount: 3,\n     rawArgs: \n      [ '/usr/local/bin/node',\n        '/home/gauravkumar/grv_java/readshare-club/app.js' ],\n     args: [] } }","level":"info","timestamp":"2019-12-18T17:29:33+05:30"}
{"message":"Mysql connection created successfully!","level":"info","timestamp":"2019-12-18T17:29:33+05:30"}
{"message":"Set mysql in controller object","level":"info","timestamp":"2019-12-18T17:29:33+05:30"}
{"message":"Initiating test controller","level":"info","timestamp":"2019-12-18T17:29:33+05:30"}
{"message":"Init all dependencies","level":"info","timestamp":"2019-12-18T17:29:33+05:30"}
{"message":"creating the web server","level":"info","timestamp":"2019-12-18T17:29:33+05:30"}
{"message":"Loading express routes","level":"info","timestamp":"2019-12-18T17:29:33+05:30"}
{"message":"read share service listening on port - 3000","level":"info","timestamp":"2019-12-18T17:29:33+05:30"}
{"message":"Loading init options","level":"info","timestamp":"2019-12-18T17:30:00+05:30"}
{"message":"Populating INIT_OPTS","level":"info","timestamp":"2019-12-18T17:30:00+05:30"}
{"message":"Creating controller","level":"info","timestamp":"2019-12-18T17:30:00+05:30"}
{"message":"Initiating controller","level":"info","timestamp":"2019-12-18T17:30:00+05:30"}
{"message":"Initializing controller","level":"info","timestamp":"2019-12-18T17:30:00+05:30"}
{"message":"Starting the controller object with: { LOGGER: \n   DerivedLogger {\n     _readableState: \n      ReadableState {\n        objectMode: true,\n        highWaterMark: 16,\n        buffer: BufferList { head: null, tail: null, length: 0 },\n        length: 0,\n        pipes: [Array],\n        pipesCount: 2,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: false,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        paused: false,\n        emitClose: true,\n        destroyed: false,\n        defaultEncoding: 'utf8',\n        awaitDrain: 0,\n        readingMore: true,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     domain: null,\n     _events: { prefinish: [Function: prefinish], end: [Array], data: [Array] },\n     _eventsCount: 3,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: true,\n        highWaterMark: 16,\n        finalCalled: false,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        destroyed: false,\n        decodeStrings: true,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: false,\n        bufferProcessing: false,\n        onwrite: [Function],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 5,\n        prefinished: false,\n        errorEmitted: false,\n        emitClose: true,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     _transformState: \n      { afterTransform: [Function: bound afterTransform],\n        needTransform: true,\n        transforming: false,\n        writecb: null,\n        writechunk: null,\n        writeencoding: 'utf8' },\n     silent: undefined,\n     format: Format { options: {} },\n     defaultMeta: { timestamp: '2019-12-18T17:30:00+05:30' },\n     levels: \n      { error: 0,\n        warn: 1,\n        info: 2,\n        http: 3,\n        verbose: 4,\n        debug: 5,\n        silly: 6 },\n     level: 'info',\n     exceptions: ExceptionHandler { logger: [Circular], handlers: Map {} },\n     rejections: RejectionHandler { logger: [Circular], handlers: Map {} },\n     profilers: {},\n     exitOnError: true },\n  PROGRAM_OPTS: \n   Command {\n     commands: [],\n     options: [ [Object], [Object], [Object] ],\n     _execs: Set {},\n     _allowUnknownOption: false,\n     _args: [],\n     _name: 'app',\n     _helpFlags: '-h, --help',\n     _helpDescription: 'output usage information',\n     _helpShortFlag: '-h',\n     _helpLongFlag: '--help',\n     Command: { [Function: Command] super_: [Object] },\n     Option: [Function: Option],\n     CommanderError: [Function: CommanderError],\n     _events: \n      { 'option:verbose': [Function],\n        'option:digitalmarketplace': [Function],\n        'option:rsa': [Function] },\n     _eventsCount: 3,\n     rawArgs: \n      [ '/usr/local/bin/node',\n        '/home/gauravkumar/grv_java/readshare-club/app.js' ],\n     args: [] } }","level":"info","timestamp":"2019-12-18T17:30:00+05:30"}
{"message":"Mysql connection created successfully!","level":"info","timestamp":"2019-12-18T17:30:00+05:30"}
{"message":"Set mysql in controller object","level":"info","timestamp":"2019-12-18T17:30:00+05:30"}
{"message":"Initiating test controller","level":"info","timestamp":"2019-12-18T17:30:00+05:30"}
{"message":"Init all dependencies","level":"info","timestamp":"2019-12-18T17:30:00+05:30"}
{"message":"creating the web server","level":"info","timestamp":"2019-12-18T17:30:00+05:30"}
{"message":"Loading express routes","level":"info","timestamp":"2019-12-18T17:30:00+05:30"}
{"message":"read share service listening on port - 3000","level":"info","timestamp":"2019-12-18T17:30:00+05:30"}
{"message":"Loading init options","level":"info","timestamp":"2019-12-18T17:30:27+05:30"}
{"message":"Populating INIT_OPTS","level":"info","timestamp":"2019-12-18T17:30:27+05:30"}
{"message":"Creating controller","level":"info","timestamp":"2019-12-18T17:30:27+05:30"}
{"message":"Initiating controller","level":"info","timestamp":"2019-12-18T17:30:27+05:30"}
{"message":"Initializing controller","level":"info","timestamp":"2019-12-18T17:30:27+05:30"}
{"message":"Starting the controller object with: { LOGGER: \n   DerivedLogger {\n     _readableState: \n      ReadableState {\n        objectMode: true,\n        highWaterMark: 16,\n        buffer: BufferList { head: null, tail: null, length: 0 },\n        length: 0,\n        pipes: [Array],\n        pipesCount: 2,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: false,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        paused: false,\n        emitClose: true,\n        destroyed: false,\n        defaultEncoding: 'utf8',\n        awaitDrain: 0,\n        readingMore: true,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     domain: null,\n     _events: { prefinish: [Function: prefinish], end: [Array], data: [Array] },\n     _eventsCount: 3,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: true,\n        highWaterMark: 16,\n        finalCalled: false,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        destroyed: false,\n        decodeStrings: true,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: false,\n        bufferProcessing: false,\n        onwrite: [Function],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 5,\n        prefinished: false,\n        errorEmitted: false,\n        emitClose: true,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     _transformState: \n      { afterTransform: [Function: bound afterTransform],\n        needTransform: true,\n        transforming: false,\n        writecb: null,\n        writechunk: null,\n        writeencoding: 'utf8' },\n     silent: undefined,\n     format: Format { options: {} },\n     defaultMeta: { timestamp: '2019-12-18T17:30:27+05:30' },\n     levels: \n      { error: 0,\n        warn: 1,\n        info: 2,\n        http: 3,\n        verbose: 4,\n        debug: 5,\n        silly: 6 },\n     level: 'info',\n     exceptions: ExceptionHandler { logger: [Circular], handlers: Map {} },\n     rejections: RejectionHandler { logger: [Circular], handlers: Map {} },\n     profilers: {},\n     exitOnError: true },\n  PROGRAM_OPTS: \n   Command {\n     commands: [],\n     options: [ [Object], [Object], [Object] ],\n     _execs: Set {},\n     _allowUnknownOption: false,\n     _args: [],\n     _name: 'app',\n     _helpFlags: '-h, --help',\n     _helpDescription: 'output usage information',\n     _helpShortFlag: '-h',\n     _helpLongFlag: '--help',\n     Command: { [Function: Command] super_: [Object] },\n     Option: [Function: Option],\n     CommanderError: [Function: CommanderError],\n     _events: \n      { 'option:verbose': [Function],\n        'option:digitalmarketplace': [Function],\n        'option:rsa': [Function] },\n     _eventsCount: 3,\n     rawArgs: \n      [ '/usr/local/bin/node',\n        '/home/gauravkumar/grv_java/readshare-club/app.js' ],\n     args: [] } }","level":"info","timestamp":"2019-12-18T17:30:27+05:30"}
{"message":"Mysql connection created successfully!","level":"info","timestamp":"2019-12-18T17:30:27+05:30"}
{"message":"Set mysql in controller object","level":"info","timestamp":"2019-12-18T17:30:27+05:30"}
{"message":"Initiating test controller","level":"info","timestamp":"2019-12-18T17:30:27+05:30"}
{"message":"Init all dependencies","level":"info","timestamp":"2019-12-18T17:30:27+05:30"}
{"message":"creating the web server","level":"info","timestamp":"2019-12-18T17:30:27+05:30"}
{"message":"Loading express routes","level":"info","timestamp":"2019-12-18T17:30:27+05:30"}
{"message":"read share service listening on port - 3000","level":"info","timestamp":"2019-12-18T17:30:27+05:30"}
{"message":"Loading init options","level":"info","timestamp":"2019-12-18T17:32:47+05:30"}
{"message":"Populating INIT_OPTS","level":"info","timestamp":"2019-12-18T17:32:47+05:30"}
{"message":"Creating controller","level":"info","timestamp":"2019-12-18T17:32:47+05:30"}
{"message":"Initiating controller","level":"info","timestamp":"2019-12-18T17:32:47+05:30"}
{"message":"Initializing controller","level":"info","timestamp":"2019-12-18T17:32:47+05:30"}
{"message":"Starting the controller object with: { LOGGER: \n   DerivedLogger {\n     _readableState: \n      ReadableState {\n        objectMode: true,\n        highWaterMark: 16,\n        buffer: BufferList { head: null, tail: null, length: 0 },\n        length: 0,\n        pipes: [Array],\n        pipesCount: 2,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: false,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        paused: false,\n        emitClose: true,\n        destroyed: false,\n        defaultEncoding: 'utf8',\n        awaitDrain: 0,\n        readingMore: true,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     domain: null,\n     _events: { prefinish: [Function: prefinish], end: [Array], data: [Array] },\n     _eventsCount: 3,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: true,\n        highWaterMark: 16,\n        finalCalled: false,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        destroyed: false,\n        decodeStrings: true,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: false,\n        bufferProcessing: false,\n        onwrite: [Function],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 5,\n        prefinished: false,\n        errorEmitted: false,\n        emitClose: true,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     _transformState: \n      { afterTransform: [Function: bound afterTransform],\n        needTransform: true,\n        transforming: false,\n        writecb: null,\n        writechunk: null,\n        writeencoding: 'utf8' },\n     silent: undefined,\n     format: Format { options: {} },\n     defaultMeta: { timestamp: '2019-12-18T17:32:47+05:30' },\n     levels: \n      { error: 0,\n        warn: 1,\n        info: 2,\n        http: 3,\n        verbose: 4,\n        debug: 5,\n        silly: 6 },\n     level: 'info',\n     exceptions: ExceptionHandler { logger: [Circular], handlers: Map {} },\n     rejections: RejectionHandler { logger: [Circular], handlers: Map {} },\n     profilers: {},\n     exitOnError: true },\n  PROGRAM_OPTS: \n   Command {\n     commands: [],\n     options: [ [Object], [Object], [Object] ],\n     _execs: Set {},\n     _allowUnknownOption: false,\n     _args: [],\n     _name: 'app',\n     _helpFlags: '-h, --help',\n     _helpDescription: 'output usage information',\n     _helpShortFlag: '-h',\n     _helpLongFlag: '--help',\n     Command: { [Function: Command] super_: [Object] },\n     Option: [Function: Option],\n     CommanderError: [Function: CommanderError],\n     _events: \n      { 'option:verbose': [Function],\n        'option:digitalmarketplace': [Function],\n        'option:rsa': [Function] },\n     _eventsCount: 3,\n     rawArgs: \n      [ '/usr/local/bin/node',\n        '/home/gauravkumar/grv_java/readshare-club/app.js' ],\n     args: [] } }","level":"info","timestamp":"2019-12-18T17:32:47+05:30"}
{"message":"Mysql connection created successfully!","level":"info","timestamp":"2019-12-18T17:32:47+05:30"}
{"message":"Set mysql in controller object","level":"info","timestamp":"2019-12-18T17:32:47+05:30"}
{"message":"Initiating test controller","level":"info","timestamp":"2019-12-18T17:32:47+05:30"}
{"message":"Init all dependencies","level":"info","timestamp":"2019-12-18T17:32:47+05:30"}
{"message":"creating the web server","level":"info","timestamp":"2019-12-18T17:32:47+05:30"}
{"message":"Loading express routes","level":"info","timestamp":"2019-12-18T17:32:47+05:30"}
{"message":"read share service listening on port - 3000","level":"info","timestamp":"2019-12-18T17:32:47+05:30"}
{"message":"Uncaught Exception: Please take action immediately : ReferenceError: csonsole is not defined\n    at Query.<anonymous> (/home/gauravkumar/grv_java/readshare-club/controller/testController.js:28:13)\n    at Query.<anonymous> (/home/gauravkumar/grv_java/readshare-club/node_modules/mysql/lib/Connection.js:525:10)\n    at Query._callback (/home/gauravkumar/grv_java/readshare-club/node_modules/mysql/lib/Connection.js:491:16)\n    at Query.Sequence.end (/home/gauravkumar/grv_java/readshare-club/node_modules/mysql/lib/protocol/sequences/Sequence.js:83:24)\n    at Query._handleFinalResultPacket (/home/gauravkumar/grv_java/readshare-club/node_modules/mysql/lib/protocol/sequences/Query.js:139:8)\n    at Query.EofPacket (/home/gauravkumar/grv_java/readshare-club/node_modules/mysql/lib/protocol/sequences/Query.js:123:8)\n    at Protocol._parsePacket (/home/gauravkumar/grv_java/readshare-club/node_modules/mysql/lib/protocol/Protocol.js:291:23)\n    at Parser._parsePacket (/home/gauravkumar/grv_java/readshare-club/node_modules/mysql/lib/protocol/Parser.js:433:10)\n    at Parser.write (/home/gauravkumar/grv_java/readshare-club/node_modules/mysql/lib/protocol/Parser.js:43:10)\n    at Protocol.write (/home/gauravkumar/grv_java/readshare-club/node_modules/mysql/lib/protocol/Protocol.js:38:16)","level":"error","timestamp":"2019-12-18T17:32:47+05:30"}
{"message":"Loading init options","level":"info","timestamp":"2019-12-18T17:33:47+05:30"}
{"message":"Populating INIT_OPTS","level":"info","timestamp":"2019-12-18T17:33:47+05:30"}
{"message":"Creating controller","level":"info","timestamp":"2019-12-18T17:33:47+05:30"}
{"message":"Initiating controller","level":"info","timestamp":"2019-12-18T17:33:47+05:30"}
{"message":"Initializing controller","level":"info","timestamp":"2019-12-18T17:33:47+05:30"}
{"message":"Starting the controller object with: { LOGGER: \n   DerivedLogger {\n     _readableState: \n      ReadableState {\n        objectMode: true,\n        highWaterMark: 16,\n        buffer: BufferList { head: null, tail: null, length: 0 },\n        length: 0,\n        pipes: [Array],\n        pipesCount: 2,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: false,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        paused: false,\n        emitClose: true,\n        destroyed: false,\n        defaultEncoding: 'utf8',\n        awaitDrain: 0,\n        readingMore: true,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     domain: null,\n     _events: { prefinish: [Function: prefinish], end: [Array], data: [Array] },\n     _eventsCount: 3,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: true,\n        highWaterMark: 16,\n        finalCalled: false,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        destroyed: false,\n        decodeStrings: true,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: false,\n        bufferProcessing: false,\n        onwrite: [Function],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 5,\n        prefinished: false,\n        errorEmitted: false,\n        emitClose: true,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     _transformState: \n      { afterTransform: [Function: bound afterTransform],\n        needTransform: true,\n        transforming: false,\n        writecb: null,\n        writechunk: null,\n        writeencoding: 'utf8' },\n     silent: undefined,\n     format: Format { options: {} },\n     defaultMeta: { timestamp: '2019-12-18T17:33:47+05:30' },\n     levels: \n      { error: 0,\n        warn: 1,\n        info: 2,\n        http: 3,\n        verbose: 4,\n        debug: 5,\n        silly: 6 },\n     level: 'info',\n     exceptions: ExceptionHandler { logger: [Circular], handlers: Map {} },\n     rejections: RejectionHandler { logger: [Circular], handlers: Map {} },\n     profilers: {},\n     exitOnError: true },\n  PROGRAM_OPTS: \n   Command {\n     commands: [],\n     options: [ [Object], [Object], [Object] ],\n     _execs: Set {},\n     _allowUnknownOption: false,\n     _args: [],\n     _name: 'app',\n     _helpFlags: '-h, --help',\n     _helpDescription: 'output usage information',\n     _helpShortFlag: '-h',\n     _helpLongFlag: '--help',\n     Command: { [Function: Command] super_: [Object] },\n     Option: [Function: Option],\n     CommanderError: [Function: CommanderError],\n     _events: \n      { 'option:verbose': [Function],\n        'option:digitalmarketplace': [Function],\n        'option:rsa': [Function] },\n     _eventsCount: 3,\n     rawArgs: \n      [ '/usr/local/bin/node',\n        '/home/gauravkumar/grv_java/readshare-club/app.js' ],\n     args: [] } }","level":"info","timestamp":"2019-12-18T17:33:47+05:30"}
{"message":"Mysql connection created successfully!","level":"info","timestamp":"2019-12-18T17:33:47+05:30"}
{"message":"Set mysql in controller object","level":"info","timestamp":"2019-12-18T17:33:47+05:30"}
{"message":"Initiating test controller","level":"info","timestamp":"2019-12-18T17:33:47+05:30"}
{"message":"Init all dependencies","level":"info","timestamp":"2019-12-18T17:33:47+05:30"}
{"message":"creating the web server","level":"info","timestamp":"2019-12-18T17:33:47+05:30"}
{"message":"Loading express routes","level":"info","timestamp":"2019-12-18T17:33:47+05:30"}
{"message":"read share service listening on port - 3000","level":"info","timestamp":"2019-12-18T17:33:47+05:30"}
{"message":"Loading init options","level":"info","timestamp":"2019-12-18T17:34:30+05:30"}
{"message":"Populating INIT_OPTS","level":"info","timestamp":"2019-12-18T17:34:30+05:30"}
{"message":"Creating controller","level":"info","timestamp":"2019-12-18T17:34:30+05:30"}
{"message":"Initiating controller","level":"info","timestamp":"2019-12-18T17:34:30+05:30"}
{"message":"Initializing controller","level":"info","timestamp":"2019-12-18T17:34:30+05:30"}
{"message":"Starting the controller object with: { LOGGER: \n   DerivedLogger {\n     _readableState: \n      ReadableState {\n        objectMode: true,\n        highWaterMark: 16,\n        buffer: BufferList { head: null, tail: null, length: 0 },\n        length: 0,\n        pipes: [Array],\n        pipesCount: 2,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: false,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        paused: false,\n        emitClose: true,\n        destroyed: false,\n        defaultEncoding: 'utf8',\n        awaitDrain: 0,\n        readingMore: true,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     domain: null,\n     _events: { prefinish: [Function: prefinish], end: [Array], data: [Array] },\n     _eventsCount: 3,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: true,\n        highWaterMark: 16,\n        finalCalled: false,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        destroyed: false,\n        decodeStrings: true,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: false,\n        bufferProcessing: false,\n        onwrite: [Function],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 5,\n        prefinished: false,\n        errorEmitted: false,\n        emitClose: true,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     _transformState: \n      { afterTransform: [Function: bound afterTransform],\n        needTransform: true,\n        transforming: false,\n        writecb: null,\n        writechunk: null,\n        writeencoding: 'utf8' },\n     silent: undefined,\n     format: Format { options: {} },\n     defaultMeta: { timestamp: '2019-12-18T17:34:30+05:30' },\n     levels: \n      { error: 0,\n        warn: 1,\n        info: 2,\n        http: 3,\n        verbose: 4,\n        debug: 5,\n        silly: 6 },\n     level: 'info',\n     exceptions: ExceptionHandler { logger: [Circular], handlers: Map {} },\n     rejections: RejectionHandler { logger: [Circular], handlers: Map {} },\n     profilers: {},\n     exitOnError: true },\n  PROGRAM_OPTS: \n   Command {\n     commands: [],\n     options: [ [Object], [Object], [Object] ],\n     _execs: Set {},\n     _allowUnknownOption: false,\n     _args: [],\n     _name: 'app',\n     _helpFlags: '-h, --help',\n     _helpDescription: 'output usage information',\n     _helpShortFlag: '-h',\n     _helpLongFlag: '--help',\n     Command: { [Function: Command] super_: [Object] },\n     Option: [Function: Option],\n     CommanderError: [Function: CommanderError],\n     _events: \n      { 'option:verbose': [Function],\n        'option:digitalmarketplace': [Function],\n        'option:rsa': [Function] },\n     _eventsCount: 3,\n     rawArgs: \n      [ '/usr/local/bin/node',\n        '/home/gauravkumar/grv_java/readshare-club/app.js' ],\n     args: [] } }","level":"info","timestamp":"2019-12-18T17:34:30+05:30"}
{"message":"Mysql connection created successfully!","level":"info","timestamp":"2019-12-18T17:34:30+05:30"}
{"message":"Set mysql in controller object","level":"info","timestamp":"2019-12-18T17:34:30+05:30"}
{"message":"Initiating test controller","level":"info","timestamp":"2019-12-18T17:34:30+05:30"}
{"message":"Init all dependencies","level":"info","timestamp":"2019-12-18T17:34:30+05:30"}
{"message":"creating the web server","level":"info","timestamp":"2019-12-18T17:34:30+05:30"}
{"message":"Loading express routes","level":"info","timestamp":"2019-12-18T17:34:30+05:30"}
{"message":"read share service listening on port - 3000","level":"info","timestamp":"2019-12-18T17:34:30+05:30"}
{"message":"Loading init options","level":"info","timestamp":"2019-12-18T17:34:50+05:30"}
{"message":"Populating INIT_OPTS","level":"info","timestamp":"2019-12-18T17:34:50+05:30"}
{"message":"Creating controller","level":"info","timestamp":"2019-12-18T17:34:50+05:30"}
{"message":"Initiating controller","level":"info","timestamp":"2019-12-18T17:34:50+05:30"}
{"message":"Initializing controller","level":"info","timestamp":"2019-12-18T17:34:50+05:30"}
{"message":"Starting the controller object with: { LOGGER: \n   DerivedLogger {\n     _readableState: \n      ReadableState {\n        objectMode: true,\n        highWaterMark: 16,\n        buffer: BufferList { head: null, tail: null, length: 0 },\n        length: 0,\n        pipes: [Array],\n        pipesCount: 2,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: false,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        paused: false,\n        emitClose: true,\n        destroyed: false,\n        defaultEncoding: 'utf8',\n        awaitDrain: 0,\n        readingMore: true,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     domain: null,\n     _events: { prefinish: [Function: prefinish], end: [Array], data: [Array] },\n     _eventsCount: 3,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: true,\n        highWaterMark: 16,\n        finalCalled: false,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        destroyed: false,\n        decodeStrings: true,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: false,\n        bufferProcessing: false,\n        onwrite: [Function],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 5,\n        prefinished: false,\n        errorEmitted: false,\n        emitClose: true,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     _transformState: \n      { afterTransform: [Function: bound afterTransform],\n        needTransform: true,\n        transforming: false,\n        writecb: null,\n        writechunk: null,\n        writeencoding: 'utf8' },\n     silent: undefined,\n     format: Format { options: {} },\n     defaultMeta: { timestamp: '2019-12-18T17:34:50+05:30' },\n     levels: \n      { error: 0,\n        warn: 1,\n        info: 2,\n        http: 3,\n        verbose: 4,\n        debug: 5,\n        silly: 6 },\n     level: 'info',\n     exceptions: ExceptionHandler { logger: [Circular], handlers: Map {} },\n     rejections: RejectionHandler { logger: [Circular], handlers: Map {} },\n     profilers: {},\n     exitOnError: true },\n  PROGRAM_OPTS: \n   Command {\n     commands: [],\n     options: [ [Object], [Object], [Object] ],\n     _execs: Set {},\n     _allowUnknownOption: false,\n     _args: [],\n     _name: 'app',\n     _helpFlags: '-h, --help',\n     _helpDescription: 'output usage information',\n     _helpShortFlag: '-h',\n     _helpLongFlag: '--help',\n     Command: { [Function: Command] super_: [Object] },\n     Option: [Function: Option],\n     CommanderError: [Function: CommanderError],\n     _events: \n      { 'option:verbose': [Function],\n        'option:digitalmarketplace': [Function],\n        'option:rsa': [Function] },\n     _eventsCount: 3,\n     rawArgs: \n      [ '/usr/local/bin/node',\n        '/home/gauravkumar/grv_java/readshare-club/app.js' ],\n     args: [] } }","level":"info","timestamp":"2019-12-18T17:34:50+05:30"}
{"message":"Mysql connection created successfully!","level":"info","timestamp":"2019-12-18T17:34:50+05:30"}
{"message":"Set mysql in controller object","level":"info","timestamp":"2019-12-18T17:34:50+05:30"}
{"message":"Initiating test controller","level":"info","timestamp":"2019-12-18T17:34:50+05:30"}
{"message":"Init all dependencies","level":"info","timestamp":"2019-12-18T17:34:50+05:30"}
{"message":"creating the web server","level":"info","timestamp":"2019-12-18T17:34:50+05:30"}
{"message":"Loading express routes","level":"info","timestamp":"2019-12-18T17:34:50+05:30"}
{"message":"read share service listening on port - 3000","level":"info","timestamp":"2019-12-18T17:34:50+05:30"}
{"message":"Loading init options","level":"info","timestamp":"2019-12-18T17:36:01+05:30"}
{"message":"Populating INIT_OPTS","level":"info","timestamp":"2019-12-18T17:36:01+05:30"}
{"message":"Creating controller","level":"info","timestamp":"2019-12-18T17:36:01+05:30"}
{"message":"Initiating controller","level":"info","timestamp":"2019-12-18T17:36:01+05:30"}
{"message":"Initializing controller","level":"info","timestamp":"2019-12-18T17:36:01+05:30"}
{"message":"Starting the controller object with: { LOGGER: \n   DerivedLogger {\n     _readableState: \n      ReadableState {\n        objectMode: true,\n        highWaterMark: 16,\n        buffer: BufferList { head: null, tail: null, length: 0 },\n        length: 0,\n        pipes: [Array],\n        pipesCount: 2,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: false,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        paused: false,\n        emitClose: true,\n        destroyed: false,\n        defaultEncoding: 'utf8',\n        awaitDrain: 0,\n        readingMore: true,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     domain: null,\n     _events: { prefinish: [Function: prefinish], end: [Array], data: [Array] },\n     _eventsCount: 3,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: true,\n        highWaterMark: 16,\n        finalCalled: false,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        destroyed: false,\n        decodeStrings: true,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: false,\n        bufferProcessing: false,\n        onwrite: [Function],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 5,\n        prefinished: false,\n        errorEmitted: false,\n        emitClose: true,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     _transformState: \n      { afterTransform: [Function: bound afterTransform],\n        needTransform: true,\n        transforming: false,\n        writecb: null,\n        writechunk: null,\n        writeencoding: 'utf8' },\n     silent: undefined,\n     format: Format { options: {} },\n     defaultMeta: { timestamp: '2019-12-18T17:36:01+05:30' },\n     levels: \n      { error: 0,\n        warn: 1,\n        info: 2,\n        http: 3,\n        verbose: 4,\n        debug: 5,\n        silly: 6 },\n     level: 'info',\n     exceptions: ExceptionHandler { logger: [Circular], handlers: Map {} },\n     rejections: RejectionHandler { logger: [Circular], handlers: Map {} },\n     profilers: {},\n     exitOnError: true },\n  PROGRAM_OPTS: \n   Command {\n     commands: [],\n     options: [ [Object], [Object], [Object] ],\n     _execs: Set {},\n     _allowUnknownOption: false,\n     _args: [],\n     _name: 'app',\n     _helpFlags: '-h, --help',\n     _helpDescription: 'output usage information',\n     _helpShortFlag: '-h',\n     _helpLongFlag: '--help',\n     Command: { [Function: Command] super_: [Object] },\n     Option: [Function: Option],\n     CommanderError: [Function: CommanderError],\n     _events: \n      { 'option:verbose': [Function],\n        'option:digitalmarketplace': [Function],\n        'option:rsa': [Function] },\n     _eventsCount: 3,\n     rawArgs: \n      [ '/usr/local/bin/node',\n        '/home/gauravkumar/grv_java/readshare-club/app.js' ],\n     args: [] } }","level":"info","timestamp":"2019-12-18T17:36:01+05:30"}
{"message":"Mysql connection created successfully!","level":"info","timestamp":"2019-12-18T17:36:01+05:30"}
{"message":"Set mysql in controller object","level":"info","timestamp":"2019-12-18T17:36:01+05:30"}
{"message":"Initiating test controller","level":"info","timestamp":"2019-12-18T17:36:01+05:30"}
{"message":"Init all dependencies","level":"info","timestamp":"2019-12-18T17:36:01+05:30"}
{"message":"creating the web server","level":"info","timestamp":"2019-12-18T17:36:01+05:30"}
{"message":"Loading express routes","level":"info","timestamp":"2019-12-18T17:36:01+05:30"}
{"message":"read share service listening on port - 3000","level":"info","timestamp":"2019-12-18T17:36:01+05:30"}
{"message":"Loading init options","level":"info","timestamp":"2019-12-18T17:36:59+05:30"}
{"message":"Populating INIT_OPTS","level":"info","timestamp":"2019-12-18T17:36:59+05:30"}
{"message":"Creating controller","level":"info","timestamp":"2019-12-18T17:36:59+05:30"}
{"message":"Initiating controller","level":"info","timestamp":"2019-12-18T17:36:59+05:30"}
{"message":"Initializing controller","level":"info","timestamp":"2019-12-18T17:36:59+05:30"}
{"message":"Starting the controller object with: { LOGGER: \n   DerivedLogger {\n     _readableState: \n      ReadableState {\n        objectMode: true,\n        highWaterMark: 16,\n        buffer: BufferList { head: null, tail: null, length: 0 },\n        length: 0,\n        pipes: [Array],\n        pipesCount: 2,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: false,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        paused: false,\n        emitClose: true,\n        destroyed: false,\n        defaultEncoding: 'utf8',\n        awaitDrain: 0,\n        readingMore: true,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     domain: null,\n     _events: { prefinish: [Function: prefinish], end: [Array], data: [Array] },\n     _eventsCount: 3,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: true,\n        highWaterMark: 16,\n        finalCalled: false,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        destroyed: false,\n        decodeStrings: true,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: false,\n        bufferProcessing: false,\n        onwrite: [Function],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 5,\n        prefinished: false,\n        errorEmitted: false,\n        emitClose: true,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     _transformState: \n      { afterTransform: [Function: bound afterTransform],\n        needTransform: true,\n        transforming: false,\n        writecb: null,\n        writechunk: null,\n        writeencoding: 'utf8' },\n     silent: undefined,\n     format: Format { options: {} },\n     defaultMeta: { timestamp: '2019-12-18T17:36:59+05:30' },\n     levels: \n      { error: 0,\n        warn: 1,\n        info: 2,\n        http: 3,\n        verbose: 4,\n        debug: 5,\n        silly: 6 },\n     level: 'info',\n     exceptions: ExceptionHandler { logger: [Circular], handlers: Map {} },\n     rejections: RejectionHandler { logger: [Circular], handlers: Map {} },\n     profilers: {},\n     exitOnError: true },\n  PROGRAM_OPTS: \n   Command {\n     commands: [],\n     options: [ [Object], [Object], [Object] ],\n     _execs: Set {},\n     _allowUnknownOption: false,\n     _args: [],\n     _name: 'app',\n     _helpFlags: '-h, --help',\n     _helpDescription: 'output usage information',\n     _helpShortFlag: '-h',\n     _helpLongFlag: '--help',\n     Command: { [Function: Command] super_: [Object] },\n     Option: [Function: Option],\n     CommanderError: [Function: CommanderError],\n     _events: \n      { 'option:verbose': [Function],\n        'option:digitalmarketplace': [Function],\n        'option:rsa': [Function] },\n     _eventsCount: 3,\n     rawArgs: \n      [ '/usr/local/bin/node',\n        '/home/gauravkumar/grv_java/readshare-club/app.js' ],\n     args: [] } }","level":"info","timestamp":"2019-12-18T17:36:59+05:30"}
{"message":"Mysql connection created successfully!","level":"info","timestamp":"2019-12-18T17:36:59+05:30"}
{"message":"Set mysql in controller object","level":"info","timestamp":"2019-12-18T17:36:59+05:30"}
{"message":"Initiating test controller","level":"info","timestamp":"2019-12-18T17:36:59+05:30"}
{"message":"Init all dependencies","level":"info","timestamp":"2019-12-18T17:36:59+05:30"}
{"message":"creating the web server","level":"info","timestamp":"2019-12-18T17:36:59+05:30"}
{"message":"Loading express routes","level":"info","timestamp":"2019-12-18T17:36:59+05:30"}
{"message":"read share service listening on port - 3000","level":"info","timestamp":"2019-12-18T17:36:59+05:30"}
{"message":"Loading init options","level":"info","timestamp":"2019-12-18T17:37:53+05:30"}
{"message":"Populating INIT_OPTS","level":"info","timestamp":"2019-12-18T17:37:53+05:30"}
{"message":"Creating controller","level":"info","timestamp":"2019-12-18T17:37:53+05:30"}
{"message":"Initiating controller","level":"info","timestamp":"2019-12-18T17:37:53+05:30"}
{"message":"Initializing controller","level":"info","timestamp":"2019-12-18T17:37:53+05:30"}
{"message":"Starting the controller object with: { LOGGER: \n   DerivedLogger {\n     _readableState: \n      ReadableState {\n        objectMode: true,\n        highWaterMark: 16,\n        buffer: BufferList { head: null, tail: null, length: 0 },\n        length: 0,\n        pipes: [Array],\n        pipesCount: 2,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: false,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        paused: false,\n        emitClose: true,\n        destroyed: false,\n        defaultEncoding: 'utf8',\n        awaitDrain: 0,\n        readingMore: true,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     domain: null,\n     _events: { prefinish: [Function: prefinish], end: [Array], data: [Array] },\n     _eventsCount: 3,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: true,\n        highWaterMark: 16,\n        finalCalled: false,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        destroyed: false,\n        decodeStrings: true,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: false,\n        bufferProcessing: false,\n        onwrite: [Function],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 5,\n        prefinished: false,\n        errorEmitted: false,\n        emitClose: true,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     _transformState: \n      { afterTransform: [Function: bound afterTransform],\n        needTransform: true,\n        transforming: false,\n        writecb: null,\n        writechunk: null,\n        writeencoding: 'utf8' },\n     silent: undefined,\n     format: Format { options: {} },\n     defaultMeta: { timestamp: '2019-12-18T17:37:53+05:30' },\n     levels: \n      { error: 0,\n        warn: 1,\n        info: 2,\n        http: 3,\n        verbose: 4,\n        debug: 5,\n        silly: 6 },\n     level: 'info',\n     exceptions: ExceptionHandler { logger: [Circular], handlers: Map {} },\n     rejections: RejectionHandler { logger: [Circular], handlers: Map {} },\n     profilers: {},\n     exitOnError: true },\n  PROGRAM_OPTS: \n   Command {\n     commands: [],\n     options: [ [Object], [Object], [Object] ],\n     _execs: Set {},\n     _allowUnknownOption: false,\n     _args: [],\n     _name: 'app',\n     _helpFlags: '-h, --help',\n     _helpDescription: 'output usage information',\n     _helpShortFlag: '-h',\n     _helpLongFlag: '--help',\n     Command: { [Function: Command] super_: [Object] },\n     Option: [Function: Option],\n     CommanderError: [Function: CommanderError],\n     _events: \n      { 'option:verbose': [Function],\n        'option:digitalmarketplace': [Function],\n        'option:rsa': [Function] },\n     _eventsCount: 3,\n     rawArgs: \n      [ '/usr/local/bin/node',\n        '/home/gauravkumar/grv_java/readshare-club/app.js' ],\n     args: [] } }","level":"info","timestamp":"2019-12-18T17:37:53+05:30"}
{"message":"Mysql connection created successfully!","level":"info","timestamp":"2019-12-18T17:37:53+05:30"}
{"message":"Set mysql in controller object","level":"info","timestamp":"2019-12-18T17:37:53+05:30"}
{"message":"Initiating test controller","level":"info","timestamp":"2019-12-18T17:37:53+05:30"}
{"message":"Init all dependencies","level":"info","timestamp":"2019-12-18T17:37:53+05:30"}
{"message":"creating the web server","level":"info","timestamp":"2019-12-18T17:37:53+05:30"}
{"message":"Loading express routes","level":"info","timestamp":"2019-12-18T17:37:53+05:30"}
{"message":"read share service listening on port - 3000","level":"info","timestamp":"2019-12-18T17:37:53+05:30"}
{"message":"Uncaught Exception: Please take action immediately : ReferenceError: csonsole is not defined\n    at Query.<anonymous> (/home/gauravkumar/grv_java/readshare-club/controller/testController.js:29:13)\n    at Query.<anonymous> (/home/gauravkumar/grv_java/readshare-club/node_modules/mysql/lib/Connection.js:525:10)\n    at Query._callback (/home/gauravkumar/grv_java/readshare-club/node_modules/mysql/lib/Connection.js:491:16)\n    at Query.Sequence.end (/home/gauravkumar/grv_java/readshare-club/node_modules/mysql/lib/protocol/sequences/Sequence.js:83:24)\n    at Query._handleFinalResultPacket (/home/gauravkumar/grv_java/readshare-club/node_modules/mysql/lib/protocol/sequences/Query.js:139:8)\n    at Query.EofPacket (/home/gauravkumar/grv_java/readshare-club/node_modules/mysql/lib/protocol/sequences/Query.js:123:8)\n    at Protocol._parsePacket (/home/gauravkumar/grv_java/readshare-club/node_modules/mysql/lib/protocol/Protocol.js:291:23)\n    at Parser._parsePacket (/home/gauravkumar/grv_java/readshare-club/node_modules/mysql/lib/protocol/Parser.js:433:10)\n    at Parser.write (/home/gauravkumar/grv_java/readshare-club/node_modules/mysql/lib/protocol/Parser.js:43:10)\n    at Protocol.write (/home/gauravkumar/grv_java/readshare-club/node_modules/mysql/lib/protocol/Protocol.js:38:16)","level":"error","timestamp":"2019-12-18T17:37:53+05:30"}
{"message":"Loading init options","level":"info","timestamp":"2019-12-18T17:38:45+05:30"}
{"message":"Populating INIT_OPTS","level":"info","timestamp":"2019-12-18T17:38:45+05:30"}
{"message":"Creating controller","level":"info","timestamp":"2019-12-18T17:38:45+05:30"}
{"message":"Initiating controller","level":"info","timestamp":"2019-12-18T17:38:45+05:30"}
{"message":"Initializing controller","level":"info","timestamp":"2019-12-18T17:38:45+05:30"}
{"message":"Starting the controller object with: { LOGGER: \n   DerivedLogger {\n     _readableState: \n      ReadableState {\n        objectMode: true,\n        highWaterMark: 16,\n        buffer: BufferList { head: null, tail: null, length: 0 },\n        length: 0,\n        pipes: [Array],\n        pipesCount: 2,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: false,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        paused: false,\n        emitClose: true,\n        destroyed: false,\n        defaultEncoding: 'utf8',\n        awaitDrain: 0,\n        readingMore: true,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     domain: null,\n     _events: { prefinish: [Function: prefinish], end: [Array], data: [Array] },\n     _eventsCount: 3,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: true,\n        highWaterMark: 16,\n        finalCalled: false,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        destroyed: false,\n        decodeStrings: true,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: false,\n        bufferProcessing: false,\n        onwrite: [Function],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 5,\n        prefinished: false,\n        errorEmitted: false,\n        emitClose: true,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     _transformState: \n      { afterTransform: [Function: bound afterTransform],\n        needTransform: true,\n        transforming: false,\n        writecb: null,\n        writechunk: null,\n        writeencoding: 'utf8' },\n     silent: undefined,\n     format: Format { options: {} },\n     defaultMeta: { timestamp: '2019-12-18T17:38:45+05:30' },\n     levels: \n      { error: 0,\n        warn: 1,\n        info: 2,\n        http: 3,\n        verbose: 4,\n        debug: 5,\n        silly: 6 },\n     level: 'info',\n     exceptions: ExceptionHandler { logger: [Circular], handlers: Map {} },\n     rejections: RejectionHandler { logger: [Circular], handlers: Map {} },\n     profilers: {},\n     exitOnError: true },\n  PROGRAM_OPTS: \n   Command {\n     commands: [],\n     options: [ [Object], [Object], [Object] ],\n     _execs: Set {},\n     _allowUnknownOption: false,\n     _args: [],\n     _name: 'app',\n     _helpFlags: '-h, --help',\n     _helpDescription: 'output usage information',\n     _helpShortFlag: '-h',\n     _helpLongFlag: '--help',\n     Command: { [Function: Command] super_: [Object] },\n     Option: [Function: Option],\n     CommanderError: [Function: CommanderError],\n     _events: \n      { 'option:verbose': [Function],\n        'option:digitalmarketplace': [Function],\n        'option:rsa': [Function] },\n     _eventsCount: 3,\n     rawArgs: \n      [ '/usr/local/bin/node',\n        '/home/gauravkumar/grv_java/readshare-club/app.js' ],\n     args: [] } }","level":"info","timestamp":"2019-12-18T17:38:45+05:30"}
{"message":"Mysql connection created successfully!","level":"info","timestamp":"2019-12-18T17:38:45+05:30"}
{"message":"Set mysql in controller object","level":"info","timestamp":"2019-12-18T17:38:45+05:30"}
{"message":"Initiating test controller","level":"info","timestamp":"2019-12-18T17:38:45+05:30"}
{"message":"Init all dependencies","level":"info","timestamp":"2019-12-18T17:38:45+05:30"}
{"message":"creating the web server","level":"info","timestamp":"2019-12-18T17:38:45+05:30"}
{"message":"Loading express routes","level":"info","timestamp":"2019-12-18T17:38:45+05:30"}
{"message":"read share service listening on port - 3000","level":"info","timestamp":"2019-12-18T17:38:45+05:30"}
{"message":"Loading init options","level":"info","timestamp":"2019-12-18T18:13:56+05:30"}
{"message":"Populating INIT_OPTS","level":"info","timestamp":"2019-12-18T18:13:56+05:30"}
{"message":"Creating controller","level":"info","timestamp":"2019-12-18T18:13:56+05:30"}
{"message":"Initiating controller","level":"info","timestamp":"2019-12-18T18:13:56+05:30"}
{"message":"Initializing controller","level":"info","timestamp":"2019-12-18T18:13:56+05:30"}
{"message":"Starting the controller object with: { LOGGER: \n   DerivedLogger {\n     _readableState: \n      ReadableState {\n        objectMode: true,\n        highWaterMark: 16,\n        buffer: BufferList { head: null, tail: null, length: 0 },\n        length: 0,\n        pipes: [Array],\n        pipesCount: 2,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: false,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        paused: false,\n        emitClose: true,\n        destroyed: false,\n        defaultEncoding: 'utf8',\n        awaitDrain: 0,\n        readingMore: true,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     domain: null,\n     _events: { prefinish: [Function: prefinish], end: [Array], data: [Array] },\n     _eventsCount: 3,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: true,\n        highWaterMark: 16,\n        finalCalled: false,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        destroyed: false,\n        decodeStrings: true,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: false,\n        bufferProcessing: false,\n        onwrite: [Function],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 5,\n        prefinished: false,\n        errorEmitted: false,\n        emitClose: true,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     _transformState: \n      { afterTransform: [Function: bound afterTransform],\n        needTransform: true,\n        transforming: false,\n        writecb: null,\n        writechunk: null,\n        writeencoding: 'utf8' },\n     silent: undefined,\n     format: Format { options: {} },\n     defaultMeta: { timestamp: '2019-12-18T18:13:56+05:30' },\n     levels: \n      { error: 0,\n        warn: 1,\n        info: 2,\n        http: 3,\n        verbose: 4,\n        debug: 5,\n        silly: 6 },\n     level: 'info',\n     exceptions: ExceptionHandler { logger: [Circular], handlers: Map {} },\n     rejections: RejectionHandler { logger: [Circular], handlers: Map {} },\n     profilers: {},\n     exitOnError: true },\n  PROGRAM_OPTS: \n   Command {\n     commands: [],\n     options: [ [Object], [Object], [Object] ],\n     _execs: Set {},\n     _allowUnknownOption: false,\n     _args: [],\n     _name: 'app',\n     _helpFlags: '-h, --help',\n     _helpDescription: 'output usage information',\n     _helpShortFlag: '-h',\n     _helpLongFlag: '--help',\n     Command: { [Function: Command] super_: [Object] },\n     Option: [Function: Option],\n     CommanderError: [Function: CommanderError],\n     _events: \n      { 'option:verbose': [Function],\n        'option:digitalmarketplace': [Function],\n        'option:rsa': [Function] },\n     _eventsCount: 3,\n     rawArgs: \n      [ '/usr/local/bin/node',\n        '/home/gauravkumar/grv_java/readshare-club/app.js' ],\n     args: [] } }","level":"info","timestamp":"2019-12-18T18:13:56+05:30"}
{"message":"Mysql connection created successfully!","level":"info","timestamp":"2019-12-18T18:13:56+05:30"}
{"message":"Set mysql in controller object","level":"info","timestamp":"2019-12-18T18:13:56+05:30"}
{"message":"Initiating test controller","level":"info","timestamp":"2019-12-18T18:13:56+05:30"}
{"message":"Init all dependencies","level":"info","timestamp":"2019-12-18T18:13:56+05:30"}
{"message":"creating the web server","level":"info","timestamp":"2019-12-18T18:13:56+05:30"}
{"message":"Loading express routes","level":"info","timestamp":"2019-12-18T18:13:56+05:30"}
{"message":"read share service listening on port - 3000","level":"info","timestamp":"2019-12-18T18:13:56+05:30"}
{"message":"Loading init options","level":"info","timestamp":"2019-12-18T18:42:13+05:30"}
{"message":"Populating INIT_OPTS","level":"info","timestamp":"2019-12-18T18:42:13+05:30"}
{"message":"Creating controller","level":"info","timestamp":"2019-12-18T18:42:13+05:30"}
{"message":"Initiating controller","level":"info","timestamp":"2019-12-18T18:42:13+05:30"}
{"message":"Initializing controller","level":"info","timestamp":"2019-12-18T18:42:13+05:30"}
{"message":"Starting the controller object with: { LOGGER: \n   DerivedLogger {\n     _readableState: \n      ReadableState {\n        objectMode: true,\n        highWaterMark: 16,\n        buffer: BufferList { head: null, tail: null, length: 0 },\n        length: 0,\n        pipes: [Array],\n        pipesCount: 2,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: false,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        paused: false,\n        emitClose: true,\n        destroyed: false,\n        defaultEncoding: 'utf8',\n        awaitDrain: 0,\n        readingMore: true,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     domain: null,\n     _events: { prefinish: [Function: prefinish], end: [Array], data: [Array] },\n     _eventsCount: 3,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: true,\n        highWaterMark: 16,\n        finalCalled: false,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        destroyed: false,\n        decodeStrings: true,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: false,\n        bufferProcessing: false,\n        onwrite: [Function],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 5,\n        prefinished: false,\n        errorEmitted: false,\n        emitClose: true,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     _transformState: \n      { afterTransform: [Function: bound afterTransform],\n        needTransform: true,\n        transforming: false,\n        writecb: null,\n        writechunk: null,\n        writeencoding: 'utf8' },\n     silent: undefined,\n     format: Format { options: {} },\n     defaultMeta: { timestamp: '2019-12-18T18:42:13+05:30' },\n     levels: \n      { error: 0,\n        warn: 1,\n        info: 2,\n        http: 3,\n        verbose: 4,\n        debug: 5,\n        silly: 6 },\n     level: 'info',\n     exceptions: ExceptionHandler { logger: [Circular], handlers: Map {} },\n     rejections: RejectionHandler { logger: [Circular], handlers: Map {} },\n     profilers: {},\n     exitOnError: true },\n  PROGRAM_OPTS: \n   Command {\n     commands: [],\n     options: [ [Object], [Object], [Object] ],\n     _execs: Set {},\n     _allowUnknownOption: false,\n     _args: [],\n     _name: 'app',\n     _helpFlags: '-h, --help',\n     _helpDescription: 'output usage information',\n     _helpShortFlag: '-h',\n     _helpLongFlag: '--help',\n     Command: { [Function: Command] super_: [Object] },\n     Option: [Function: Option],\n     CommanderError: [Function: CommanderError],\n     _events: \n      { 'option:verbose': [Function],\n        'option:digitalmarketplace': [Function],\n        'option:rsa': [Function] },\n     _eventsCount: 3,\n     rawArgs: \n      [ '/usr/local/bin/node',\n        '/home/gauravkumar/grv_java/readshare-club/app.js' ],\n     args: [] } }","level":"info","timestamp":"2019-12-18T18:42:13+05:30"}
{"message":"Mysql connection created successfully!","level":"info","timestamp":"2019-12-18T18:42:13+05:30"}
{"message":"Set mysql in controller object","level":"info","timestamp":"2019-12-18T18:42:13+05:30"}
{"message":"Initiating test controller","level":"info","timestamp":"2019-12-18T18:42:13+05:30"}
{"message":"Test controller initialised","level":"info","timestamp":"2019-12-18T18:42:13+05:30"}
{"message":"Initiating Services","level":"info","timestamp":"2019-12-18T18:42:13+05:30"}
{"message":"Init all dependencies","level":"info","timestamp":"2019-12-18T18:42:13+05:30"}
{"message":"creating the web server","level":"info","timestamp":"2019-12-18T18:42:13+05:30"}
{"message":"Loading express routes","level":"info","timestamp":"2019-12-18T18:42:13+05:30"}
{"message":"Error in creating HTTP Server : { Error: listen EADDRINUSE :::3000\n    at Object._errnoException (util.js:1022:11)\n    at _exceptionWithHostPort (util.js:1044:20)\n    at Server.setupListenHandle [as _listen2] (net.js:1367:14)\n    at listenInCluster (net.js:1408:12)\n    at Server.listen (net.js:1492:7)\n    at /home/gauravkumar/grv_java/readshare-club/app.js:113:18\n    at /home/gauravkumar/grv_java/readshare-club/controller/index.js:45:20\n    at _fulfilled (/home/gauravkumar/grv_java/readshare-club/node_modules/q/q.js:854:54)\n    at self.promiseDispatch.done (/home/gauravkumar/grv_java/readshare-club/node_modules/q/q.js:883:30)\n    at Promise.promise.promiseDispatch (/home/gauravkumar/grv_java/readshare-club/node_modules/q/q.js:816:13)\n  code: 'EADDRINUSE',\n  errno: 'EADDRINUSE',\n  syscall: 'listen',\n  address: '::',\n  port: 3000 }","level":"error","timestamp":"2019-12-18T18:42:13+05:30"}
{"message":"Loading init options","level":"info","timestamp":"2019-12-18T18:42:55+05:30"}
{"message":"Populating INIT_OPTS","level":"info","timestamp":"2019-12-18T18:42:55+05:30"}
{"message":"Creating controller","level":"info","timestamp":"2019-12-18T18:42:55+05:30"}
{"message":"Initiating controller","level":"info","timestamp":"2019-12-18T18:42:55+05:30"}
{"message":"Initializing controller","level":"info","timestamp":"2019-12-18T18:42:55+05:30"}
{"message":"Starting the controller object with: { LOGGER: \n   DerivedLogger {\n     _readableState: \n      ReadableState {\n        objectMode: true,\n        highWaterMark: 16,\n        buffer: BufferList { head: null, tail: null, length: 0 },\n        length: 0,\n        pipes: [Array],\n        pipesCount: 2,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: false,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        paused: false,\n        emitClose: true,\n        destroyed: false,\n        defaultEncoding: 'utf8',\n        awaitDrain: 0,\n        readingMore: true,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     domain: null,\n     _events: { prefinish: [Function: prefinish], end: [Array], data: [Array] },\n     _eventsCount: 3,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: true,\n        highWaterMark: 16,\n        finalCalled: false,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        destroyed: false,\n        decodeStrings: true,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: false,\n        bufferProcessing: false,\n        onwrite: [Function],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 5,\n        prefinished: false,\n        errorEmitted: false,\n        emitClose: true,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     _transformState: \n      { afterTransform: [Function: bound afterTransform],\n        needTransform: true,\n        transforming: false,\n        writecb: null,\n        writechunk: null,\n        writeencoding: 'utf8' },\n     silent: undefined,\n     format: Format { options: {} },\n     defaultMeta: { timestamp: '2019-12-18T18:42:55+05:30' },\n     levels: \n      { error: 0,\n        warn: 1,\n        info: 2,\n        http: 3,\n        verbose: 4,\n        debug: 5,\n        silly: 6 },\n     level: 'info',\n     exceptions: ExceptionHandler { logger: [Circular], handlers: Map {} },\n     rejections: RejectionHandler { logger: [Circular], handlers: Map {} },\n     profilers: {},\n     exitOnError: true },\n  PROGRAM_OPTS: \n   Command {\n     commands: [],\n     options: [ [Object], [Object], [Object] ],\n     _execs: Set {},\n     _allowUnknownOption: false,\n     _args: [],\n     _name: 'app',\n     _helpFlags: '-h, --help',\n     _helpDescription: 'output usage information',\n     _helpShortFlag: '-h',\n     _helpLongFlag: '--help',\n     Command: { [Function: Command] super_: [Object] },\n     Option: [Function: Option],\n     CommanderError: [Function: CommanderError],\n     _events: \n      { 'option:verbose': [Function],\n        'option:digitalmarketplace': [Function],\n        'option:rsa': [Function] },\n     _eventsCount: 3,\n     rawArgs: \n      [ '/usr/local/bin/node',\n        '/home/gauravkumar/grv_java/readshare-club/app.js' ],\n     args: [] } }","level":"info","timestamp":"2019-12-18T18:42:55+05:30"}
{"message":"Mysql connection created successfully!","level":"info","timestamp":"2019-12-18T18:42:55+05:30"}
{"message":"Set mysql in controller object","level":"info","timestamp":"2019-12-18T18:42:55+05:30"}
{"message":"Initiating test controller","level":"info","timestamp":"2019-12-18T18:42:55+05:30"}
{"message":"Test controller initialised","level":"info","timestamp":"2019-12-18T18:42:55+05:30"}
{"message":"Initiating Services","level":"info","timestamp":"2019-12-18T18:42:55+05:30"}
{"message":"Init all dependencies","level":"info","timestamp":"2019-12-18T18:42:55+05:30"}
{"message":"creating the web server","level":"info","timestamp":"2019-12-18T18:42:55+05:30"}
{"message":"Loading express routes","level":"info","timestamp":"2019-12-18T18:42:55+05:30"}
{"message":"Error in creating HTTP Server : { Error: listen EADDRINUSE :::3000\n    at Object._errnoException (util.js:1022:11)\n    at _exceptionWithHostPort (util.js:1044:20)\n    at Server.setupListenHandle [as _listen2] (net.js:1367:14)\n    at listenInCluster (net.js:1408:12)\n    at Server.listen (net.js:1492:7)\n    at /home/gauravkumar/grv_java/readshare-club/app.js:113:18\n    at /home/gauravkumar/grv_java/readshare-club/controller/index.js:45:20\n    at _fulfilled (/home/gauravkumar/grv_java/readshare-club/node_modules/q/q.js:854:54)\n    at self.promiseDispatch.done (/home/gauravkumar/grv_java/readshare-club/node_modules/q/q.js:883:30)\n    at Promise.promise.promiseDispatch (/home/gauravkumar/grv_java/readshare-club/node_modules/q/q.js:816:13)\n  code: 'EADDRINUSE',\n  errno: 'EADDRINUSE',\n  syscall: 'listen',\n  address: '::',\n  port: 3000 }","level":"error","timestamp":"2019-12-18T18:42:55+05:30"}
{"message":"Loading init options","level":"info","timestamp":"2019-12-18T18:51:35+05:30"}
{"message":"Populating INIT_OPTS","level":"info","timestamp":"2019-12-18T18:51:35+05:30"}
{"message":"Creating controller","level":"info","timestamp":"2019-12-18T18:51:35+05:30"}
{"message":"Initiating controller","level":"info","timestamp":"2019-12-18T18:51:35+05:30"}
{"message":"Initializing controller","level":"info","timestamp":"2019-12-18T18:51:35+05:30"}
{"message":"Starting the controller object with: { LOGGER: \n   DerivedLogger {\n     _readableState: \n      ReadableState {\n        objectMode: true,\n        highWaterMark: 16,\n        buffer: BufferList { head: null, tail: null, length: 0 },\n        length: 0,\n        pipes: [Array],\n        pipesCount: 2,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: false,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        paused: false,\n        emitClose: true,\n        destroyed: false,\n        defaultEncoding: 'utf8',\n        awaitDrain: 0,\n        readingMore: true,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     domain: null,\n     _events: { prefinish: [Function: prefinish], end: [Array], data: [Array] },\n     _eventsCount: 3,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: true,\n        highWaterMark: 16,\n        finalCalled: false,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        destroyed: false,\n        decodeStrings: true,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: false,\n        bufferProcessing: false,\n        onwrite: [Function],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 5,\n        prefinished: false,\n        errorEmitted: false,\n        emitClose: true,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     _transformState: \n      { afterTransform: [Function: bound afterTransform],\n        needTransform: true,\n        transforming: false,\n        writecb: null,\n        writechunk: null,\n        writeencoding: 'utf8' },\n     silent: undefined,\n     format: Format { options: {} },\n     defaultMeta: { timestamp: '2019-12-18T18:51:35+05:30' },\n     levels: \n      { error: 0,\n        warn: 1,\n        info: 2,\n        http: 3,\n        verbose: 4,\n        debug: 5,\n        silly: 6 },\n     level: 'info',\n     exceptions: ExceptionHandler { logger: [Circular], handlers: Map {} },\n     rejections: RejectionHandler { logger: [Circular], handlers: Map {} },\n     profilers: {},\n     exitOnError: true },\n  PROGRAM_OPTS: \n   Command {\n     commands: [],\n     options: [ [Object], [Object], [Object] ],\n     _execs: Set {},\n     _allowUnknownOption: false,\n     _args: [],\n     _name: 'app',\n     _helpFlags: '-h, --help',\n     _helpDescription: 'output usage information',\n     _helpShortFlag: '-h',\n     _helpLongFlag: '--help',\n     Command: { [Function: Command] super_: [Object] },\n     Option: [Function: Option],\n     CommanderError: [Function: CommanderError],\n     _events: \n      { 'option:verbose': [Function],\n        'option:digitalmarketplace': [Function],\n        'option:rsa': [Function] },\n     _eventsCount: 3,\n     rawArgs: \n      [ '/usr/local/bin/node',\n        '/home/gauravkumar/grv_java/readshare-club/app.js' ],\n     args: [] } }","level":"info","timestamp":"2019-12-18T18:51:35+05:30"}
{"message":"Mysql connection created successfully!","level":"info","timestamp":"2019-12-18T18:51:35+05:30"}
{"message":"Set mysql in controller object","level":"info","timestamp":"2019-12-18T18:51:35+05:30"}
{"message":"Initiating test controller","level":"info","timestamp":"2019-12-18T18:51:35+05:30"}
{"message":"Test controller initialised","level":"info","timestamp":"2019-12-18T18:51:35+05:30"}
{"message":"Initiating Services","level":"info","timestamp":"2019-12-18T18:51:35+05:30"}
{"message":"Init all dependencies","level":"info","timestamp":"2019-12-18T18:51:35+05:30"}
{"message":"creating the web server","level":"info","timestamp":"2019-12-18T18:51:35+05:30"}
{"message":"Loading express routes","level":"info","timestamp":"2019-12-18T18:51:35+05:30"}
{"message":"Error in creating HTTP Server : { Error: listen EADDRINUSE :::3000\n    at Object._errnoException (util.js:1022:11)\n    at _exceptionWithHostPort (util.js:1044:20)\n    at Server.setupListenHandle [as _listen2] (net.js:1367:14)\n    at listenInCluster (net.js:1408:12)\n    at Server.listen (net.js:1492:7)\n    at /home/gauravkumar/grv_java/readshare-club/app.js:113:18\n    at /home/gauravkumar/grv_java/readshare-club/controller/index.js:45:20\n    at _fulfilled (/home/gauravkumar/grv_java/readshare-club/node_modules/q/q.js:854:54)\n    at self.promiseDispatch.done (/home/gauravkumar/grv_java/readshare-club/node_modules/q/q.js:883:30)\n    at Promise.promise.promiseDispatch (/home/gauravkumar/grv_java/readshare-club/node_modules/q/q.js:816:13)\n  code: 'EADDRINUSE',\n  errno: 'EADDRINUSE',\n  syscall: 'listen',\n  address: '::',\n  port: 3000 }","level":"error","timestamp":"2019-12-18T18:51:35+05:30"}
{"message":"Loading init options","level":"info","timestamp":"2019-12-18T20:18:04+05:30"}
{"message":"Populating INIT_OPTS","level":"info","timestamp":"2019-12-18T20:18:04+05:30"}
{"message":"Creating controller","level":"info","timestamp":"2019-12-18T20:18:04+05:30"}
{"message":"Initiating controller","level":"info","timestamp":"2019-12-18T20:18:04+05:30"}
{"message":"Initializing controller","level":"info","timestamp":"2019-12-18T20:18:04+05:30"}
{"message":"Starting the controller object with: { LOGGER: \n   DerivedLogger {\n     _readableState: \n      ReadableState {\n        objectMode: true,\n        highWaterMark: 16,\n        buffer: BufferList { head: null, tail: null, length: 0 },\n        length: 0,\n        pipes: [Array],\n        pipesCount: 2,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: false,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        paused: false,\n        emitClose: true,\n        destroyed: false,\n        defaultEncoding: 'utf8',\n        awaitDrain: 0,\n        readingMore: true,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     domain: null,\n     _events: { prefinish: [Function: prefinish], end: [Array], data: [Array] },\n     _eventsCount: 3,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: true,\n        highWaterMark: 16,\n        finalCalled: false,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        destroyed: false,\n        decodeStrings: true,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: false,\n        bufferProcessing: false,\n        onwrite: [Function],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 5,\n        prefinished: false,\n        errorEmitted: false,\n        emitClose: true,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     _transformState: \n      { afterTransform: [Function: bound afterTransform],\n        needTransform: true,\n        transforming: false,\n        writecb: null,\n        writechunk: null,\n        writeencoding: 'utf8' },\n     silent: undefined,\n     format: Format { options: {} },\n     defaultMeta: { timestamp: '2019-12-18T20:18:04+05:30' },\n     levels: \n      { error: 0,\n        warn: 1,\n        info: 2,\n        http: 3,\n        verbose: 4,\n        debug: 5,\n        silly: 6 },\n     level: 'info',\n     exceptions: ExceptionHandler { logger: [Circular], handlers: Map {} },\n     rejections: RejectionHandler { logger: [Circular], handlers: Map {} },\n     profilers: {},\n     exitOnError: true },\n  PROGRAM_OPTS: \n   Command {\n     commands: [],\n     options: [ [Object], [Object], [Object] ],\n     _execs: Set {},\n     _allowUnknownOption: false,\n     _args: [],\n     _name: 'app',\n     _helpFlags: '-h, --help',\n     _helpDescription: 'output usage information',\n     _helpShortFlag: '-h',\n     _helpLongFlag: '--help',\n     Command: { [Function: Command] super_: [Object] },\n     Option: [Function: Option],\n     CommanderError: [Function: CommanderError],\n     _events: \n      { 'option:verbose': [Function],\n        'option:digitalmarketplace': [Function],\n        'option:rsa': [Function] },\n     _eventsCount: 3,\n     rawArgs: \n      [ '/usr/local/bin/node',\n        '/home/gauravkumar/grv_java/readshare-club/app.js' ],\n     args: [] } }","level":"info","timestamp":"2019-12-18T20:18:04+05:30"}
{"message":"Mysql connection created successfully!","level":"info","timestamp":"2019-12-18T20:18:04+05:30"}
{"message":"Loading init options","level":"info","timestamp":"2019-12-18T20:19:51+05:30"}
{"message":"Populating INIT_OPTS","level":"info","timestamp":"2019-12-18T20:19:51+05:30"}
{"message":"Creating controller","level":"info","timestamp":"2019-12-18T20:19:51+05:30"}
{"message":"Initiating controller","level":"info","timestamp":"2019-12-18T20:19:51+05:30"}
{"message":"Initializing controller","level":"info","timestamp":"2019-12-18T20:19:51+05:30"}
{"message":"Starting the controller object with: { LOGGER: \n   DerivedLogger {\n     _readableState: \n      ReadableState {\n        objectMode: true,\n        highWaterMark: 16,\n        buffer: BufferList { head: null, tail: null, length: 0 },\n        length: 0,\n        pipes: [Array],\n        pipesCount: 2,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: false,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        paused: false,\n        emitClose: true,\n        destroyed: false,\n        defaultEncoding: 'utf8',\n        awaitDrain: 0,\n        readingMore: true,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     domain: null,\n     _events: { prefinish: [Function: prefinish], end: [Array], data: [Array] },\n     _eventsCount: 3,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: true,\n        highWaterMark: 16,\n        finalCalled: false,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        destroyed: false,\n        decodeStrings: true,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: false,\n        bufferProcessing: false,\n        onwrite: [Function],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 5,\n        prefinished: false,\n        errorEmitted: false,\n        emitClose: true,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     _transformState: \n      { afterTransform: [Function: bound afterTransform],\n        needTransform: true,\n        transforming: false,\n        writecb: null,\n        writechunk: null,\n        writeencoding: 'utf8' },\n     silent: undefined,\n     format: Format { options: {} },\n     defaultMeta: { timestamp: '2019-12-18T20:19:51+05:30' },\n     levels: \n      { error: 0,\n        warn: 1,\n        info: 2,\n        http: 3,\n        verbose: 4,\n        debug: 5,\n        silly: 6 },\n     level: 'info',\n     exceptions: ExceptionHandler { logger: [Circular], handlers: Map {} },\n     rejections: RejectionHandler { logger: [Circular], handlers: Map {} },\n     profilers: {},\n     exitOnError: true },\n  PROGRAM_OPTS: \n   Command {\n     commands: [],\n     options: [ [Object], [Object], [Object] ],\n     _execs: Set {},\n     _allowUnknownOption: false,\n     _args: [],\n     _name: 'app',\n     _helpFlags: '-h, --help',\n     _helpDescription: 'output usage information',\n     _helpShortFlag: '-h',\n     _helpLongFlag: '--help',\n     Command: { [Function: Command] super_: [Object] },\n     Option: [Function: Option],\n     CommanderError: [Function: CommanderError],\n     _events: \n      { 'option:verbose': [Function],\n        'option:digitalmarketplace': [Function],\n        'option:rsa': [Function] },\n     _eventsCount: 3,\n     rawArgs: \n      [ '/usr/local/bin/node',\n        '/home/gauravkumar/grv_java/readshare-club/app.js' ],\n     args: [] } }","level":"info","timestamp":"2019-12-18T20:19:51+05:30"}
{"message":"Mysql connection created successfully!","level":"info","timestamp":"2019-12-18T20:19:51+05:30"}
{"message":"Loading init options","level":"info","timestamp":"2019-12-18T20:22:44+05:30"}
{"message":"Populating INIT_OPTS","level":"info","timestamp":"2019-12-18T20:22:44+05:30"}
{"message":"Creating controller","level":"info","timestamp":"2019-12-18T20:22:44+05:30"}
{"message":"Initiating controller","level":"info","timestamp":"2019-12-18T20:22:44+05:30"}
{"message":"Initializing controller","level":"info","timestamp":"2019-12-18T20:22:44+05:30"}
{"message":"Starting the controller object with: { LOGGER: \n   DerivedLogger {\n     _readableState: \n      ReadableState {\n        objectMode: true,\n        highWaterMark: 16,\n        buffer: BufferList { head: null, tail: null, length: 0 },\n        length: 0,\n        pipes: [Array],\n        pipesCount: 2,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: false,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        paused: false,\n        emitClose: true,\n        destroyed: false,\n        defaultEncoding: 'utf8',\n        awaitDrain: 0,\n        readingMore: true,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     domain: null,\n     _events: { prefinish: [Function: prefinish], end: [Array], data: [Array] },\n     _eventsCount: 3,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: true,\n        highWaterMark: 16,\n        finalCalled: false,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        destroyed: false,\n        decodeStrings: true,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: false,\n        bufferProcessing: false,\n        onwrite: [Function],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 5,\n        prefinished: false,\n        errorEmitted: false,\n        emitClose: true,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     _transformState: \n      { afterTransform: [Function: bound afterTransform],\n        needTransform: true,\n        transforming: false,\n        writecb: null,\n        writechunk: null,\n        writeencoding: 'utf8' },\n     silent: undefined,\n     format: Format { options: {} },\n     defaultMeta: { timestamp: '2019-12-18T20:22:44+05:30' },\n     levels: \n      { error: 0,\n        warn: 1,\n        info: 2,\n        http: 3,\n        verbose: 4,\n        debug: 5,\n        silly: 6 },\n     level: 'info',\n     exceptions: ExceptionHandler { logger: [Circular], handlers: Map {} },\n     rejections: RejectionHandler { logger: [Circular], handlers: Map {} },\n     profilers: {},\n     exitOnError: true },\n  PROGRAM_OPTS: \n   Command {\n     commands: [],\n     options: [ [Object], [Object], [Object] ],\n     _execs: Set {},\n     _allowUnknownOption: false,\n     _args: [],\n     _name: 'app',\n     _helpFlags: '-h, --help',\n     _helpDescription: 'output usage information',\n     _helpShortFlag: '-h',\n     _helpLongFlag: '--help',\n     Command: { [Function: Command] super_: [Object] },\n     Option: [Function: Option],\n     CommanderError: [Function: CommanderError],\n     _events: \n      { 'option:verbose': [Function],\n        'option:digitalmarketplace': [Function],\n        'option:rsa': [Function] },\n     _eventsCount: 3,\n     rawArgs: \n      [ '/usr/local/bin/node',\n        '/home/gauravkumar/grv_java/readshare-club/app.js' ],\n     args: [] } }","level":"info","timestamp":"2019-12-18T20:22:44+05:30"}
{"message":"Mysql connection created successfully!","level":"info","timestamp":"2019-12-18T20:22:44+05:30"}
{"message":"Set mysql in controller object","level":"info","timestamp":"2019-12-18T20:22:44+05:30"}
{"message":"Initiating test controller","level":"info","timestamp":"2019-12-18T20:22:44+05:30"}
{"message":"Test controller initialised","level":"info","timestamp":"2019-12-18T20:22:44+05:30"}
{"message":"Initiating User Controller","level":"info","timestamp":"2019-12-18T20:22:44+05:30"}
{"message":"Init all dependencies","level":"info","timestamp":"2019-12-18T20:22:44+05:30"}
{"message":"creating the web server","level":"info","timestamp":"2019-12-18T20:22:44+05:30"}
{"message":"Loading express routes","level":"info","timestamp":"2019-12-18T20:22:44+05:30"}
{"message":"read share service listening on port - 3000","level":"info","timestamp":"2019-12-18T20:22:44+05:30"}
{"timestamp":"2019-12-18T20:22:44+05:30","level":"error","message":"validateSchema "}
{"timestamp":"2019-12-18T20:22:44+05:30","level":"error","message":"validateSchema "}
{"timestamp":"2019-12-18T20:22:44+05:30","level":"error","message":"validateSchema "}
{"message":"Error im User Registeration TypeError: Cannot read property 'USER_REPO' of undefined","level":"info","timestamp":"2019-12-18T20:22:44+05:30"}
{"message":"Loading init options","level":"info","timestamp":"2019-12-18T20:26:31+05:30"}
{"message":"Populating INIT_OPTS","level":"info","timestamp":"2019-12-18T20:26:31+05:30"}
{"message":"Creating controller","level":"info","timestamp":"2019-12-18T20:26:31+05:30"}
{"message":"Initiating controller","level":"info","timestamp":"2019-12-18T20:26:31+05:30"}
{"message":"Initializing controller","level":"info","timestamp":"2019-12-18T20:26:31+05:30"}
{"message":"Starting the controller object with: { LOGGER: \n   DerivedLogger {\n     _readableState: \n      ReadableState {\n        objectMode: true,\n        highWaterMark: 16,\n        buffer: BufferList { head: null, tail: null, length: 0 },\n        length: 0,\n        pipes: [Array],\n        pipesCount: 2,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: false,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        paused: false,\n        emitClose: true,\n        destroyed: false,\n        defaultEncoding: 'utf8',\n        awaitDrain: 0,\n        readingMore: true,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     domain: null,\n     _events: { prefinish: [Function: prefinish], end: [Array], data: [Array] },\n     _eventsCount: 3,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: true,\n        highWaterMark: 16,\n        finalCalled: false,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        destroyed: false,\n        decodeStrings: true,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: false,\n        bufferProcessing: false,\n        onwrite: [Function],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 5,\n        prefinished: false,\n        errorEmitted: false,\n        emitClose: true,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     _transformState: \n      { afterTransform: [Function: bound afterTransform],\n        needTransform: true,\n        transforming: false,\n        writecb: null,\n        writechunk: null,\n        writeencoding: 'utf8' },\n     silent: undefined,\n     format: Format { options: {} },\n     defaultMeta: { timestamp: '2019-12-18T20:26:31+05:30' },\n     levels: \n      { error: 0,\n        warn: 1,\n        info: 2,\n        http: 3,\n        verbose: 4,\n        debug: 5,\n        silly: 6 },\n     level: 'info',\n     exceptions: ExceptionHandler { logger: [Circular], handlers: Map {} },\n     rejections: RejectionHandler { logger: [Circular], handlers: Map {} },\n     profilers: {},\n     exitOnError: true },\n  PROGRAM_OPTS: \n   Command {\n     commands: [],\n     options: [ [Object], [Object], [Object] ],\n     _execs: Set {},\n     _allowUnknownOption: false,\n     _args: [],\n     _name: 'app',\n     _helpFlags: '-h, --help',\n     _helpDescription: 'output usage information',\n     _helpShortFlag: '-h',\n     _helpLongFlag: '--help',\n     Command: { [Function: Command] super_: [Object] },\n     Option: [Function: Option],\n     CommanderError: [Function: CommanderError],\n     _events: \n      { 'option:verbose': [Function],\n        'option:digitalmarketplace': [Function],\n        'option:rsa': [Function] },\n     _eventsCount: 3,\n     rawArgs: \n      [ '/usr/local/bin/node',\n        '/home/gauravkumar/grv_java/readshare-club/app.js' ],\n     args: [] } }","level":"info","timestamp":"2019-12-18T20:26:31+05:30"}
{"message":"Mysql connection created successfully!","level":"info","timestamp":"2019-12-18T20:26:31+05:30"}
{"message":"Set mysql in controller object","level":"info","timestamp":"2019-12-18T20:26:31+05:30"}
{"message":"Initiating test controller","level":"info","timestamp":"2019-12-18T20:26:31+05:30"}
{"message":"Test controller initialised","level":"info","timestamp":"2019-12-18T20:26:31+05:30"}
{"message":"Initiating User Controller","level":"info","timestamp":"2019-12-18T20:26:31+05:30"}
{"message":"Init all dependencies","level":"info","timestamp":"2019-12-18T20:26:31+05:30"}
{"message":"creating the web server","level":"info","timestamp":"2019-12-18T20:26:31+05:30"}
{"message":"Loading express routes","level":"info","timestamp":"2019-12-18T20:26:31+05:30"}
{"message":"read share service listening on port - 3000","level":"info","timestamp":"2019-12-18T20:26:31+05:30"}
{"message":"Error im User Registeration Error: ER_PARSE_ERROR: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'Varshney, Grvo221@9, gauravvarshney221@gmail.com)' at line 1","level":"info","timestamp":"2019-12-18T20:26:31+05:30"}
{"message":"Loading init options","level":"info","timestamp":"2019-12-18T20:27:51+05:30"}
{"message":"Populating INIT_OPTS","level":"info","timestamp":"2019-12-18T20:27:51+05:30"}
{"message":"Creating controller","level":"info","timestamp":"2019-12-18T20:27:51+05:30"}
{"message":"Initiating controller","level":"info","timestamp":"2019-12-18T20:27:51+05:30"}
{"message":"Initializing controller","level":"info","timestamp":"2019-12-18T20:27:51+05:30"}
{"message":"Starting the controller object with: { LOGGER: \n   DerivedLogger {\n     _readableState: \n      ReadableState {\n        objectMode: true,\n        highWaterMark: 16,\n        buffer: BufferList { head: null, tail: null, length: 0 },\n        length: 0,\n        pipes: [Array],\n        pipesCount: 2,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: false,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        paused: false,\n        emitClose: true,\n        destroyed: false,\n        defaultEncoding: 'utf8',\n        awaitDrain: 0,\n        readingMore: true,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     domain: null,\n     _events: { prefinish: [Function: prefinish], end: [Array], data: [Array] },\n     _eventsCount: 3,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: true,\n        highWaterMark: 16,\n        finalCalled: false,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        destroyed: false,\n        decodeStrings: true,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: false,\n        bufferProcessing: false,\n        onwrite: [Function],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 5,\n        prefinished: false,\n        errorEmitted: false,\n        emitClose: true,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     _transformState: \n      { afterTransform: [Function: bound afterTransform],\n        needTransform: true,\n        transforming: false,\n        writecb: null,\n        writechunk: null,\n        writeencoding: 'utf8' },\n     silent: undefined,\n     format: Format { options: {} },\n     defaultMeta: { timestamp: '2019-12-18T20:27:51+05:30' },\n     levels: \n      { error: 0,\n        warn: 1,\n        info: 2,\n        http: 3,\n        verbose: 4,\n        debug: 5,\n        silly: 6 },\n     level: 'info',\n     exceptions: ExceptionHandler { logger: [Circular], handlers: Map {} },\n     rejections: RejectionHandler { logger: [Circular], handlers: Map {} },\n     profilers: {},\n     exitOnError: true },\n  PROGRAM_OPTS: \n   Command {\n     commands: [],\n     options: [ [Object], [Object], [Object] ],\n     _execs: Set {},\n     _allowUnknownOption: false,\n     _args: [],\n     _name: 'app',\n     _helpFlags: '-h, --help',\n     _helpDescription: 'output usage information',\n     _helpShortFlag: '-h',\n     _helpLongFlag: '--help',\n     Command: { [Function: Command] super_: [Object] },\n     Option: [Function: Option],\n     CommanderError: [Function: CommanderError],\n     _events: \n      { 'option:verbose': [Function],\n        'option:digitalmarketplace': [Function],\n        'option:rsa': [Function] },\n     _eventsCount: 3,\n     rawArgs: \n      [ '/usr/local/bin/node',\n        '/home/gauravkumar/grv_java/readshare-club/app.js' ],\n     args: [] } }","level":"info","timestamp":"2019-12-18T20:27:51+05:30"}
{"message":"Mysql connection created successfully!","level":"info","timestamp":"2019-12-18T20:27:51+05:30"}
{"message":"Set mysql in controller object","level":"info","timestamp":"2019-12-18T20:27:51+05:30"}
{"message":"Initiating test controller","level":"info","timestamp":"2019-12-18T20:27:51+05:30"}
{"message":"Test controller initialised","level":"info","timestamp":"2019-12-18T20:27:51+05:30"}
{"message":"Initiating User Controller","level":"info","timestamp":"2019-12-18T20:27:51+05:30"}
{"message":"Init all dependencies","level":"info","timestamp":"2019-12-18T20:27:51+05:30"}
{"message":"creating the web server","level":"info","timestamp":"2019-12-18T20:27:51+05:30"}
{"message":"Loading express routes","level":"info","timestamp":"2019-12-18T20:27:51+05:30"}
{"message":"read share service listening on port - 3000","level":"info","timestamp":"2019-12-18T20:27:51+05:30"}
{"message":"Error im User Registeration Error: ER_PARSE_ERROR: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'Varshney, Grvo221@9, gauravvarshney221@gmail.com)' at line 1","level":"info","timestamp":"2019-12-18T20:27:51+05:30"}
{"message":"Loading init options","level":"info","timestamp":"2019-12-18T20:28:46+05:30"}
{"message":"Populating INIT_OPTS","level":"info","timestamp":"2019-12-18T20:28:46+05:30"}
{"message":"Creating controller","level":"info","timestamp":"2019-12-18T20:28:46+05:30"}
{"message":"Initiating controller","level":"info","timestamp":"2019-12-18T20:28:46+05:30"}
{"message":"Initializing controller","level":"info","timestamp":"2019-12-18T20:28:46+05:30"}
{"message":"Starting the controller object with: { LOGGER: \n   DerivedLogger {\n     _readableState: \n      ReadableState {\n        objectMode: true,\n        highWaterMark: 16,\n        buffer: BufferList { head: null, tail: null, length: 0 },\n        length: 0,\n        pipes: [Array],\n        pipesCount: 2,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: false,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        paused: false,\n        emitClose: true,\n        destroyed: false,\n        defaultEncoding: 'utf8',\n        awaitDrain: 0,\n        readingMore: true,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     domain: null,\n     _events: { prefinish: [Function: prefinish], end: [Array], data: [Array] },\n     _eventsCount: 3,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: true,\n        highWaterMark: 16,\n        finalCalled: false,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        destroyed: false,\n        decodeStrings: true,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: false,\n        bufferProcessing: false,\n        onwrite: [Function],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 5,\n        prefinished: false,\n        errorEmitted: false,\n        emitClose: true,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     _transformState: \n      { afterTransform: [Function: bound afterTransform],\n        needTransform: true,\n        transforming: false,\n        writecb: null,\n        writechunk: null,\n        writeencoding: 'utf8' },\n     silent: undefined,\n     format: Format { options: {} },\n     defaultMeta: { timestamp: '2019-12-18T20:28:46+05:30' },\n     levels: \n      { error: 0,\n        warn: 1,\n        info: 2,\n        http: 3,\n        verbose: 4,\n        debug: 5,\n        silly: 6 },\n     level: 'info',\n     exceptions: ExceptionHandler { logger: [Circular], handlers: Map {} },\n     rejections: RejectionHandler { logger: [Circular], handlers: Map {} },\n     profilers: {},\n     exitOnError: true },\n  PROGRAM_OPTS: \n   Command {\n     commands: [],\n     options: [ [Object], [Object], [Object] ],\n     _execs: Set {},\n     _allowUnknownOption: false,\n     _args: [],\n     _name: 'app',\n     _helpFlags: '-h, --help',\n     _helpDescription: 'output usage information',\n     _helpShortFlag: '-h',\n     _helpLongFlag: '--help',\n     Command: { [Function: Command] super_: [Object] },\n     Option: [Function: Option],\n     CommanderError: [Function: CommanderError],\n     _events: \n      { 'option:verbose': [Function],\n        'option:digitalmarketplace': [Function],\n        'option:rsa': [Function] },\n     _eventsCount: 3,\n     rawArgs: \n      [ '/usr/local/bin/node',\n        '/home/gauravkumar/grv_java/readshare-club/app.js' ],\n     args: [] } }","level":"info","timestamp":"2019-12-18T20:28:46+05:30"}
{"message":"Mysql connection created successfully!","level":"info","timestamp":"2019-12-18T20:28:46+05:30"}
{"message":"Set mysql in controller object","level":"info","timestamp":"2019-12-18T20:28:46+05:30"}
{"message":"Initiating test controller","level":"info","timestamp":"2019-12-18T20:28:46+05:30"}
{"message":"Test controller initialised","level":"info","timestamp":"2019-12-18T20:28:46+05:30"}
{"message":"Initiating User Controller","level":"info","timestamp":"2019-12-18T20:28:46+05:30"}
{"message":"Init all dependencies","level":"info","timestamp":"2019-12-18T20:28:46+05:30"}
{"message":"creating the web server","level":"info","timestamp":"2019-12-18T20:28:46+05:30"}
{"message":"Loading express routes","level":"info","timestamp":"2019-12-18T20:28:46+05:30"}
{"message":"read share service listening on port - 3000","level":"info","timestamp":"2019-12-18T20:28:46+05:30"}
{"message":"User Registered gauravvarshney221@gmail.com","level":"info","timestamp":"2019-12-18T20:28:46+05:30"}
{"message":"Error im User Registeration Error: ER_DUP_ENTRY: Duplicate entry 'gauravvarshney221@gmail.com' for key 'gmail_id'","level":"info","timestamp":"2019-12-18T20:28:46+05:30"}
{"message":"Loading init options","level":"info","timestamp":"2019-12-18T20:32:07+05:30"}
{"message":"Populating INIT_OPTS","level":"info","timestamp":"2019-12-18T20:32:07+05:30"}
{"message":"Creating controller","level":"info","timestamp":"2019-12-18T20:32:07+05:30"}
{"message":"Initiating controller","level":"info","timestamp":"2019-12-18T20:32:07+05:30"}
{"message":"Initializing controller","level":"info","timestamp":"2019-12-18T20:32:07+05:30"}
{"message":"Starting the controller object with: { LOGGER: \n   DerivedLogger {\n     _readableState: \n      ReadableState {\n        objectMode: true,\n        highWaterMark: 16,\n        buffer: BufferList { head: null, tail: null, length: 0 },\n        length: 0,\n        pipes: [Array],\n        pipesCount: 2,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: false,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        paused: false,\n        emitClose: true,\n        destroyed: false,\n        defaultEncoding: 'utf8',\n        awaitDrain: 0,\n        readingMore: true,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     domain: null,\n     _events: { prefinish: [Function: prefinish], end: [Array], data: [Array] },\n     _eventsCount: 3,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: true,\n        highWaterMark: 16,\n        finalCalled: false,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        destroyed: false,\n        decodeStrings: true,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: false,\n        bufferProcessing: false,\n        onwrite: [Function],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 5,\n        prefinished: false,\n        errorEmitted: false,\n        emitClose: true,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     _transformState: \n      { afterTransform: [Function: bound afterTransform],\n        needTransform: true,\n        transforming: false,\n        writecb: null,\n        writechunk: null,\n        writeencoding: 'utf8' },\n     silent: undefined,\n     format: Format { options: {} },\n     defaultMeta: { timestamp: '2019-12-18T20:32:07+05:30' },\n     levels: \n      { error: 0,\n        warn: 1,\n        info: 2,\n        http: 3,\n        verbose: 4,\n        debug: 5,\n        silly: 6 },\n     level: 'info',\n     exceptions: ExceptionHandler { logger: [Circular], handlers: Map {} },\n     rejections: RejectionHandler { logger: [Circular], handlers: Map {} },\n     profilers: {},\n     exitOnError: true },\n  PROGRAM_OPTS: \n   Command {\n     commands: [],\n     options: [ [Object], [Object], [Object] ],\n     _execs: Set {},\n     _allowUnknownOption: false,\n     _args: [],\n     _name: 'app',\n     _helpFlags: '-h, --help',\n     _helpDescription: 'output usage information',\n     _helpShortFlag: '-h',\n     _helpLongFlag: '--help',\n     Command: { [Function: Command] super_: [Object] },\n     Option: [Function: Option],\n     CommanderError: [Function: CommanderError],\n     _events: \n      { 'option:verbose': [Function],\n        'option:digitalmarketplace': [Function],\n        'option:rsa': [Function] },\n     _eventsCount: 3,\n     rawArgs: \n      [ '/usr/local/bin/node',\n        '/home/gauravkumar/grv_java/readshare-club/app.js' ],\n     args: [] } }","level":"info","timestamp":"2019-12-18T20:32:07+05:30"}
{"message":"Mysql connection created successfully!","level":"info","timestamp":"2019-12-18T20:32:07+05:30"}
{"message":"Set mysql in controller object","level":"info","timestamp":"2019-12-18T20:32:07+05:30"}
{"message":"Initiating test controller","level":"info","timestamp":"2019-12-18T20:32:07+05:30"}
{"message":"Test controller initialised","level":"info","timestamp":"2019-12-18T20:32:07+05:30"}
{"message":"Initiating User Controller","level":"info","timestamp":"2019-12-18T20:32:07+05:30"}
{"message":"Init all dependencies","level":"info","timestamp":"2019-12-18T20:32:07+05:30"}
{"message":"creating the web server","level":"info","timestamp":"2019-12-18T20:32:07+05:30"}
{"message":"Loading express routes","level":"info","timestamp":"2019-12-18T20:32:07+05:30"}
{"message":"read share service listening on port - 3000","level":"info","timestamp":"2019-12-18T20:32:07+05:30"}
{"message":"insertIntoUser_Query : insert into user (user_name, password, gmail_id) values (\"Gaurav Varshney\", \"Grvo221@9\", \"gauravvarshney221@gmail.com\")","level":"info","timestamp":"2019-12-18T20:32:07+05:30"}
{"message":"Error im User Registeration Error: ER_DUP_ENTRY: Duplicate entry 'gauravvarshney221@gmail.com' for key 'gmail_id'","level":"info","timestamp":"2019-12-18T20:32:07+05:30"}
