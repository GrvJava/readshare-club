{"message":"Loading init options","level":"info","timestamp":"2019-12-19T18:35:57+05:30"}
{"message":"Populating INIT_OPTS","level":"info","timestamp":"2019-12-19T18:35:57+05:30"}
{"message":"Creating controller","level":"info","timestamp":"2019-12-19T18:35:57+05:30"}
{"message":"Initiating controller","level":"info","timestamp":"2019-12-19T18:35:57+05:30"}
{"message":"Initializing controller","level":"info","timestamp":"2019-12-19T18:35:57+05:30"}
{"message":"Starting the controller object with: { LOGGER: \n   DerivedLogger {\n     _readableState: \n      ReadableState {\n        objectMode: true,\n        highWaterMark: 16,\n        buffer: BufferList { head: null, tail: null, length: 0 },\n        length: 0,\n        pipes: [Array],\n        pipesCount: 2,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: false,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        paused: false,\n        emitClose: true,\n        destroyed: false,\n        defaultEncoding: 'utf8',\n        awaitDrain: 0,\n        readingMore: true,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     domain: null,\n     _events: { prefinish: [Function: prefinish], end: [Array], data: [Array] },\n     _eventsCount: 3,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: true,\n        highWaterMark: 16,\n        finalCalled: false,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        destroyed: false,\n        decodeStrings: true,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: false,\n        bufferProcessing: false,\n        onwrite: [Function],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 5,\n        prefinished: false,\n        errorEmitted: false,\n        emitClose: true,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     _transformState: \n      { afterTransform: [Function: bound afterTransform],\n        needTransform: true,\n        transforming: false,\n        writecb: null,\n        writechunk: null,\n        writeencoding: 'utf8' },\n     silent: undefined,\n     format: Format { options: {} },\n     defaultMeta: { timestamp: '2019-12-19T18:35:57+05:30' },\n     levels: \n      { error: 0,\n        warn: 1,\n        info: 2,\n        http: 3,\n        verbose: 4,\n        debug: 5,\n        silly: 6 },\n     level: 'info',\n     exceptions: ExceptionHandler { logger: [Circular], handlers: Map {} },\n     rejections: RejectionHandler { logger: [Circular], handlers: Map {} },\n     profilers: {},\n     exitOnError: true },\n  PROGRAM_OPTS: \n   Command {\n     commands: [],\n     options: [ [Object], [Object], [Object] ],\n     _execs: Set {},\n     _allowUnknownOption: false,\n     _args: [],\n     _name: 'app',\n     _helpFlags: '-h, --help',\n     _helpDescription: 'output usage information',\n     _helpShortFlag: '-h',\n     _helpLongFlag: '--help',\n     Command: { [Function: Command] super_: [Object] },\n     Option: [Function: Option],\n     CommanderError: [Function: CommanderError],\n     _events: \n      { 'option:verbose': [Function],\n        'option:digitalmarketplace': [Function],\n        'option:rsa': [Function] },\n     _eventsCount: 3,\n     rawArgs: \n      [ '/usr/local/bin/node',\n        '/home/gauravkumar/grv_java/readshare-club/app.js' ],\n     args: [] } }","level":"info","timestamp":"2019-12-19T18:35:57+05:30"}
{"message":"Mysql connection created successfully!","level":"info","timestamp":"2019-12-19T18:35:57+05:30"}
{"message":"Set mysql in controller object","level":"info","timestamp":"2019-12-19T18:35:57+05:30"}
{"message":"Initiating test controller","level":"info","timestamp":"2019-12-19T18:35:57+05:30"}
{"message":"Test controller initialised","level":"info","timestamp":"2019-12-19T18:35:57+05:30"}
{"message":"Initiating User Controller","level":"info","timestamp":"2019-12-19T18:35:57+05:30"}
{"message":"Init all dependencies","level":"info","timestamp":"2019-12-19T18:35:57+05:30"}
{"message":"creating the web server","level":"info","timestamp":"2019-12-19T18:35:57+05:30"}
{"message":"Loading express routes","level":"info","timestamp":"2019-12-19T18:35:57+05:30"}
{"message":"read share service listening on port - 3000","level":"info","timestamp":"2019-12-19T18:35:57+05:30"}
{"message":"getUserDataByID_Query : select * from user where id = 1","level":"info","timestamp":"2019-12-19T18:35:57+05:30"}
{"message":"getUserDataByEmail_Query : select * from user where gmail_id = \"gauravvarshney221@gmail.com\"","level":"info","timestamp":"2019-12-19T18:35:57+05:30"}
{"message":"auth_upsertAuthtoken : INSERT INTO auth(user_id,token) VALUES(1,\"EtSZauftgQBP\") ON DUPLICATE KEY UPDATE token=\"EtSZauftgQBP\"","level":"info","timestamp":"2019-12-19T18:35:57+05:30"}
{"message":"getUserDataByID_Query : select * from user where id = 1","level":"info","timestamp":"2019-12-19T18:35:57+05:30"}
{"message":"getUserDataByID_Query : select * from user where id = 1","level":"info","timestamp":"2019-12-19T18:35:57+05:30"}
{"message":"getUserDataByID_Query : select * from user where id = 1","level":"info","timestamp":"2019-12-19T18:35:57+05:30"}
{"message":"getUserDataByEmail_Query : select * from user where gmail_id = \"gauravvarshney221@gmail.com\"","level":"info","timestamp":"2019-12-19T18:35:57+05:30"}
{"message":"auth_upsertAuthtoken : INSERT INTO auth(user_id,token) VALUES(1,\"fEyjokMQlfmf\") ON DUPLICATE KEY UPDATE token=\"fEyjokMQlfmf\"","level":"info","timestamp":"2019-12-19T18:35:57+05:30"}
{"message":"getUserDataByID_Query : select * from user where id = 1","level":"info","timestamp":"2019-12-19T18:35:57+05:30"}
{"message":"Loading init options","level":"info","timestamp":"2019-12-20T17:45:09+05:30"}
{"message":"Populating INIT_OPTS","level":"info","timestamp":"2019-12-20T17:45:09+05:30"}
{"message":"Creating controller","level":"info","timestamp":"2019-12-20T17:45:09+05:30"}
{"message":"Initiating controller","level":"info","timestamp":"2019-12-20T17:45:09+05:30"}
{"message":"Initializing controller","level":"info","timestamp":"2019-12-20T17:45:09+05:30"}
{"message":"Starting the controller object with: { LOGGER: \n   DerivedLogger {\n     _readableState: \n      ReadableState {\n        objectMode: true,\n        highWaterMark: 16,\n        buffer: BufferList { head: null, tail: null, length: 0 },\n        length: 0,\n        pipes: [Array],\n        pipesCount: 2,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: false,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        paused: false,\n        emitClose: true,\n        destroyed: false,\n        defaultEncoding: 'utf8',\n        awaitDrain: 0,\n        readingMore: true,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     domain: null,\n     _events: { prefinish: [Function: prefinish], end: [Array], data: [Array] },\n     _eventsCount: 3,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: true,\n        highWaterMark: 16,\n        finalCalled: false,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        destroyed: false,\n        decodeStrings: true,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: false,\n        bufferProcessing: false,\n        onwrite: [Function],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 5,\n        prefinished: false,\n        errorEmitted: false,\n        emitClose: true,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     _transformState: \n      { afterTransform: [Function: bound afterTransform],\n        needTransform: true,\n        transforming: false,\n        writecb: null,\n        writechunk: null,\n        writeencoding: 'utf8' },\n     silent: undefined,\n     format: Format { options: {} },\n     defaultMeta: { timestamp: '2019-12-20T17:45:09+05:30' },\n     levels: \n      { error: 0,\n        warn: 1,\n        info: 2,\n        http: 3,\n        verbose: 4,\n        debug: 5,\n        silly: 6 },\n     level: 'info',\n     exceptions: ExceptionHandler { logger: [Circular], handlers: Map {} },\n     rejections: RejectionHandler { logger: [Circular], handlers: Map {} },\n     profilers: {},\n     exitOnError: true },\n  PROGRAM_OPTS: \n   Command {\n     commands: [],\n     options: [ [Object], [Object], [Object] ],\n     _execs: Set {},\n     _allowUnknownOption: false,\n     _args: [],\n     _name: 'app',\n     _helpFlags: '-h, --help',\n     _helpDescription: 'output usage information',\n     _helpShortFlag: '-h',\n     _helpLongFlag: '--help',\n     Command: { [Function: Command] super_: [Object] },\n     Option: [Function: Option],\n     CommanderError: [Function: CommanderError],\n     _events: \n      { 'option:verbose': [Function],\n        'option:digitalmarketplace': [Function],\n        'option:rsa': [Function] },\n     _eventsCount: 3,\n     rawArgs: \n      [ '/usr/local/bin/node',\n        '/home/gauravkumar/grv_java/readshare-club/app.js' ],\n     args: [] } }","level":"info","timestamp":"2019-12-20T17:45:09+05:30"}
{"message":"Mysql connection created successfully!","level":"info","timestamp":"2019-12-20T17:45:09+05:30"}
{"message":"Set mysql in controller object","level":"info","timestamp":"2019-12-20T17:45:09+05:30"}
{"message":"Initiating test controller","level":"info","timestamp":"2019-12-20T17:45:09+05:30"}
{"message":"Test controller initialised","level":"info","timestamp":"2019-12-20T17:45:09+05:30"}
{"message":"Initiating User Controller","level":"info","timestamp":"2019-12-20T17:45:09+05:30"}
{"message":"User controller initialised","level":"info","timestamp":"2019-12-20T17:45:09+05:30"}
{"message":"Initiating Book Controller","level":"info","timestamp":"2019-12-20T17:45:09+05:30"}
{"message":"Init all dependencies","level":"info","timestamp":"2019-12-20T17:45:09+05:30"}
{"message":"creating the web server","level":"info","timestamp":"2019-12-20T17:45:09+05:30"}
{"message":"Loading express routes","level":"info","timestamp":"2019-12-20T17:45:09+05:30"}
{"message":"read share service listening on port - 3000","level":"info","timestamp":"2019-12-20T17:45:09+05:30"}
{"timestamp":"2019-12-20T17:45:09+05:30","level":"error","message":"validateSchema "}
{"message":"getUserDataByID_Query : select * from user where id = 4","level":"info","timestamp":"2019-12-20T17:45:09+05:30"}
{"message":"getBookByName_Query : select * from book where name = \"tuesdays with moorie\"","level":"info","timestamp":"2019-12-20T17:45:09+05:30"}
{"message":"book_addBook : INSERT INTO book(name,writer,genre) VALUES(\"tuesdays with moorie\",\"Mitch Albom\",\"undefined\")","level":"info","timestamp":"2019-12-20T17:45:09+05:30"}
{"message":"book_saveContent : INSERT INTO book_summary(book_id,user_id,content,is_thread,genre) VALUES(1,4,\"hi this is my first book\",0,\"\")","level":"info","timestamp":"2019-12-20T17:45:09+05:30"}
{"message":"Loading init options","level":"info","timestamp":"2019-12-20T17:57:38+05:30"}
{"message":"Populating INIT_OPTS","level":"info","timestamp":"2019-12-20T17:57:38+05:30"}
{"message":"Creating controller","level":"info","timestamp":"2019-12-20T17:57:38+05:30"}
{"message":"Initiating controller","level":"info","timestamp":"2019-12-20T17:57:38+05:30"}
{"message":"Initializing controller","level":"info","timestamp":"2019-12-20T17:57:38+05:30"}
{"message":"Starting the controller object with: { LOGGER: \n   DerivedLogger {\n     _readableState: \n      ReadableState {\n        objectMode: true,\n        highWaterMark: 16,\n        buffer: BufferList { head: null, tail: null, length: 0 },\n        length: 0,\n        pipes: [Array],\n        pipesCount: 2,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: false,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        paused: false,\n        emitClose: true,\n        destroyed: false,\n        defaultEncoding: 'utf8',\n        awaitDrain: 0,\n        readingMore: true,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     domain: null,\n     _events: { prefinish: [Function: prefinish], end: [Array], data: [Array] },\n     _eventsCount: 3,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: true,\n        highWaterMark: 16,\n        finalCalled: false,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        destroyed: false,\n        decodeStrings: true,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: false,\n        bufferProcessing: false,\n        onwrite: [Function],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 5,\n        prefinished: false,\n        errorEmitted: false,\n        emitClose: true,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     _transformState: \n      { afterTransform: [Function: bound afterTransform],\n        needTransform: true,\n        transforming: false,\n        writecb: null,\n        writechunk: null,\n        writeencoding: 'utf8' },\n     silent: undefined,\n     format: Format { options: {} },\n     defaultMeta: { timestamp: '2019-12-20T17:57:38+05:30' },\n     levels: \n      { error: 0,\n        warn: 1,\n        info: 2,\n        http: 3,\n        verbose: 4,\n        debug: 5,\n        silly: 6 },\n     level: 'info',\n     exceptions: ExceptionHandler { logger: [Circular], handlers: Map {} },\n     rejections: RejectionHandler { logger: [Circular], handlers: Map {} },\n     profilers: {},\n     exitOnError: true },\n  PROGRAM_OPTS: \n   Command {\n     commands: [],\n     options: [ [Object], [Object], [Object] ],\n     _execs: Set {},\n     _allowUnknownOption: false,\n     _args: [],\n     _name: 'app',\n     _helpFlags: '-h, --help',\n     _helpDescription: 'output usage information',\n     _helpShortFlag: '-h',\n     _helpLongFlag: '--help',\n     Command: { [Function: Command] super_: [Object] },\n     Option: [Function: Option],\n     CommanderError: [Function: CommanderError],\n     _events: \n      { 'option:verbose': [Function],\n        'option:digitalmarketplace': [Function],\n        'option:rsa': [Function] },\n     _eventsCount: 3,\n     rawArgs: \n      [ '/usr/local/bin/node',\n        '/home/gauravkumar/grv_java/readshare-club/app.js' ],\n     args: [] } }","level":"info","timestamp":"2019-12-20T17:57:38+05:30"}
{"message":"Mysql connection created successfully!","level":"info","timestamp":"2019-12-20T17:57:38+05:30"}
{"message":"Set mysql in controller object","level":"info","timestamp":"2019-12-20T17:57:38+05:30"}
{"message":"Initiating test controller","level":"info","timestamp":"2019-12-20T17:57:38+05:30"}
{"message":"Test controller initialised","level":"info","timestamp":"2019-12-20T17:57:38+05:30"}
{"message":"Initiating User Controller","level":"info","timestamp":"2019-12-20T17:57:38+05:30"}
{"message":"User controller initialised","level":"info","timestamp":"2019-12-20T17:57:38+05:30"}
{"message":"Initiating Book Controller","level":"info","timestamp":"2019-12-20T17:57:38+05:30"}
{"message":"Init all dependencies","level":"info","timestamp":"2019-12-20T17:57:38+05:30"}
{"message":"creating the web server","level":"info","timestamp":"2019-12-20T17:57:38+05:30"}
{"message":"Loading express routes","level":"info","timestamp":"2019-12-20T17:57:38+05:30"}
{"message":"read share service listening on port - 3000","level":"info","timestamp":"2019-12-20T17:57:38+05:30"}
{"message":"getUserDataByID_Query : select * from user where id = 4","level":"info","timestamp":"2019-12-20T17:57:38+05:30"}
{"message":"getBookByName_Query : select * from book where name = \"tuesdays with moorie\"","level":"info","timestamp":"2019-12-20T17:57:38+05:30"}
{"message":"book_saveContent : INSERT INTO book_summary(book_id,user_id,content,is_thread,genre) VALUES(1,4,\"hi this is my first book\",0,\"\")","level":"info","timestamp":"2019-12-20T17:57:38+05:30"}
{"message":"getUserDataByID_Query : select * from user where id = 4","level":"info","timestamp":"2019-12-20T17:57:38+05:30"}
{"message":"getBookByName_Query : select * from book where name = \"tuesdays with moorie\"","level":"info","timestamp":"2019-12-20T17:57:38+05:30"}
{"message":"book_saveContent : INSERT INTO book_summary(book_id,user_id,content,is_thread,genre) VALUES(1,4,\"hi this is my first book\",0,\"\")","level":"info","timestamp":"2019-12-20T17:57:38+05:30"}
{"message":"Loading init options","level":"info","timestamp":"2019-12-20T18:06:08+05:30"}
{"message":"Populating INIT_OPTS","level":"info","timestamp":"2019-12-20T18:06:08+05:30"}
{"message":"Creating controller","level":"info","timestamp":"2019-12-20T18:06:08+05:30"}
{"message":"Initiating controller","level":"info","timestamp":"2019-12-20T18:06:08+05:30"}
{"message":"Initializing controller","level":"info","timestamp":"2019-12-20T18:06:08+05:30"}
{"message":"Starting the controller object with: { LOGGER: \n   DerivedLogger {\n     _readableState: \n      ReadableState {\n        objectMode: true,\n        highWaterMark: 16,\n        buffer: BufferList { head: null, tail: null, length: 0 },\n        length: 0,\n        pipes: [Array],\n        pipesCount: 2,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: false,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        paused: false,\n        emitClose: true,\n        destroyed: false,\n        defaultEncoding: 'utf8',\n        awaitDrain: 0,\n        readingMore: true,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     domain: null,\n     _events: { prefinish: [Function: prefinish], end: [Array], data: [Array] },\n     _eventsCount: 3,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: true,\n        highWaterMark: 16,\n        finalCalled: false,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        destroyed: false,\n        decodeStrings: true,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: false,\n        bufferProcessing: false,\n        onwrite: [Function],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 5,\n        prefinished: false,\n        errorEmitted: false,\n        emitClose: true,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     _transformState: \n      { afterTransform: [Function: bound afterTransform],\n        needTransform: true,\n        transforming: false,\n        writecb: null,\n        writechunk: null,\n        writeencoding: 'utf8' },\n     silent: undefined,\n     format: Format { options: {} },\n     defaultMeta: { timestamp: '2019-12-20T18:06:08+05:30' },\n     levels: \n      { error: 0,\n        warn: 1,\n        info: 2,\n        http: 3,\n        verbose: 4,\n        debug: 5,\n        silly: 6 },\n     level: 'info',\n     exceptions: ExceptionHandler { logger: [Circular], handlers: Map {} },\n     rejections: RejectionHandler { logger: [Circular], handlers: Map {} },\n     profilers: {},\n     exitOnError: true },\n  PROGRAM_OPTS: \n   Command {\n     commands: [],\n     options: [ [Object], [Object], [Object] ],\n     _execs: Set {},\n     _allowUnknownOption: false,\n     _args: [],\n     _name: 'app',\n     _helpFlags: '-h, --help',\n     _helpDescription: 'output usage information',\n     _helpShortFlag: '-h',\n     _helpLongFlag: '--help',\n     Command: { [Function: Command] super_: [Object] },\n     Option: [Function: Option],\n     CommanderError: [Function: CommanderError],\n     _events: \n      { 'option:verbose': [Function],\n        'option:digitalmarketplace': [Function],\n        'option:rsa': [Function] },\n     _eventsCount: 3,\n     rawArgs: \n      [ '/usr/local/bin/node',\n        '/home/gauravkumar/grv_java/readshare-club/app.js' ],\n     args: [] } }","level":"info","timestamp":"2019-12-20T18:06:08+05:30"}
{"message":"Mysql connection created successfully!","level":"info","timestamp":"2019-12-20T18:06:08+05:30"}
{"message":"Set mysql in controller object","level":"info","timestamp":"2019-12-20T18:06:08+05:30"}
{"message":"Initiating test controller","level":"info","timestamp":"2019-12-20T18:06:08+05:30"}
{"message":"Test controller initialised","level":"info","timestamp":"2019-12-20T18:06:08+05:30"}
{"message":"Initiating User Controller","level":"info","timestamp":"2019-12-20T18:06:08+05:30"}
{"message":"User controller initialised","level":"info","timestamp":"2019-12-20T18:06:08+05:30"}
{"message":"Initiating Book Controller","level":"info","timestamp":"2019-12-20T18:06:08+05:30"}
{"message":"Init all dependencies","level":"info","timestamp":"2019-12-20T18:06:08+05:30"}
{"message":"creating the web server","level":"info","timestamp":"2019-12-20T18:06:08+05:30"}
{"message":"Loading express routes","level":"info","timestamp":"2019-12-20T18:06:08+05:30"}
{"message":"read share service listening on port - 3000","level":"info","timestamp":"2019-12-20T18:06:08+05:30"}
{"message":"getUserDataByID_Query : select * from user where id = 4","level":"info","timestamp":"2019-12-20T18:06:08+05:30"}
{"message":"getBookByName_Query : select * from book where name = \"tuesdays with moorie\"","level":"info","timestamp":"2019-12-20T18:06:08+05:30"}
{"message":"book_saveContent : INSERT INTO book_summary(book_id,user_id,content,is_thread,genre) VALUES(1,4,\"hi this is my first book\",0,\"\")","level":"info","timestamp":"2019-12-20T18:06:08+05:30"}
{"message":"Loading init options","level":"info","timestamp":"2019-12-20T18:07:05+05:30"}
{"message":"Populating INIT_OPTS","level":"info","timestamp":"2019-12-20T18:07:05+05:30"}
{"message":"Creating controller","level":"info","timestamp":"2019-12-20T18:07:05+05:30"}
{"message":"Initiating controller","level":"info","timestamp":"2019-12-20T18:07:05+05:30"}
{"message":"Initializing controller","level":"info","timestamp":"2019-12-20T18:07:05+05:30"}
{"message":"Starting the controller object with: { LOGGER: \n   DerivedLogger {\n     _readableState: \n      ReadableState {\n        objectMode: true,\n        highWaterMark: 16,\n        buffer: BufferList { head: null, tail: null, length: 0 },\n        length: 0,\n        pipes: [Array],\n        pipesCount: 2,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: false,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        paused: false,\n        emitClose: true,\n        destroyed: false,\n        defaultEncoding: 'utf8',\n        awaitDrain: 0,\n        readingMore: true,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     domain: null,\n     _events: { prefinish: [Function: prefinish], end: [Array], data: [Array] },\n     _eventsCount: 3,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: true,\n        highWaterMark: 16,\n        finalCalled: false,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        destroyed: false,\n        decodeStrings: true,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: false,\n        bufferProcessing: false,\n        onwrite: [Function],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 5,\n        prefinished: false,\n        errorEmitted: false,\n        emitClose: true,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     _transformState: \n      { afterTransform: [Function: bound afterTransform],\n        needTransform: true,\n        transforming: false,\n        writecb: null,\n        writechunk: null,\n        writeencoding: 'utf8' },\n     silent: undefined,\n     format: Format { options: {} },\n     defaultMeta: { timestamp: '2019-12-20T18:07:05+05:30' },\n     levels: \n      { error: 0,\n        warn: 1,\n        info: 2,\n        http: 3,\n        verbose: 4,\n        debug: 5,\n        silly: 6 },\n     level: 'info',\n     exceptions: ExceptionHandler { logger: [Circular], handlers: Map {} },\n     rejections: RejectionHandler { logger: [Circular], handlers: Map {} },\n     profilers: {},\n     exitOnError: true },\n  PROGRAM_OPTS: \n   Command {\n     commands: [],\n     options: [ [Object], [Object], [Object] ],\n     _execs: Set {},\n     _allowUnknownOption: false,\n     _args: [],\n     _name: 'app',\n     _helpFlags: '-h, --help',\n     _helpDescription: 'output usage information',\n     _helpShortFlag: '-h',\n     _helpLongFlag: '--help',\n     Command: { [Function: Command] super_: [Object] },\n     Option: [Function: Option],\n     CommanderError: [Function: CommanderError],\n     _events: \n      { 'option:verbose': [Function],\n        'option:digitalmarketplace': [Function],\n        'option:rsa': [Function] },\n     _eventsCount: 3,\n     rawArgs: \n      [ '/usr/local/bin/node',\n        '/home/gauravkumar/grv_java/readshare-club/app.js' ],\n     args: [] } }","level":"info","timestamp":"2019-12-20T18:07:05+05:30"}
{"message":"Mysql connection created successfully!","level":"info","timestamp":"2019-12-20T18:07:05+05:30"}
{"message":"Set mysql in controller object","level":"info","timestamp":"2019-12-20T18:07:05+05:30"}
{"message":"Initiating test controller","level":"info","timestamp":"2019-12-20T18:07:05+05:30"}
{"message":"Test controller initialised","level":"info","timestamp":"2019-12-20T18:07:05+05:30"}
{"message":"Initiating User Controller","level":"info","timestamp":"2019-12-20T18:07:05+05:30"}
{"message":"User controller initialised","level":"info","timestamp":"2019-12-20T18:07:05+05:30"}
{"message":"Initiating Book Controller","level":"info","timestamp":"2019-12-20T18:07:05+05:30"}
{"message":"Init all dependencies","level":"info","timestamp":"2019-12-20T18:07:05+05:30"}
{"message":"creating the web server","level":"info","timestamp":"2019-12-20T18:07:05+05:30"}
{"message":"Loading express routes","level":"info","timestamp":"2019-12-20T18:07:05+05:30"}
{"message":"read share service listening on port - 3000","level":"info","timestamp":"2019-12-20T18:07:05+05:30"}
{"message":"getUserDataByID_Query : select * from user where id = 4","level":"info","timestamp":"2019-12-20T18:07:05+05:30"}
{"message":"getBookByName_Query : select * from book where name = \"tuesdays with moorie\"","level":"info","timestamp":"2019-12-20T18:07:05+05:30"}
{"message":"book_saveContent : INSERT INTO book_summary(book_id,user_id,content,is_thread,genre) VALUES(1,4,\"hi this is my first book\",0,\"\")","level":"info","timestamp":"2019-12-20T18:07:05+05:30"}
{"message":"getUserDataByID_Query : select * from user where id = 4","level":"info","timestamp":"2019-12-20T18:07:05+05:30"}
{"message":"getBookByName_Query : select * from book where name = \"tuesdays with moorie\"","level":"info","timestamp":"2019-12-20T18:07:05+05:30"}
{"message":"book_saveContent : INSERT INTO book_summary(book_id,user_id,content,is_thread,genre) VALUES(1,4,\"hi this is my first book\",1,\"\")","level":"info","timestamp":"2019-12-20T18:07:05+05:30"}
{"message":"getUserDataByID_Query : select * from user where id = 4","level":"info","timestamp":"2019-12-20T18:07:05+05:30"}
{"message":"getBookByName_Query : select * from book where name = \"tuesdays with moorie\"","level":"info","timestamp":"2019-12-20T18:07:05+05:30"}
{"message":"book_saveContent : INSERT INTO book_summary(book_id,user_id,content,is_thread,genre) VALUES(1,4,\"hi this is my first book\",1,\"philosophy\")","level":"info","timestamp":"2019-12-20T18:07:05+05:30"}
